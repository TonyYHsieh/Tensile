
Kernels.so-000-gfx803.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000002100 Cijk_Ailk_Bljk_SB_MT32x32x2_SE_K1:
	s_load_dwordx2 s[30:31], s[4:5], 0x10                      // 000000002100: C0060782 00000010
	s_load_dwordx2 s[28:29], s[4:5], 0x18                      // 000000002108: C0060702 00000018
	s_load_dwordx8 s[12:19], s[4:5], 0x20                      // 000000002110: C00E0302 00000020
	s_load_dwordx4 s[20:23], s[4:5], 0x40                      // 000000002118: C00A0502 00000040
	s_load_dwordx4 s[24:27], s[4:5], 0x50                      // 000000002120: C00A0602 00000050
	v_lshrrev_b32_e32 v6, 1, v0                                // 000000002128: 200C0081
	v_and_b32_e32 v2, 0x60, v6                                 // 00000000212C: 26040CFF 00000060
	v_bfe_u32 v3, v0, 3, 3                                     // 000000002134: D1C80003 020D0700
	v_or_b32_e32 v15, v3, v2                                   // 00000000213C: 281E0503
	s_waitcnt lgkmcnt(0)                                       // 000000002140: BF8C007F
	v_cvt_f32_u32_e32 v1, s24                                  // 000000002144: 7E020C18
	s_lshl_b32 s7, s7, 5                                       // 000000002148: 8E078507
	v_lshrrev_b32_e32 v14, 5, v0                               // 00000000214C: 201C0085
	v_and_b32_e32 v8, 7, v0                                    // 000000002150: 26100087
	v_rcp_iflag_f32_e32 v1, v1                                 // 000000002154: 7E024701
	s_mov_b32 s33, s9                                          // 000000002158: BEA10009
	v_or_b32_e32 v13, v2, v8                                   // 00000000215C: 281A1102
	v_and_b32_e32 v2, 31, v0                                   // 000000002160: 2604009F
	v_mul_f32_e32 v1, 0x4f800000, v1                           // 000000002164: 0A0202FF 4F800000
	v_cvt_u32_f32_e32 v1, v1                                   // 00000000216C: 7E020F01
	s_lshl_b32 s9, s6, 5                                       // 000000002170: 8E098506
	v_or_b32_e32 v2, s9, v2                                    // 000000002174: 28040409
	v_and_b32_e32 v10, 1, v0                                   // 000000002178: 26140081
	v_mul_lo_u32 v3, v1, s24                                   // 00000000217C: D2850003 00003101
	v_mul_hi_u32 v4, v1, s24                                   // 000000002184: D2860004 00003101
	v_lshlrev_b32_e32 v7, 5, v10                               // 00000000218C: 240E1485
	v_lshrrev_b32_e32 v9, 3, v0                                // 000000002190: 20120083
	v_sub_u32_e32 v5, vcc, 0, v3                               // 000000002194: 340A0680
	v_cmp_eq_u32_e64 s[0:1], 0, v4                             // 000000002198: D0CA0000 00020880
	v_cndmask_b32_e64 v3, v3, v5, s[0:1]                       // 0000000021A0: D1000003 00020B03
	v_mul_hi_u32 v3, v3, v1                                    // 0000000021A8: D2860003 00020303
	s_mov_b32 s11, 0                                           // 0000000021B0: BE8B0080
	s_mov_b32 s10, s18                                         // 0000000021B4: BE8A0012
	v_lshlrev_b32_e32 v17, 2, v0                               // 0000000021B8: 24220082
	v_add_u32_e32 v4, vcc, v3, v1                              // 0000000021BC: 32080303
	v_subrev_u32_e32 v1, vcc, v3, v1                           // 0000000021C0: 36020303
	v_cndmask_b32_e64 v1, v1, v4, s[0:1]                       // 0000000021C4: D1000001 00020901
	v_mul_hi_u32 v1, v1, s8                                    // 0000000021CC: D2860001 00001101
	v_add_u32_e32 v3, vcc, s7, v6                              // 0000000021D4: 32060C07
	v_mov_b32_e32 v12, 0                                       // 0000000021D8: 7E180280
	v_lshlrev_b32_e32 v24, 2, v13                              // 0000000021DC: 24301A82
	v_mul_lo_u32 v1, v1, s24                                   // 0000000021E0: D2850001 00003101
	v_lshlrev_b32_e32 v23, 2, v15                              // 0000000021E8: 242E1E82
	s_mov_b32 s32, s33                                         // 0000000021EC: BEA00021
	s_mov_b32 m0, -1                                           // 0000000021F0: BEFC00C1
	v_sub_u32_e32 v4, vcc, s8, v1                              // 0000000021F4: 34080208
	v_cmp_ge_u32_e64 s[2:3], s8, v1                            // 0000000021F8: D0CE0002 00020208
	v_cmp_le_u32_e64 s[0:1], s24, v4                           // 000000002200: D0CB0000 00020818
	v_add_u32_e32 v5, vcc, s24, v4                             // 000000002208: 320A0818
	v_subrev_u32_e32 v1, vcc, s24, v4                          // 00000000220C: 36020818
	s_and_b64 vcc, s[0:1], s[2:3]                              // 000000002210: 86EA0200
	v_cndmask_b32_e32 v1, v4, v1, vcc                          // 000000002214: 00020304
	v_cndmask_b32_e64 v1, v5, v1, s[2:3]                       // 000000002218: D1000001 000A0305
	v_mul_lo_u32 v4, v14, s18                                  // 000000002220: D2850004 0000250E
	v_mul_lo_u32 v5, v1, s19                                   // 000000002228: D2850005 00002701
	s_add_i32 s0, s22, -1                                      // 000000002230: 8100C116
	v_min_u32_e32 v2, s0, v2                                   // 000000002234: 1C040400
	s_add_i32 s0, s23, -1                                      // 000000002238: 8100C117
	v_min_u32_e32 v3, s0, v3                                   // 00000000223C: 1C060600
	v_add_u32_e32 v2, vcc, v2, v4                              // 000000002240: 32040902
	s_and_b32 s0, s6, s26                                      // 000000002244: 86001A06
	v_add_u32_e32 v11, vcc, v2, v5                             // 000000002248: 32160B02
	v_mul_lo_u32 v2, v3, s20                                   // 00000000224C: D2850002 00002903
	v_add_u32_e32 v0, vcc, v6, v7                              // 000000002254: 32000F06
	s_lshl_b32 s20, s0, 5                                      // 000000002258: 8E148500
	s_lshl_b64 s[2:3], s[10:11], 1                             // 00000000225C: 8E82810A
	v_mov_b32_e32 v6, s20                                      // 000000002260: 7E0C0214
	v_lshlrev_b32_e32 v22, 2, v0                               // 000000002264: 242C0082
	v_alignbit_b32 v0, 0, s18, 31                              // 000000002268: D1CE0000 027C2480
	v_mul_lo_u32 v0, v0, s20                                   // 000000002270: D2850000 00002900
	v_mul_hi_u32 v6, s2, v6                                    // 000000002278: D2860006 00020C02
	v_mul_lo_u32 v3, v1, s21                                   // 000000002280: D2850003 00002B01
	s_mul_i32 s0, s2, s20                                      // 000000002288: 92001402
	v_add_u32_e32 v2, vcc, v2, v10                             // 00000000228C: 32041502
	v_add_u32_e32 v7, vcc, v6, v0                              // 000000002290: 320E0106
	v_mov_b32_e32 v6, s0                                       // 000000002294: 7E0C0200
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002298: D28F0006 00020C82
	v_add_u32_e32 v2, vcc, v2, v3                              // 0000000022A0: 32040702
	s_mov_b32 s21, s11                                         // 0000000022A4: BE95000B
	v_lshlrev_b64 v[4:5], 2, v[11:12]                          // 0000000022A8: D28F0004 00021682
	v_mov_b32_e32 v0, s31                                      // 0000000022B0: 7E00021F
	v_add_u32_e32 v6, vcc, s30, v6                             // 0000000022B4: 320C0C1E
	v_mov_b32_e32 v3, v12                                      // 0000000022B8: 7E06030C
	v_addc_u32_e32 v0, vcc, v7, v0, vcc                        // 0000000022BC: 38000107
	s_lshr_b32 s6, s25, 1                                      // 0000000022C0: 8F068119
	s_lshl_b64 s[0:1], s[20:21], 3                             // 0000000022C4: 8E808314
	v_add_u32_e32 v27, vcc, v6, v4                             // 0000000022C8: 32360906
	s_add_u32 s0, s0, s28                                      // 0000000022CC: 80001C00
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000022D0: D28F0002 00020482
	v_addc_u32_e32 v28, vcc, v0, v5, vcc                       // 0000000022D8: 38380B00
	s_addc_u32 s1, s1, s29                                     // 0000000022DC: 82011D01
	v_mov_b32_e32 v0, s1                                       // 0000000022E0: 7E000201
	v_add_u32_e32 v25, vcc, s0, v2                             // 0000000022E4: 32320400
	v_addc_u32_e32 v26, vcc, v0, v3, vcc                       // 0000000022E8: 38340700
	s_cmp_eq_u32 s6, 0                                         // 0000000022EC: BF068006
	s_cbranch_scc1 BB0_3                                       // 0000000022F0: BF85007C
	v_mov_b32_e32 v0, s6                                       // 0000000022F4: 7E000206
	v_mul_hi_u32 v0, s2, v0                                    // 0000000022F8: D2860000 00020002
	s_mul_i32 s0, s3, s6                                       // 000000002300: 92000603
	s_mul_i32 s1, s2, s6                                       // 000000002304: 92010602
	v_add_u32_e32 v0, vcc, s0, v0                              // 000000002308: 32000000
	s_and_b32 s0, s25, -2                                      // 00000000230C: 8600C219
	v_sub_u32_e64 v29, vcc, 0, s1                              // 000000002310: D11A6A1D 00000280
	s_sub_u32 s0, 0, s0                                        // 000000002318: 80800080
	s_subb_u32 s1, 0, 0                                        // 00000000231C: 82818080
	v_subb_u32_e32 v30, vcc, 0, v0, vcc                        // 000000002320: 3A3C0080
	v_mov_b32_e32 v0, 0                                        // 000000002324: 7E000280
	s_lshl_b64 s[18:19], s[0:1], 2                             // 000000002328: 8E928200
	s_add_i32 s8, s20, 1                                       // 00000000232C: 81088114
	s_mov_b32 s0, s6                                           // 000000002330: BE800006
	v_mov_b32_e32 v2, v0                                       // 000000002334: 7E040300
	v_mov_b32_e32 v3, v0                                       // 000000002338: 7E060300
	v_mov_b32_e32 v4, v0                                       // 00000000233C: 7E080300
	v_mov_b32_e32 v5, v0                                       // 000000002340: 7E0A0300
	v_mov_b32_e32 v6, v0                                       // 000000002344: 7E0C0300
	v_mov_b32_e32 v7, v0                                       // 000000002348: 7E0E0300
	v_mov_b32_e32 v16, v0                                      // 00000000234C: 7E200300
	v_mov_b32_e32 v18, v0                                      // 000000002350: 7E240300
	v_mov_b32_e32 v19, v0                                      // 000000002354: 7E260300
	v_mov_b32_e32 v20, v0                                      // 000000002358: 7E280300
	v_mov_b32_e32 v21, v0                                      // 00000000235C: 7E2A0300
	v_mov_b32_e32 v15, v0                                      // 000000002360: 7E1E0300
	v_mov_b32_e32 v13, v0                                      // 000000002364: 7E1A0300
	v_mov_b32_e32 v11, v0                                      // 000000002368: 7E160300
	v_mov_b32_e32 v12, v0                                      // 00000000236C: 7E180300

0000000000002370 BB0_2:
	flat_load_dword v31, v[25:26]                              // 000000002370: DC500000 1F000019
	flat_load_dword v32, v[27:28]                              // 000000002378: DC500000 2000001B
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002380: BF8C0070
	s_barrier                                                  // 000000002384: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002388: BF8C007F
	s_lshl_b64 s[26:27], s[2:3], 2                             // 00000000238C: 8E9A8202
	v_mov_b32_e32 v37, s27                                     // 000000002390: 7E4A021B
	v_add_u32_e32 v38, vcc, s26, v27                           // 000000002394: 324C361A
	v_addc_u32_e32 v37, vcc, v28, v37, vcc                     // 000000002398: 384A4B1C
	v_add_u32_e32 v25, vcc, 8, v25                             // 00000000239C: 32323288
	v_lshlrev_b64 v[27:28], 2, v[29:30]                        // 0000000023A0: D28F001B 00023A82
	v_addc_u32_e32 v26, vcc, 0, v26, vcc                       // 0000000023A8: 38343480
	v_add_u32_e32 v27, vcc, v38, v27                           // 0000000023AC: 32363726
	v_addc_u32_e32 v28, vcc, v37, v28, vcc                     // 0000000023B0: 38383925
	v_mov_b32_e32 v39, s0                                      // 0000000023B4: 7E4E0200
	v_cmp_eq_u32_e32 vcc, s8, v39                              // 0000000023B8: 7D944E08
	s_add_i32 s10, s0, -1                                      // 0000000023BC: 810AC100
	v_cndmask_b32_e32 v28, v37, v28, vcc                       // 0000000023C0: 00383925
	v_add_u32_e64 v37, s[0:1], s18, v25                        // 0000000023C4: D1190025 00023212
	v_mov_b32_e32 v39, s19                                     // 0000000023CC: 7E4E0213
	v_cndmask_b32_e32 v27, v38, v27, vcc                       // 0000000023D0: 00363726
	v_addc_u32_e64 v38, s[0:1], v26, v39, s[0:1]               // 0000000023D4: D11C0026 00024F1A
	v_cndmask_b32_e32 v26, v26, v38, vcc                       // 0000000023DC: 00344D1A
	v_cndmask_b32_e32 v25, v25, v37, vcc                       // 0000000023E0: 00324B19
	s_cmp_lg_u32 s10, 0                                        // 0000000023E4: BF07800A
	s_mov_b32 s0, s10                                          // 0000000023E8: BE80000A
	ds_write_b32 v17, v32                                      // 0000000023EC: D81A0000 00002011
	ds_write_b32 v22, v31 offset:256                           // 0000000023F4: D81A0100 00001F16
	s_waitcnt lgkmcnt(0)                                       // 0000000023FC: BF8C007F
	s_barrier                                                  // 000000002400: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002404: BF8C007F
	ds_read2_b32 v[31:32], v24 offset1:8                       // 000000002408: D86E0800 1F000018
	ds_read2_b32 v[33:34], v24 offset0:16 offset1:24           // 000000002410: D86E1810 21000018
	ds_read2_b32 v[35:36], v23 offset0:64 offset1:72           // 000000002418: D86E4840 23000017
	ds_read2_b32 v[37:38], v23 offset0:80 offset1:88           // 000000002420: D86E5850 25000017
	s_waitcnt lgkmcnt(1)                                       // 000000002428: BF8C017F
	v_mac_f32_e32 v12, v31, v35                                // 00000000242C: 2C18471F
	v_mac_f32_e32 v11, v32, v35                                // 000000002430: 2C164720
	v_mac_f32_e32 v13, v33, v35                                // 000000002434: 2C1A4721
	v_mac_f32_e32 v15, v34, v35                                // 000000002438: 2C1E4722
	v_mac_f32_e32 v21, v31, v36                                // 00000000243C: 2C2A491F
	v_mac_f32_e32 v20, v32, v36                                // 000000002440: 2C284920
	v_mac_f32_e32 v19, v33, v36                                // 000000002444: 2C264921
	v_mac_f32_e32 v18, v34, v36                                // 000000002448: 2C244922
	ds_read2_b32 v[35:36], v24 offset0:32 offset1:40           // 00000000244C: D86E2820 23000018
	s_waitcnt lgkmcnt(1)                                       // 000000002454: BF8C017F
	v_mac_f32_e32 v16, v31, v37                                // 000000002458: 2C204B1F
	v_mac_f32_e32 v7, v32, v37                                 // 00000000245C: 2C0E4B20
	v_mac_f32_e32 v4, v31, v38                                 // 000000002460: 2C084D1F
	v_mac_f32_e32 v3, v32, v38                                 // 000000002464: 2C064D20
	ds_read2_b32 v[31:32], v23 offset0:96 offset1:104          // 000000002468: D86E6860 1F000017
	v_mac_f32_e32 v6, v33, v37                                 // 000000002470: 2C0C4B21
	v_mac_f32_e32 v5, v34, v37                                 // 000000002474: 2C0A4B22
	v_mac_f32_e32 v2, v33, v38                                 // 000000002478: 2C044D21
	v_mac_f32_e32 v0, v34, v38                                 // 00000000247C: 2C004D22
	ds_read2_b32 v[33:34], v24 offset0:48 offset1:56           // 000000002480: D86E3830 21000018
	ds_read2_b32 v[37:38], v23 offset0:112 offset1:120         // 000000002488: D86E7870 25000017
	s_waitcnt lgkmcnt(2)                                       // 000000002490: BF8C027F
	v_mac_f32_e32 v12, v35, v31                                // 000000002494: 2C183F23
	v_mac_f32_e32 v11, v36, v31                                // 000000002498: 2C163F24
	v_mac_f32_e32 v21, v35, v32                                // 00000000249C: 2C2A4123
	s_waitcnt lgkmcnt(1)                                       // 0000000024A0: BF8C017F
	v_mac_f32_e32 v13, v33, v31                                // 0000000024A4: 2C1A3F21
	v_mac_f32_e32 v15, v34, v31                                // 0000000024A8: 2C1E3F22
	v_mac_f32_e32 v20, v36, v32                                // 0000000024AC: 2C284124
	v_mac_f32_e32 v19, v33, v32                                // 0000000024B0: 2C264121
	v_mac_f32_e32 v18, v34, v32                                // 0000000024B4: 2C244122
	s_waitcnt lgkmcnt(0)                                       // 0000000024B8: BF8C007F
	v_mac_f32_e32 v16, v35, v37                                // 0000000024BC: 2C204B23
	v_mac_f32_e32 v7, v36, v37                                 // 0000000024C0: 2C0E4B24
	v_mac_f32_e32 v4, v35, v38                                 // 0000000024C4: 2C084D23
	v_mac_f32_e32 v3, v36, v38                                 // 0000000024C8: 2C064D24
	v_mac_f32_e32 v6, v33, v37                                 // 0000000024CC: 2C0C4B21
	v_mac_f32_e32 v5, v34, v37                                 // 0000000024D0: 2C0A4B22
	v_mac_f32_e32 v2, v33, v38                                 // 0000000024D4: 2C044D21
	v_mac_f32_e32 v0, v34, v38                                 // 0000000024D8: 2C004D22
	s_cbranch_scc1 BB0_2                                       // 0000000024DC: BF85FFA4
	s_branch BB0_4                                             // 0000000024E0: BF82000F

00000000000024e4 BB0_3:
	v_mov_b32_e32 v11, v12                                     // 0000000024E4: 7E16030C
	v_mov_b32_e32 v13, v12                                     // 0000000024E8: 7E1A030C
	v_mov_b32_e32 v15, v12                                     // 0000000024EC: 7E1E030C
	v_mov_b32_e32 v21, v12                                     // 0000000024F0: 7E2A030C
	v_mov_b32_e32 v20, v12                                     // 0000000024F4: 7E28030C
	v_mov_b32_e32 v19, v12                                     // 0000000024F8: 7E26030C
	v_mov_b32_e32 v18, v12                                     // 0000000024FC: 7E24030C
	v_mov_b32_e32 v16, v12                                     // 000000002500: 7E20030C
	v_mov_b32_e32 v7, v12                                      // 000000002504: 7E0E030C
	v_mov_b32_e32 v6, v12                                      // 000000002508: 7E0C030C
	v_mov_b32_e32 v5, v12                                      // 00000000250C: 7E0A030C
	v_mov_b32_e32 v4, v12                                      // 000000002510: 7E08030C
	v_mov_b32_e32 v3, v12                                      // 000000002514: 7E06030C
	v_mov_b32_e32 v2, v12                                      // 000000002518: 7E04030C
	v_mov_b32_e32 v0, v12                                      // 00000000251C: 7E00030C

0000000000002520 BB0_4:
	s_and_b32 s0, s25, 1                                       // 000000002520: 86008119
	v_cmp_gt_u32_e32 vcc, s0, v14                              // 000000002524: 7D981C00
	s_sub_i32 s10, s6, s20                                     // 000000002528: 818A1406
	v_mov_b32_e32 v14, 0                                       // 00000000252C: 7E1C0280
	s_and_saveexec_b64 s[18:19], vcc                           // 000000002530: BE92206A
	s_cbranch_execz BB0_6                                      // 000000002534: BF88000D

0000000000002538 BB0_5:
	v_mov_b32_e32 v14, s10                                     // 000000002538: 7E1C020A
	v_mul_hi_u32 v14, s2, v14                                  // 00000000253C: D286000E 00021C02
	s_mul_i32 s1, s3, s10                                      // 000000002544: 92010A03
	s_mul_i32 s2, s2, s10                                      // 000000002548: 92020A02
	v_mov_b32_e32 v29, s2                                      // 00000000254C: 7E3A0202
	v_add_u32_e32 v30, vcc, s1, v14                            // 000000002550: 323C1C01
	v_lshlrev_b64 v[29:30], 2, v[29:30]                        // 000000002554: D28F001D 00023A82
	v_add_u32_e32 v27, vcc, v27, v29                           // 00000000255C: 32363B1B
	v_addc_u32_e32 v28, vcc, v28, v30, vcc                     // 000000002560: 38383D1C
	flat_load_dword v14, v[27:28]                              // 000000002564: DC500000 0E00001B

000000000000256c BB0_6:
	s_or_b64 exec, exec, s[18:19]                              // 00000000256C: 87FE127E
	v_cmp_gt_u32_e32 vcc, s0, v10                              // 000000002570: 7D981400
	v_mov_b32_e32 v10, 0                                       // 000000002574: 7E140280
	s_and_saveexec_b64 s[2:3], vcc                             // 000000002578: BE82206A
	s_cbranch_execz BB0_8                                      // 00000000257C: BF880006

0000000000002580 BB0_7:
	s_lshl_b64 s[10:11], s[10:11], 3                           // 000000002580: 8E8A830A
	v_mov_b32_e32 v10, s11                                     // 000000002584: 7E14020B
	v_add_u32_e32 v25, vcc, s10, v25                           // 000000002588: 3232320A
	v_addc_u32_e32 v26, vcc, v26, v10, vcc                     // 00000000258C: 3834151A
	flat_load_dword v10, v[25:26]                              // 000000002590: DC500000 0A000019

0000000000002598 BB0_8:
	s_or_b64 exec, exec, s[2:3]                                // 000000002598: 87FE027E
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000259C: BF8C0070
	s_barrier                                                  // 0000000025A0: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000025A4: BF8C007F
	ds_write_b32 v17, v14                                      // 0000000025A8: D81A0000 00000E11
	ds_write_b32 v22, v10 offset:256                           // 0000000025B0: D81A0100 00000A16
	s_waitcnt lgkmcnt(0)                                       // 0000000025B8: BF8C007F
	s_barrier                                                  // 0000000025BC: BF8A0000
	s_load_dwordx2 s[10:11], s[4:5], 0x0                       // 0000000025C0: C0060282 00000000
	s_load_dwordx2 s[18:19], s[4:5], 0x8                       // 0000000025C8: C0060482 00000008
	s_cmp_eq_u32 s0, 0                                         // 0000000025D0: BF068000
	s_waitcnt lgkmcnt(0)                                       // 0000000025D4: BF8C007F
	s_cbranch_scc1 BB0_10                                      // 0000000025D8: BF85001B
	ds_read2_b32 v[25:26], v24 offset1:8                       // 0000000025DC: D86E0800 19000018
	ds_read2_b32 v[27:28], v23 offset0:64 offset1:72           // 0000000025E4: D86E4840 1B000017
	ds_read2_b32 v[29:30], v24 offset0:16 offset1:24           // 0000000025EC: D86E1810 1D000018
	ds_read2_b32 v[22:23], v23 offset0:80 offset1:88           // 0000000025F4: D86E5850 16000017
	s_waitcnt lgkmcnt(2)                                       // 0000000025FC: BF8C027F
	v_mac_f32_e32 v12, v25, v27                                // 000000002600: 2C183719
	v_mac_f32_e32 v11, v26, v27                                // 000000002604: 2C16371A
	s_waitcnt lgkmcnt(1)                                       // 000000002608: BF8C017F
	v_mac_f32_e32 v13, v29, v27                                // 00000000260C: 2C1A371D
	v_mac_f32_e32 v15, v30, v27                                // 000000002610: 2C1E371E
	v_mac_f32_e32 v21, v25, v28                                // 000000002614: 2C2A3919
	v_mac_f32_e32 v20, v26, v28                                // 000000002618: 2C28391A
	v_mac_f32_e32 v19, v29, v28                                // 00000000261C: 2C26391D
	v_mac_f32_e32 v18, v30, v28                                // 000000002620: 2C24391E
	s_waitcnt lgkmcnt(0)                                       // 000000002624: BF8C007F
	v_mac_f32_e32 v16, v25, v22                                // 000000002628: 2C202D19
	v_mac_f32_e32 v7, v26, v22                                 // 00000000262C: 2C0E2D1A
	v_mac_f32_e32 v4, v25, v23                                 // 000000002630: 2C082F19
	v_mac_f32_e32 v3, v26, v23                                 // 000000002634: 2C062F1A
	v_mac_f32_e32 v6, v29, v22                                 // 000000002638: 2C0C2D1D
	v_mac_f32_e32 v5, v30, v22                                 // 00000000263C: 2C0A2D1E
	v_mac_f32_e32 v2, v29, v23                                 // 000000002640: 2C042F1D
	v_mac_f32_e32 v0, v30, v23                                 // 000000002644: 2C002F1E

0000000000002648 BB0_10:
	v_or_b32_e32 v8, s9, v8                                    // 000000002648: 28101009
	v_add_u32_e32 v17, vcc, s7, v9                             // 00000000264C: 32221207
	v_cmp_gt_u32_e64 s[0:1], s22, v8                           // 000000002650: D0CC0000 00021016
	v_cmp_gt_u32_e64 s[8:9], s23, v17                          // 000000002658: D0CC0008 00022217
	s_and_b64 s[4:5], s[0:1], s[8:9]                           // 000000002660: 86840800
	s_and_saveexec_b64 s[2:3], s[4:5]                          // 000000002664: BE822004
	s_cbranch_execz BB0_14                                     // 000000002668: BF88001E

000000000000266c BB0_11:
	v_cmp_neq_f32_e64 s[4:5], s13, 0                           // 00000000266C: D04D0004 0001000D
	v_mul_f32_e32 v10, s12, v12                                // 000000002674: 0A14180C
	v_mov_b32_e32 v9, 0                                        // 000000002678: 7E120280
	s_and_b64 vcc, exec, s[4:5]                                // 00000000267C: 86EA047E
	s_cbranch_vccz BB0_13                                      // 000000002680: BF86000D
	v_mad_u64_u32 v[22:23], s[4:5], s16, v17, v[8:9]           // 000000002684: D1E80416 04222210
	v_mov_b32_e32 v12, s19                                     // 00000000268C: 7E180213
	v_mad_u64_u32 v[22:23], s[4:5], v1, s17, v[22:23]          // 000000002690: D1E80416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002698: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s18, v22                           // 0000000026A0: 322C2C12
	v_addc_u32_e32 v23, vcc, v12, v23, vcc                     // 0000000026A4: 382E2F0C
	flat_load_dword v12, v[22:23]                              // 0000000026A8: DC500000 0C000016
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000026B0: BF8C0070
	v_mac_f32_e32 v10, s13, v12                                // 0000000026B4: 2C14180D

00000000000026b8 BB0_13:
	v_mad_u64_u32 v[22:23], s[4:5], v1, s15, v[8:9]            // 0000000026B8: D1E80416 04201F01
	v_mov_b32_e32 v9, s11                                      // 0000000026C0: 7E12020B
	v_mad_u64_u32 v[22:23], s[4:5], v17, s14, v[22:23]         // 0000000026C4: D1E80416 04581D11
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000026CC: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s10, v22                           // 0000000026D4: 322C2C0A
	v_addc_u32_e32 v23, vcc, v9, v23, vcc                      // 0000000026D8: 382E2F09
	flat_store_dword v[22:23], v10                             // 0000000026DC: DC700000 00000A16

00000000000026e4 BB0_14:
	s_or_b64 exec, exec, s[2:3]                                // 0000000026E4: 87FE027E
	v_or_b32_e32 v10, 8, v8                                    // 0000000026E8: 28141088
	v_cmp_gt_u32_e64 s[2:3], s22, v10                          // 0000000026EC: D0CC0002 00021416
	s_and_b64 s[6:7], s[2:3], s[8:9]                           // 0000000026F4: 86860802
	s_and_saveexec_b64 s[4:5], s[6:7]                          // 0000000026F8: BE842006
	s_cbranch_execz BB0_18                                     // 0000000026FC: BF88001E

0000000000002700 BB0_15:
	v_cmp_neq_f32_e64 s[6:7], s13, 0                           // 000000002700: D04D0006 0001000D
	v_mul_f32_e32 v9, s12, v11                                 // 000000002708: 0A12160C
	v_mov_b32_e32 v11, 0                                       // 00000000270C: 7E160280
	s_and_b64 vcc, exec, s[6:7]                                // 000000002710: 86EA067E
	s_cbranch_vccz BB0_17                                      // 000000002714: BF86000D
	v_mad_u64_u32 v[22:23], s[6:7], s16, v17, v[10:11]         // 000000002718: D1E80616 042A2210
	v_mov_b32_e32 v12, s19                                     // 000000002720: 7E180213
	v_mad_u64_u32 v[22:23], s[6:7], v1, s17, v[22:23]          // 000000002724: D1E80616 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 00000000272C: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s18, v22                           // 000000002734: 322C2C12
	v_addc_u32_e32 v23, vcc, v12, v23, vcc                     // 000000002738: 382E2F0C
	flat_load_dword v12, v[22:23]                              // 00000000273C: DC500000 0C000016
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002744: BF8C0070
	v_mac_f32_e32 v9, s13, v12                                 // 000000002748: 2C12180D

000000000000274c BB0_17:
	v_mad_u64_u32 v[11:12], s[6:7], v1, s15, v[10:11]          // 00000000274C: D1E8060B 04281F01
	v_mov_b32_e32 v14, s11                                     // 000000002754: 7E1C020B
	v_mad_u64_u32 v[11:12], s[6:7], v17, s14, v[11:12]         // 000000002758: D1E8060B 042C1D11
	v_lshlrev_b64 v[11:12], 2, v[11:12]                        // 000000002760: D28F000B 00021682
	v_add_u32_e32 v11, vcc, s10, v11                           // 000000002768: 3216160A
	v_addc_u32_e32 v12, vcc, v14, v12, vcc                     // 00000000276C: 3818190E
	flat_store_dword v[11:12], v9                              // 000000002770: DC700000 0000090B

0000000000002778 BB0_18:
	s_or_b64 exec, exec, s[4:5]                                // 000000002778: 87FE047E
	v_or_b32_e32 v12, 16, v8                                   // 00000000277C: 28181090
	v_cmp_gt_u32_e64 s[4:5], s22, v12                          // 000000002780: D0CC0004 00021816
	s_and_b64 s[20:21], s[4:5], s[8:9]                         // 000000002788: 86940804
	s_and_saveexec_b64 s[6:7], s[20:21]                        // 00000000278C: BE862014
	s_cbranch_execz BB0_22                                     // 000000002790: BF88001E

0000000000002794 BB0_19:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002794: D04D0014 0001000D
	v_mul_f32_e32 v9, s12, v13                                 // 00000000279C: 0A121A0C
	v_mov_b32_e32 v13, 0                                       // 0000000027A0: 7E1A0280
	s_and_b64 vcc, exec, s[20:21]                              // 0000000027A4: 86EA147E
	s_cbranch_vccz BB0_21                                      // 0000000027A8: BF86000D
	v_mad_u64_u32 v[22:23], s[20:21], s16, v17, v[12:13]       // 0000000027AC: D1E81416 04322210
	v_mov_b32_e32 v11, s19                                     // 0000000027B4: 7E160213
	v_mad_u64_u32 v[22:23], s[20:21], v1, s17, v[22:23]        // 0000000027B8: D1E81416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000027C0: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s18, v22                           // 0000000027C8: 322C2C12
	v_addc_u32_e32 v23, vcc, v11, v23, vcc                     // 0000000027CC: 382E2F0B
	flat_load_dword v11, v[22:23]                              // 0000000027D0: DC500000 0B000016
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000027D8: BF8C0070
	v_mac_f32_e32 v9, s13, v11                                 // 0000000027DC: 2C12160D

00000000000027e0 BB0_21:
	v_mad_u64_u32 v[13:14], s[20:21], v1, s15, v[12:13]        // 0000000027E0: D1E8140D 04301F01
	v_mov_b32_e32 v11, s11                                     // 0000000027E8: 7E16020B
	v_mad_u64_u32 v[13:14], s[20:21], v17, s14, v[13:14]       // 0000000027EC: D1E8140D 04341D11
	v_lshlrev_b64 v[13:14], 2, v[13:14]                        // 0000000027F4: D28F000D 00021A82
	v_add_u32_e32 v13, vcc, s10, v13                           // 0000000027FC: 321A1A0A
	v_addc_u32_e32 v14, vcc, v11, v14, vcc                     // 000000002800: 381C1D0B
	flat_store_dword v[13:14], v9                              // 000000002804: DC700000 0000090D

000000000000280c BB0_22:
	s_or_b64 exec, exec, s[6:7]                                // 00000000280C: 87FE067E
	v_or_b32_e32 v14, 24, v8                                   // 000000002810: 281C1098
	v_cmp_gt_u32_e64 s[6:7], s22, v14                          // 000000002814: D0CC0006 00021C16
	s_and_b64 s[20:21], s[6:7], s[8:9]                         // 00000000281C: 86940806
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002820: BE882014
	s_cbranch_execz BB0_26                                     // 000000002824: BF88001E

0000000000002828 BB0_23:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002828: D04D0014 0001000D
	v_mul_f32_e32 v9, s12, v15                                 // 000000002830: 0A121E0C
	v_mov_b32_e32 v15, 0                                       // 000000002834: 7E1E0280
	s_and_b64 vcc, exec, s[20:21]                              // 000000002838: 86EA147E
	s_cbranch_vccz BB0_25                                      // 00000000283C: BF86000D
	v_mad_u64_u32 v[22:23], s[20:21], s16, v17, v[14:15]       // 000000002840: D1E81416 043A2210
	v_mov_b32_e32 v11, s19                                     // 000000002848: 7E160213
	v_mad_u64_u32 v[22:23], s[20:21], v1, s17, v[22:23]        // 00000000284C: D1E81416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002854: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s18, v22                           // 00000000285C: 322C2C12
	v_addc_u32_e32 v23, vcc, v11, v23, vcc                     // 000000002860: 382E2F0B
	flat_load_dword v11, v[22:23]                              // 000000002864: DC500000 0B000016
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000286C: BF8C0070
	v_mac_f32_e32 v9, s13, v11                                 // 000000002870: 2C12160D

0000000000002874 BB0_25:
	v_mad_u64_u32 v[22:23], s[20:21], v1, s15, v[14:15]        // 000000002874: D1E81416 04381F01
	v_mov_b32_e32 v11, s11                                     // 00000000287C: 7E16020B
	v_mad_u64_u32 v[22:23], s[20:21], v17, s14, v[22:23]       // 000000002880: D1E81416 04581D11
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002888: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s10, v22                           // 000000002890: 322C2C0A
	v_addc_u32_e32 v23, vcc, v11, v23, vcc                     // 000000002894: 382E2F0B
	flat_store_dword v[22:23], v9                              // 000000002898: DC700000 00000916

00000000000028a0 BB0_26:
	s_or_b64 exec, exec, s[8:9]                                // 0000000028A0: 87FE087E
	v_add_u32_e32 v9, vcc, 8, v17                              // 0000000028A4: 32122288
	v_cmp_gt_u32_e64 s[8:9], s23, v9                           // 0000000028A8: D0CC0008 00021217
	s_and_b64 s[24:25], s[0:1], s[8:9]                         // 0000000028B0: 86980800
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 0000000028B4: BE942018
	s_cbranch_execz BB0_30                                     // 0000000028B8: BF88001F

00000000000028bc BB0_27:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 0000000028BC: D04D0018 0001000D
	v_mul_f32_e32 v11, s12, v21                                // 0000000028C4: 0A162A0C
	v_mov_b32_e32 v22, 0                                       // 0000000028C8: 7E2C0280
	v_mov_b32_e32 v21, v8                                      // 0000000028CC: 7E2A0308
	s_and_b64 vcc, exec, s[24:25]                              // 0000000028D0: 86EA187E
	s_cbranch_vccz BB0_29                                      // 0000000028D4: BF86000D
	v_mad_u64_u32 v[23:24], s[24:25], s16, v9, v[21:22]        // 0000000028D8: D1E81817 04561210
	v_mov_b32_e32 v13, s19                                     // 0000000028E0: 7E1A0213
	v_mad_u64_u32 v[23:24], s[24:25], v1, s17, v[23:24]        // 0000000028E4: D1E81817 045C2301
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 0000000028EC: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s18, v23                           // 0000000028F4: 322E2E12
	v_addc_u32_e32 v24, vcc, v13, v24, vcc                     // 0000000028F8: 3830310D
	flat_load_dword v13, v[23:24]                              // 0000000028FC: DC500000 0D000017
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002904: BF8C0070
	v_mac_f32_e32 v11, s13, v13                                // 000000002908: 2C161A0D

000000000000290c BB0_29:
	v_mad_u64_u32 v[21:22], s[24:25], v1, s15, v[21:22]        // 00000000290C: D1E81815 04541F01
	v_mov_b32_e32 v13, s11                                     // 000000002914: 7E1A020B
	v_mad_u64_u32 v[21:22], s[24:25], v9, s14, v[21:22]        // 000000002918: D1E81815 04541D09
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002920: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s10, v21                           // 000000002928: 322A2A0A
	v_addc_u32_e32 v22, vcc, v13, v22, vcc                     // 00000000292C: 382C2D0D
	flat_store_dword v[21:22], v11                             // 000000002930: DC700000 00000B15

0000000000002938 BB0_30:
	s_or_b64 exec, exec, s[20:21]                              // 000000002938: 87FE147E
	s_and_b64 s[24:25], s[2:3], s[8:9]                         // 00000000293C: 86980802
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002940: BE942018
	s_cbranch_execz BB0_34                                     // 000000002944: BF88001F

0000000000002948 BB0_31:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002948: D04D0018 0001000D
	v_mul_f32_e32 v11, s12, v20                                // 000000002950: 0A16280C
	v_mov_b32_e32 v21, 0                                       // 000000002954: 7E2A0280
	v_mov_b32_e32 v20, v10                                     // 000000002958: 7E28030A
	s_and_b64 vcc, exec, s[24:25]                              // 00000000295C: 86EA187E
	s_cbranch_vccz BB0_33                                      // 000000002960: BF86000D
	v_mad_u64_u32 v[22:23], s[24:25], s16, v9, v[20:21]        // 000000002964: D1E81816 04521210
	v_mov_b32_e32 v13, s19                                     // 00000000296C: 7E1A0213
	v_mad_u64_u32 v[22:23], s[24:25], v1, s17, v[22:23]        // 000000002970: D1E81816 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002978: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s18, v22                           // 000000002980: 322C2C12
	v_addc_u32_e32 v23, vcc, v13, v23, vcc                     // 000000002984: 382E2F0D
	flat_load_dword v13, v[22:23]                              // 000000002988: DC500000 0D000016
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002990: BF8C0070
	v_mac_f32_e32 v11, s13, v13                                // 000000002994: 2C161A0D

0000000000002998 BB0_33:
	v_mad_u64_u32 v[20:21], s[24:25], v1, s15, v[20:21]        // 000000002998: D1E81814 04501F01
	v_mov_b32_e32 v13, s11                                     // 0000000029A0: 7E1A020B
	v_mad_u64_u32 v[20:21], s[24:25], v9, s14, v[20:21]        // 0000000029A4: D1E81814 04501D09
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 0000000029AC: D28F0014 00022882
	v_add_u32_e32 v20, vcc, s10, v20                           // 0000000029B4: 3228280A
	v_addc_u32_e32 v21, vcc, v13, v21, vcc                     // 0000000029B8: 382A2B0D
	flat_store_dword v[20:21], v11                             // 0000000029BC: DC700000 00000B14

00000000000029c4 BB0_34:
	s_or_b64 exec, exec, s[20:21]                              // 0000000029C4: 87FE147E
	s_and_b64 s[24:25], s[4:5], s[8:9]                         // 0000000029C8: 86980804
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 0000000029CC: BE942018
	s_cbranch_execz BB0_38                                     // 0000000029D0: BF88001F

00000000000029d4 BB0_35:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 0000000029D4: D04D0018 0001000D
	v_mul_f32_e32 v11, s12, v19                                // 0000000029DC: 0A16260C
	v_mov_b32_e32 v20, 0                                       // 0000000029E0: 7E280280
	v_mov_b32_e32 v19, v12                                     // 0000000029E4: 7E26030C
	s_and_b64 vcc, exec, s[24:25]                              // 0000000029E8: 86EA187E
	s_cbranch_vccz BB0_37                                      // 0000000029EC: BF86000D
	v_mad_u64_u32 v[21:22], s[24:25], s16, v9, v[19:20]        // 0000000029F0: D1E81815 044E1210
	v_mov_b32_e32 v13, s19                                     // 0000000029F8: 7E1A0213
	v_mad_u64_u32 v[21:22], s[24:25], v1, s17, v[21:22]        // 0000000029FC: D1E81815 04542301
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002A04: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s18, v21                           // 000000002A0C: 322A2A12
	v_addc_u32_e32 v22, vcc, v13, v22, vcc                     // 000000002A10: 382C2D0D
	flat_load_dword v13, v[21:22]                              // 000000002A14: DC500000 0D000015
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002A1C: BF8C0070
	v_mac_f32_e32 v11, s13, v13                                // 000000002A20: 2C161A0D

0000000000002a24 BB0_37:
	v_mad_u64_u32 v[19:20], s[24:25], v1, s15, v[19:20]        // 000000002A24: D1E81813 044C1F01
	v_mov_b32_e32 v13, s11                                     // 000000002A2C: 7E1A020B
	v_mad_u64_u32 v[19:20], s[24:25], v9, s14, v[19:20]        // 000000002A30: D1E81813 044C1D09
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002A38: D28F0013 00022682
	v_add_u32_e32 v19, vcc, s10, v19                           // 000000002A40: 3226260A
	v_addc_u32_e32 v20, vcc, v13, v20, vcc                     // 000000002A44: 3828290D
	flat_store_dword v[19:20], v11                             // 000000002A48: DC700000 00000B13

0000000000002a50 BB0_38:
	s_or_b64 exec, exec, s[20:21]                              // 000000002A50: 87FE147E
	s_and_b64 s[20:21], s[6:7], s[8:9]                         // 000000002A54: 86940806
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002A58: BE882014
	s_cbranch_execz BB0_42                                     // 000000002A5C: BF88001F

0000000000002a60 BB0_39:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002A60: D04D0014 0001000D
	v_mul_f32_e32 v11, s12, v18                                // 000000002A68: 0A16240C
	v_mov_b32_e32 v19, 0                                       // 000000002A6C: 7E260280
	v_mov_b32_e32 v18, v14                                     // 000000002A70: 7E24030E
	s_and_b64 vcc, exec, s[20:21]                              // 000000002A74: 86EA147E
	s_cbranch_vccz BB0_41                                      // 000000002A78: BF86000D
	v_mad_u64_u32 v[20:21], s[20:21], s16, v9, v[18:19]        // 000000002A7C: D1E81414 044A1210
	v_mov_b32_e32 v13, s19                                     // 000000002A84: 7E1A0213
	v_mad_u64_u32 v[20:21], s[20:21], v1, s17, v[20:21]        // 000000002A88: D1E81414 04502301
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000002A90: D28F0014 00022882
	v_add_u32_e32 v20, vcc, s18, v20                           // 000000002A98: 32282812
	v_addc_u32_e32 v21, vcc, v13, v21, vcc                     // 000000002A9C: 382A2B0D
	flat_load_dword v13, v[20:21]                              // 000000002AA0: DC500000 0D000014
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002AA8: BF8C0070
	v_mac_f32_e32 v11, s13, v13                                // 000000002AAC: 2C161A0D

0000000000002ab0 BB0_41:
	v_mad_u64_u32 v[18:19], s[20:21], v1, s15, v[18:19]        // 000000002AB0: D1E81412 04481F01
	v_mad_u64_u32 v[18:19], s[20:21], v9, s14, v[18:19]        // 000000002AB8: D1E81412 04481D09
	v_mov_b32_e32 v9, s11                                      // 000000002AC0: 7E12020B
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000002AC4: D28F0012 00022482
	v_add_u32_e32 v18, vcc, s10, v18                           // 000000002ACC: 3224240A
	v_addc_u32_e32 v19, vcc, v9, v19, vcc                      // 000000002AD0: 38262709
	flat_store_dword v[18:19], v11                             // 000000002AD4: DC700000 00000B12

0000000000002adc BB0_42:
	s_or_b64 exec, exec, s[8:9]                                // 000000002ADC: 87FE087E
	v_add_u32_e32 v9, vcc, 16, v17                             // 000000002AE0: 32122290
	v_cmp_gt_u32_e64 s[8:9], s23, v9                           // 000000002AE4: D0CC0008 00021217
	s_and_b64 s[24:25], s[0:1], s[8:9]                         // 000000002AEC: 86980800
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002AF0: BE942018
	s_cbranch_execz BB0_46                                     // 000000002AF4: BF88001F

0000000000002af8 BB0_43:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002AF8: D04D0018 0001000D
	v_mul_f32_e32 v11, s12, v16                                // 000000002B00: 0A16200C
	v_mov_b32_e32 v16, 0                                       // 000000002B04: 7E200280
	v_mov_b32_e32 v15, v8                                      // 000000002B08: 7E1E0308
	s_and_b64 vcc, exec, s[24:25]                              // 000000002B0C: 86EA187E
	s_cbranch_vccz BB0_45                                      // 000000002B10: BF86000D
	v_mad_u64_u32 v[18:19], s[24:25], s16, v9, v[15:16]        // 000000002B14: D1E81812 043E1210
	v_mov_b32_e32 v13, s19                                     // 000000002B1C: 7E1A0213
	v_mad_u64_u32 v[18:19], s[24:25], v1, s17, v[18:19]        // 000000002B20: D1E81812 04482301
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000002B28: D28F0012 00022482
	v_add_u32_e32 v18, vcc, s18, v18                           // 000000002B30: 32242412
	v_addc_u32_e32 v19, vcc, v13, v19, vcc                     // 000000002B34: 3826270D
	flat_load_dword v13, v[18:19]                              // 000000002B38: DC500000 0D000012
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002B40: BF8C0070
	v_mac_f32_e32 v11, s13, v13                                // 000000002B44: 2C161A0D

0000000000002b48 BB0_45:
	v_mad_u64_u32 v[15:16], s[24:25], v1, s15, v[15:16]        // 000000002B48: D1E8180F 043C1F01
	v_mov_b32_e32 v13, s11                                     // 000000002B50: 7E1A020B
	v_mad_u64_u32 v[15:16], s[24:25], v9, s14, v[15:16]        // 000000002B54: D1E8180F 043C1D09
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002B5C: D28F000F 00021E82
	v_add_u32_e32 v15, vcc, s10, v15                           // 000000002B64: 321E1E0A
	v_addc_u32_e32 v16, vcc, v13, v16, vcc                     // 000000002B68: 3820210D
	flat_store_dword v[15:16], v11                             // 000000002B6C: DC700000 00000B0F

0000000000002b74 BB0_46:
	s_or_b64 exec, exec, s[20:21]                              // 000000002B74: 87FE147E
	s_and_b64 s[24:25], s[2:3], s[8:9]                         // 000000002B78: 86980802
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002B7C: BE942018
	s_cbranch_execz BB0_50                                     // 000000002B80: BF88001F

0000000000002b84 BB0_47:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002B84: D04D0018 0001000D
	v_mul_f32_e32 v7, s12, v7                                  // 000000002B8C: 0A0E0E0C
	v_mov_b32_e32 v16, 0                                       // 000000002B90: 7E200280
	v_mov_b32_e32 v15, v10                                     // 000000002B94: 7E1E030A
	s_and_b64 vcc, exec, s[24:25]                              // 000000002B98: 86EA187E
	s_cbranch_vccz BB0_49                                      // 000000002B9C: BF86000D
	v_mad_u64_u32 v[18:19], s[24:25], s16, v9, v[15:16]        // 000000002BA0: D1E81812 043E1210
	v_mov_b32_e32 v11, s19                                     // 000000002BA8: 7E160213
	v_mad_u64_u32 v[18:19], s[24:25], v1, s17, v[18:19]        // 000000002BAC: D1E81812 04482301
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000002BB4: D28F0012 00022482
	v_add_u32_e32 v18, vcc, s18, v18                           // 000000002BBC: 32242412
	v_addc_u32_e32 v19, vcc, v11, v19, vcc                     // 000000002BC0: 3826270B
	flat_load_dword v11, v[18:19]                              // 000000002BC4: DC500000 0B000012
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002BCC: BF8C0070
	v_mac_f32_e32 v7, s13, v11                                 // 000000002BD0: 2C0E160D

0000000000002bd4 BB0_49:
	v_mad_u64_u32 v[15:16], s[24:25], v1, s15, v[15:16]        // 000000002BD4: D1E8180F 043C1F01
	v_mov_b32_e32 v11, s11                                     // 000000002BDC: 7E16020B
	v_mad_u64_u32 v[15:16], s[24:25], v9, s14, v[15:16]        // 000000002BE0: D1E8180F 043C1D09
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002BE8: D28F000F 00021E82
	v_add_u32_e32 v15, vcc, s10, v15                           // 000000002BF0: 321E1E0A
	v_addc_u32_e32 v16, vcc, v11, v16, vcc                     // 000000002BF4: 3820210B
	flat_store_dword v[15:16], v7                              // 000000002BF8: DC700000 0000070F

0000000000002c00 BB0_50:
	s_or_b64 exec, exec, s[20:21]                              // 000000002C00: 87FE147E
	s_and_b64 s[24:25], s[4:5], s[8:9]                         // 000000002C04: 86980804
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002C08: BE942018
	s_cbranch_execz BB0_54                                     // 000000002C0C: BF88001F

0000000000002c10 BB0_51:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002C10: D04D0018 0001000D
	v_mul_f32_e32 v6, s12, v6                                  // 000000002C18: 0A0C0C0C
	v_mov_b32_e32 v16, 0                                       // 000000002C1C: 7E200280
	v_mov_b32_e32 v15, v12                                     // 000000002C20: 7E1E030C
	s_and_b64 vcc, exec, s[24:25]                              // 000000002C24: 86EA187E
	s_cbranch_vccz BB0_53                                      // 000000002C28: BF86000D
	v_mad_u64_u32 v[18:19], s[24:25], s16, v9, v[15:16]        // 000000002C2C: D1E81812 043E1210
	v_mov_b32_e32 v7, s19                                      // 000000002C34: 7E0E0213
	v_mad_u64_u32 v[18:19], s[24:25], v1, s17, v[18:19]        // 000000002C38: D1E81812 04482301
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000002C40: D28F0012 00022482
	v_add_u32_e32 v18, vcc, s18, v18                           // 000000002C48: 32242412
	v_addc_u32_e32 v19, vcc, v7, v19, vcc                      // 000000002C4C: 38262707
	flat_load_dword v7, v[18:19]                               // 000000002C50: DC500000 07000012
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002C58: BF8C0070
	v_mac_f32_e32 v6, s13, v7                                  // 000000002C5C: 2C0C0E0D

0000000000002c60 BB0_53:
	v_mad_u64_u32 v[15:16], s[24:25], v1, s15, v[15:16]        // 000000002C60: D1E8180F 043C1F01
	v_mov_b32_e32 v7, s11                                      // 000000002C68: 7E0E020B
	v_mad_u64_u32 v[15:16], s[24:25], v9, s14, v[15:16]        // 000000002C6C: D1E8180F 043C1D09
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002C74: D28F000F 00021E82
	v_add_u32_e32 v15, vcc, s10, v15                           // 000000002C7C: 321E1E0A
	v_addc_u32_e32 v16, vcc, v7, v16, vcc                      // 000000002C80: 38202107
	flat_store_dword v[15:16], v6                              // 000000002C84: DC700000 0000060F

0000000000002c8c BB0_54:
	s_or_b64 exec, exec, s[20:21]                              // 000000002C8C: 87FE147E
	s_and_b64 s[20:21], s[6:7], s[8:9]                         // 000000002C90: 86940806
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002C94: BE882014
	s_cbranch_execz BB0_58                                     // 000000002C98: BF88001F

0000000000002c9c BB0_55:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002C9C: D04D0014 0001000D
	v_mul_f32_e32 v5, s12, v5                                  // 000000002CA4: 0A0A0A0C
	v_mov_b32_e32 v7, 0                                        // 000000002CA8: 7E0E0280
	v_mov_b32_e32 v6, v14                                      // 000000002CAC: 7E0C030E
	s_and_b64 vcc, exec, s[20:21]                              // 000000002CB0: 86EA147E
	s_cbranch_vccz BB0_57                                      // 000000002CB4: BF86000D
	v_mad_u64_u32 v[15:16], s[20:21], s16, v9, v[6:7]          // 000000002CB8: D1E8140F 041A1210
	v_mov_b32_e32 v11, s19                                     // 000000002CC0: 7E160213
	v_mad_u64_u32 v[15:16], s[20:21], v1, s17, v[15:16]        // 000000002CC4: D1E8140F 043C2301
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002CCC: D28F000F 00021E82
	v_add_u32_e32 v15, vcc, s18, v15                           // 000000002CD4: 321E1E12
	v_addc_u32_e32 v16, vcc, v11, v16, vcc                     // 000000002CD8: 3820210B
	flat_load_dword v11, v[15:16]                              // 000000002CDC: DC500000 0B00000F
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002CE4: BF8C0070
	v_mac_f32_e32 v5, s13, v11                                 // 000000002CE8: 2C0A160D

0000000000002cec BB0_57:
	v_mad_u64_u32 v[6:7], s[20:21], v1, s15, v[6:7]            // 000000002CEC: D1E81406 04181F01
	v_mad_u64_u32 v[6:7], s[20:21], v9, s14, v[6:7]            // 000000002CF4: D1E81406 04181D09
	v_mov_b32_e32 v9, s11                                      // 000000002CFC: 7E12020B
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002D00: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s10, v6                             // 000000002D08: 320C0C0A
	v_addc_u32_e32 v7, vcc, v9, v7, vcc                        // 000000002D0C: 380E0F09
	flat_store_dword v[6:7], v5                                // 000000002D10: DC700000 00000506

0000000000002d18 BB0_58:
	s_or_b64 exec, exec, s[8:9]                                // 000000002D18: 87FE087E
	v_add_u32_e32 v5, vcc, 24, v17                             // 000000002D1C: 320A2298
	v_cmp_gt_u32_e64 s[8:9], s23, v5                           // 000000002D20: D0CC0008 00020A17
	s_and_b64 s[20:21], s[0:1], s[8:9]                         // 000000002D28: 86940800
	s_and_saveexec_b64 s[0:1], s[20:21]                        // 000000002D2C: BE802014
	s_cbranch_execz BB0_62                                     // 000000002D30: BF88001E

0000000000002d34 BB0_59:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002D34: D04D0014 0001000D
	v_mul_f32_e32 v4, s12, v4                                  // 000000002D3C: 0A08080C
	v_mov_b32_e32 v9, 0                                        // 000000002D40: 7E120280
	s_and_b64 vcc, exec, s[20:21]                              // 000000002D44: 86EA147E
	s_cbranch_vccz BB0_61                                      // 000000002D48: BF86000D
	v_mad_u64_u32 v[6:7], s[20:21], s16, v5, v[8:9]            // 000000002D4C: D1E81406 04220A10
	v_mov_b32_e32 v11, s19                                     // 000000002D54: 7E160213
	v_mad_u64_u32 v[6:7], s[20:21], v1, s17, v[6:7]            // 000000002D58: D1E81406 04182301
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002D60: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s18, v6                             // 000000002D68: 320C0C12
	v_addc_u32_e32 v7, vcc, v11, v7, vcc                       // 000000002D6C: 380E0F0B
	flat_load_dword v6, v[6:7]                                 // 000000002D70: DC500000 06000006
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002D78: BF8C0070
	v_mac_f32_e32 v4, s13, v6                                  // 000000002D7C: 2C080C0D

0000000000002d80 BB0_61:
	v_mad_u64_u32 v[6:7], s[20:21], v1, s15, v[8:9]            // 000000002D80: D1E81406 04201F01
	v_mov_b32_e32 v8, s11                                      // 000000002D88: 7E10020B
	v_mad_u64_u32 v[6:7], s[20:21], v5, s14, v[6:7]            // 000000002D8C: D1E81406 04181D05
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002D94: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s10, v6                             // 000000002D9C: 320C0C0A
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 000000002DA0: 380E0F08
	flat_store_dword v[6:7], v4                                // 000000002DA4: DC700000 00000406

0000000000002dac BB0_62:
	s_or_b64 exec, exec, s[0:1]                                // 000000002DAC: 87FE007E
	s_and_b64 s[2:3], s[2:3], s[8:9]                           // 000000002DB0: 86820802
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002DB4: BE802002
	s_cbranch_execz BB0_66                                     // 000000002DB8: BF88001E

0000000000002dbc BB0_63:
	v_cmp_neq_f32_e64 s[2:3], s13, 0                           // 000000002DBC: D04D0002 0001000D
	v_mul_f32_e32 v3, s12, v3                                  // 000000002DC4: 0A06060C
	v_mov_b32_e32 v11, 0                                       // 000000002DC8: 7E160280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002DCC: 86EA027E
	s_cbranch_vccz BB0_65                                      // 000000002DD0: BF86000D
	v_mad_u64_u32 v[6:7], s[2:3], s16, v5, v[10:11]            // 000000002DD4: D1E80206 042A0A10
	v_mov_b32_e32 v4, s19                                      // 000000002DDC: 7E080213
	v_mad_u64_u32 v[6:7], s[2:3], v1, s17, v[6:7]              // 000000002DE0: D1E80206 04182301
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002DE8: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s18, v6                             // 000000002DF0: 320C0C12
	v_addc_u32_e32 v7, vcc, v4, v7, vcc                        // 000000002DF4: 380E0F04
	flat_load_dword v4, v[6:7]                                 // 000000002DF8: DC500000 04000006
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002E00: BF8C0070
	v_mac_f32_e32 v3, s13, v4                                  // 000000002E04: 2C06080D

0000000000002e08 BB0_65:
	v_mad_u64_u32 v[6:7], s[2:3], v1, s15, v[10:11]            // 000000002E08: D1E80206 04281F01
	v_mov_b32_e32 v4, s11                                      // 000000002E10: 7E08020B
	v_mad_u64_u32 v[6:7], s[2:3], v5, s14, v[6:7]              // 000000002E14: D1E80206 04181D05
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002E1C: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s10, v6                             // 000000002E24: 320C0C0A
	v_addc_u32_e32 v7, vcc, v4, v7, vcc                        // 000000002E28: 380E0F04
	flat_store_dword v[6:7], v3                                // 000000002E2C: DC700000 00000306

0000000000002e34 BB0_66:
	s_or_b64 exec, exec, s[0:1]                                // 000000002E34: 87FE007E
	s_and_b64 s[2:3], s[4:5], s[8:9]                           // 000000002E38: 86820804
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002E3C: BE802002
	s_cbranch_execz BB0_70                                     // 000000002E40: BF88001E

0000000000002e44 BB0_67:
	v_cmp_neq_f32_e64 s[2:3], s13, 0                           // 000000002E44: D04D0002 0001000D
	v_mul_f32_e32 v2, s12, v2                                  // 000000002E4C: 0A04040C
	v_mov_b32_e32 v13, 0                                       // 000000002E50: 7E1A0280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002E54: 86EA027E
	s_cbranch_vccz BB0_69                                      // 000000002E58: BF86000D
	v_mad_u64_u32 v[3:4], s[2:3], s16, v5, v[12:13]            // 000000002E5C: D1E80203 04320A10
	v_mov_b32_e32 v6, s19                                      // 000000002E64: 7E0C0213
	v_mad_u64_u32 v[3:4], s[2:3], v1, s17, v[3:4]              // 000000002E68: D1E80203 040C2301
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 000000002E70: D28F0003 00020682
	v_add_u32_e32 v3, vcc, s18, v3                             // 000000002E78: 32060612
	v_addc_u32_e32 v4, vcc, v6, v4, vcc                        // 000000002E7C: 38080906
	flat_load_dword v3, v[3:4]                                 // 000000002E80: DC500000 03000003
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002E88: BF8C0070
	v_mac_f32_e32 v2, s13, v3                                  // 000000002E8C: 2C04060D

0000000000002e90 BB0_69:
	v_mad_u64_u32 v[3:4], s[2:3], v1, s15, v[12:13]            // 000000002E90: D1E80203 04301F01
	v_mov_b32_e32 v6, s11                                      // 000000002E98: 7E0C020B
	v_mad_u64_u32 v[3:4], s[2:3], v5, s14, v[3:4]              // 000000002E9C: D1E80203 040C1D05
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 000000002EA4: D28F0003 00020682
	v_add_u32_e32 v3, vcc, s10, v3                             // 000000002EAC: 3206060A
	v_addc_u32_e32 v4, vcc, v6, v4, vcc                        // 000000002EB0: 38080906
	flat_store_dword v[3:4], v2                                // 000000002EB4: DC700000 00000203

0000000000002ebc BB0_70:
	s_or_b64 exec, exec, s[0:1]                                // 000000002EBC: 87FE007E
	s_and_b64 s[0:1], s[6:7], s[8:9]                           // 000000002EC0: 86800806
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000002EC4: BE822000
	s_cbranch_execz BB0_74                                     // 000000002EC8: BF88001E

0000000000002ecc BB0_71:
	v_cmp_neq_f32_e64 s[0:1], s13, 0                           // 000000002ECC: D04D0000 0001000D
	v_mul_f32_e32 v0, s12, v0                                  // 000000002ED4: 0A00000C
	v_mov_b32_e32 v15, 0                                       // 000000002ED8: 7E1E0280
	s_and_b64 vcc, exec, s[0:1]                                // 000000002EDC: 86EA007E
	s_cbranch_vccz BB0_73                                      // 000000002EE0: BF86000D
	v_mad_u64_u32 v[2:3], s[0:1], s16, v5, v[14:15]            // 000000002EE4: D1E80002 043A0A10
	v_mov_b32_e32 v4, s19                                      // 000000002EEC: 7E080213
	v_mad_u64_u32 v[2:3], s[0:1], v1, s17, v[2:3]              // 000000002EF0: D1E80002 04082301
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000002EF8: D28F0002 00020482
	v_add_u32_e32 v2, vcc, s18, v2                             // 000000002F00: 32040412
	v_addc_u32_e32 v3, vcc, v4, v3, vcc                        // 000000002F04: 38060704
	flat_load_dword v2, v[2:3]                                 // 000000002F08: DC500000 02000002
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002F10: BF8C0070
	v_mac_f32_e32 v0, s13, v2                                  // 000000002F14: 2C00040D

0000000000002f18 BB0_73:
	v_mad_u64_u32 v[1:2], s[0:1], v1, s15, v[14:15]            // 000000002F18: D1E80001 04381F01
	v_mov_b32_e32 v3, s11                                      // 000000002F20: 7E06020B
	v_mad_u64_u32 v[1:2], s[0:1], v5, s14, v[1:2]              // 000000002F24: D1E80001 04041D05
	v_lshlrev_b64 v[1:2], 2, v[1:2]                            // 000000002F2C: D28F0001 00020282
	v_add_u32_e32 v1, vcc, s10, v1                             // 000000002F34: 3202020A
	v_addc_u32_e32 v2, vcc, v3, v2, vcc                        // 000000002F38: 38040503
	flat_store_dword v[1:2], v0                                // 000000002F3C: DC700000 00000001

0000000000002f44 BB0_74:
	s_endpgm                                                   // 000000002F44: BF810000
