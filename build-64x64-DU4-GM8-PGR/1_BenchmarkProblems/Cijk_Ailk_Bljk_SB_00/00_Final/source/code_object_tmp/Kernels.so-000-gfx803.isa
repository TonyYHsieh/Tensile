
Kernels.so-000-gfx803.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000002100 Cijk_Ailk_Bljk_SB_MT64x64x4_SE_K1:
	s_load_dword s0, s[4:5], 0x4                               // 000000002100: C0020002 00000004
	s_load_dwordx2 s[38:39], s[4:5], 0xc                       // 000000002108: C0060982 0000000C
	s_load_dwordx2 s[12:13], s[6:7], 0x0                       // 000000002110: C0060303 00000000
	s_mov_b32 s33, s11                                         // 000000002118: BEA1000B
	s_mov_b32 s11, 0x4f800000                                  // 00000000211C: BE8B00FF 4F800000
	s_waitcnt lgkmcnt(0)                                       // 000000002124: BF8C007F
	s_and_b32 s2, s0, 0xffff                                   // 000000002128: 8602FF00 0000FFFF
	v_cvt_f32_u32_e32 v1, s2                                   // 000000002130: 7E020C02
	s_load_dwordx2 s[14:15], s[6:7], 0x8                       // 000000002134: C0060383 00000008
	s_load_dwordx2 s[36:37], s[6:7], 0x10                      // 00000000213C: C0060903 00000010
	s_load_dwordx8 s[16:23], s[6:7], 0x20                      // 000000002144: C00E0403 00000020
	v_rcp_iflag_f32_e32 v1, v1                                 // 00000000214C: 7E024701
	s_load_dwordx4 s[24:27], s[6:7], 0x40                      // 000000002150: C00A0603 00000040
	s_load_dwordx2 s[34:35], s[6:7], 0x18                      // 000000002158: C0060883 00000018
	s_load_dwordx4 s[28:31], s[6:7], 0x50                      // 000000002160: C00A0703 00000050
	v_mul_f32_e32 v1, s11, v1                                  // 000000002168: 0A02020B
	v_cvt_u32_f32_e32 v1, v1                                   // 00000000216C: 7E020F01
	v_lshrrev_b32_e32 v12, 4, v0                               // 000000002170: 20180084
	v_and_b32_e32 v11, 15, v0                                  // 000000002174: 2616008F
	v_or_b32_e32 v14, 0x100, v12                               // 000000002178: 281C18FF 00000100
	v_mul_lo_u32 v2, v1, s2                                    // 000000002180: D2850002 00000501
	v_mul_hi_u32 v3, v1, s2                                    // 000000002188: D2860003 00000501
	s_mov_b32 s32, s33                                         // 000000002190: BEA00021
	v_sub_u32_e32 v4, vcc, 0, v2                               // 000000002194: 34080480
	v_cmp_eq_u32_e64 s[0:1], 0, v3                             // 000000002198: D0CA0000 00020680
	v_cndmask_b32_e64 v2, v2, v4, s[0:1]                       // 0000000021A0: D1000002 00020902
	v_mul_hi_u32 v2, v2, v1                                    // 0000000021A8: D2860002 00020302
	v_add_u32_e32 v3, vcc, v2, v1                              // 0000000021B0: 32060302
	v_subrev_u32_e32 v1, vcc, v2, v1                           // 0000000021B4: 36020302
	v_cndmask_b32_e64 v1, v1, v3, s[0:1]                       // 0000000021B8: D1000001 00020701
	v_mul_hi_u32 v3, v1, s38                                   // 0000000021C0: D2860003 00004D01
	v_mul_lo_u32 v1, v3, s2                                    // 0000000021C8: D2850001 00000503
	v_add_u32_e32 v4, vcc, -1, v3                              // 0000000021D0: 320806C1
	v_add_u32_e32 v5, vcc, 1, v3                               // 0000000021D4: 320A0681
	v_sub_u32_e32 v2, vcc, s38, v1                             // 0000000021D8: 34040226
	v_cmp_ge_u32_e64 s[0:1], s38, v1                           // 0000000021DC: D0CE0000 00020226
	v_cmp_le_u32_e64 s[2:3], s2, v2                            // 0000000021E4: D0CB0002 00020402
	s_and_b64 vcc, s[2:3], s[0:1]                              // 0000000021EC: 86EA0002
	s_add_u32 s2, s4, 6                                        // 0000000021F0: 80028604
	s_addc_u32 s3, s5, 0                                       // 0000000021F4: 82038005
	v_mov_b32_e32 v1, s2                                       // 0000000021F8: 7E020202
	v_mov_b32_e32 v2, s3                                       // 0000000021FC: 7E040203
	flat_load_ushort v1, v[1:2]                                // 000000002200: DC480000 01000001
	v_cndmask_b32_e32 v3, v3, v5, vcc                          // 000000002208: 00060B03
	v_cndmask_b32_e64 v3, v4, v3, s[0:1]                       // 00000000220C: D1000003 00020704
	s_and_b32 s2, s9, 7                                        // 000000002214: 86028709
	v_mul_lo_u32 v3, v3, s2                                    // 000000002218: D2850003 00000503
	s_and_b32 s2, s9, -8                                       // 000000002220: 8602C809
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002224: BF8C0070
	v_cvt_f32_u32_e32 v2, v1                                   // 000000002228: 7E040D01
	v_rcp_iflag_f32_e32 v2, v2                                 // 00000000222C: 7E044702
	v_mul_f32_e32 v2, s11, v2                                  // 000000002230: 0A04040B
	v_cvt_u32_f32_e32 v2, v2                                   // 000000002234: 7E040F02
	v_mul_lo_u32 v5, v2, v1                                    // 000000002238: D2850005 00020302
	v_mul_hi_u32 v6, v2, v1                                    // 000000002240: D2860006 00020302
	v_sub_u32_e32 v4, vcc, 0, v5                               // 000000002248: 34080A80
	v_cmp_eq_u32_e64 s[0:1], 0, v6                             // 00000000224C: D0CA0000 00020C80
	v_cndmask_b32_e64 v4, v5, v4, s[0:1]                       // 000000002254: D1000004 00020905
	v_mul_hi_u32 v4, v4, v2                                    // 00000000225C: D2860004 00020504
	v_add_u32_e32 v5, vcc, v4, v2                              // 000000002264: 320A0504
	v_subrev_u32_e32 v2, vcc, v4, v2                           // 000000002268: 36040504
	v_cndmask_b32_e64 v2, v2, v5, s[0:1]                       // 00000000226C: D1000002 00020B02
	v_mul_hi_u32 v4, v2, s39                                   // 000000002274: D2860004 00004F02
	v_add_u32_e32 v2, vcc, s8, v3                              // 00000000227C: 32040608
	v_mul_lo_u32 v3, v4, v1                                    // 000000002280: D2850003 00020304
	v_add_u32_e32 v5, vcc, 1, v4                               // 000000002288: 320A0881
	v_add_u32_e32 v6, vcc, -1, v4                              // 00000000228C: 320C08C1
	v_sub_u32_e32 v7, vcc, s39, v3                             // 000000002290: 340E0627
	v_cmp_ge_u32_e32 vcc, s39, v3                              // 000000002294: 7D9C0627
	v_cmp_ge_u32_e64 s[0:1], v7, v1                            // 000000002298: D0CE0000 00020307
	s_and_b64 s[0:1], s[0:1], vcc                              // 0000000022A0: 86806A00
	v_cndmask_b32_e64 v1, v4, v5, s[0:1]                       // 0000000022A4: D1000001 00020B04
	v_cndmask_b32_e32 v1, v6, v1, vcc                          // 0000000022AC: 00020306
	v_and_b32_e32 v3, 7, v1                                    // 0000000022B0: 26060287
	v_sub_u32_e32 v1, vcc, v1, v3                              // 0000000022B4: 34020701
	v_cmp_ge_u32_e32 vcc, s9, v1                               // 0000000022B8: 7D9C0209
	v_cndmask_b32_e32 v1, 0, v3, vcc                           // 0000000022BC: 00020680
	v_cmp_gt_i32_e32 vcc, 3, v1                                // 0000000022C0: 7D880283
	s_and_b64 vcc, exec, vcc                                   // 0000000022C4: 86EA6A7E
	s_cbranch_vccz BB0_4                                       // 0000000022C8: BF860008
	v_cmp_gt_i32_e32 vcc, 1, v1                                // 0000000022CC: 7D880281
	s_and_b64 vcc, exec, vcc                                   // 0000000022D0: 86EA6A7E
	s_cbranch_vccnz BB0_9                                      // 0000000022D4: BF87001E
	v_cmp_gt_i32_e32 vcc, 2, v1                                // 0000000022D8: 7D880282
	s_and_b64 vcc, exec, vcc                                   // 0000000022DC: 86EA6A7E
	s_cbranch_vccz BB0_10                                      // 0000000022E0: BF86001E
	v_mov_b32_e32 v1, s2                                       // 0000000022E4: 7E020202
	s_branch BB0_17                                            // 0000000022E8: BF82003A

00000000000022ec BB0_4:
	v_cmp_gt_i32_e32 vcc, 5, v1                                // 0000000022EC: 7D880285
	s_and_b64 vcc, exec, vcc                                   // 0000000022F0: 86EA6A7E
	s_cbranch_vccz BB0_7                                       // 0000000022F4: BF86000B
	v_cmp_gt_i32_e32 vcc, 4, v1                                // 0000000022F8: 7D880284
	s_and_b64 vcc, exec, vcc                                   // 0000000022FC: 86EA6A7E
	s_cbranch_vccz BB0_11                                      // 000000002300: BF860019
	s_mov_b32 s0, 0xaaaaaaab                                   // 000000002304: BE8000FF AAAAAAAB
	v_mul_hi_u32 v1, v2, s0                                    // 00000000230C: D2860001 00000102
	v_lshrrev_b32_e32 v3, 1, v1                                // 000000002314: 20060281
	v_mul_lo_u32 v1, v3, -3                                    // 000000002318: D2850001 00018703
	s_branch BB0_15                                            // 000000002320: BF820029

0000000000002324 BB0_7:
	v_cmp_gt_i32_e32 vcc, 6, v1                                // 000000002324: 7D880286
	s_and_b64 vcc, exec, vcc                                   // 000000002328: 86EA6A7E
	s_cbranch_vccz BB0_12                                      // 00000000232C: BF860011
	s_mov_b32 s0, 0xcccccccd                                   // 000000002330: BE8000FF CCCCCCCD
	v_mul_hi_u32 v1, v2, s0                                    // 000000002338: D2860001 00000102
	v_lshrrev_b32_e32 v3, 2, v1                                // 000000002340: 20060282
	v_mul_lo_u32 v1, v3, -5                                    // 000000002344: D2850001 00018B03
	s_branch BB0_15                                            // 00000000234C: BF82001E

0000000000002350 BB0_9:
	v_lshrrev_b32_e32 v3, 3, v2                                // 000000002350: 20060483
	v_and_b32_e32 v1, 7, v2                                    // 000000002354: 26020487
	s_branch BB0_16                                            // 000000002358: BF82001C

000000000000235c BB0_10:
	v_lshrrev_b32_e32 v3, 1, v2                                // 00000000235C: 20060481
	v_and_b32_e32 v1, 1, v2                                    // 000000002360: 26020481
	s_branch BB0_16                                            // 000000002364: BF820019

0000000000002368 BB0_11:
	v_lshrrev_b32_e32 v3, 2, v2                                // 000000002368: 20060482
	v_and_b32_e32 v1, 3, v2                                    // 00000000236C: 26020483
	s_branch BB0_16                                            // 000000002370: BF820016

0000000000002374 BB0_12:
	v_cmp_eq_u32_e32 vcc, 6, v1                                // 000000002374: 7D940286
	s_and_b64 vcc, exec, vcc                                   // 000000002378: 86EA6A7E
	s_cbranch_vccz BB0_14                                      // 00000000237C: BF860008
	s_mov_b32 s0, 0xaaaaaaab                                   // 000000002380: BE8000FF AAAAAAAB
	v_mul_hi_u32 v1, v2, s0                                    // 000000002388: D2860001 00000102
	v_lshrrev_b32_e32 v3, 2, v1                                // 000000002390: 20060282
	v_mul_lo_u32 v1, v3, -6                                    // 000000002394: D2850001 00018D03
	s_branch BB0_15                                            // 00000000239C: BF82000A

00000000000023a0 BB0_14:
	s_mov_b32 s0, 0x24924925                                   // 0000000023A0: BE8000FF 24924925
	v_mul_hi_u32 v1, v2, s0                                    // 0000000023A8: D2860001 00000102
	v_subrev_u32_e32 v3, vcc, v1, v2                           // 0000000023B0: 36060501
	v_lshrrev_b32_e32 v3, 1, v3                                // 0000000023B4: 20060681
	v_add_u32_e32 v1, vcc, v1, v3                              // 0000000023B8: 32020701
	v_lshrrev_b32_e32 v3, 2, v1                                // 0000000023BC: 20060282
	v_mul_lo_u32 v1, v3, -7                                    // 0000000023C0: D2850001 00018F03

00000000000023c8 BB0_15:
	v_add_u32_e32 v1, vcc, v1, v2                              // 0000000023C8: 32020501

00000000000023cc BB0_16:
	v_or_b32_e32 v1, s2, v1                                    // 0000000023CC: 28020202
	v_mov_b32_e32 v2, v3                                       // 0000000023D0: 7E040303

00000000000023d4 BB0_17:
	v_cvt_f32_u32_e32 v4, s28                                  // 0000000023D4: 7E080C1C
	v_lshlrev_b32_e32 v17, 6, v1                               // 0000000023D8: 24220286
	v_lshrrev_b32_e32 v19, 6, v0                               // 0000000023DC: 20260086
	v_lshlrev_b32_e32 v16, 6, v2                               // 0000000023E0: 24200486
	v_rcp_iflag_f32_e32 v4, v4                                 // 0000000023E4: 7E084704
	v_and_b32_e32 v3, 63, v0                                   // 0000000023E8: 260600BF
	v_lshrrev_b32_e32 v9, 2, v0                                // 0000000023EC: 20120082
	v_or_b32_e32 v3, v16, v3                                   // 0000000023F0: 28060710
	v_mul_f32_e32 v4, 0x4f800000, v4                           // 0000000023F4: 0A0808FF 4F800000
	v_cvt_u32_f32_e32 v4, v4                                   // 0000000023FC: 7E080F04
	v_and_b32_e32 v18, 3, v0                                   // 000000002400: 26240083
	v_mov_b32_e32 v24, 0                                       // 000000002404: 7E300280
	v_and_b32_e32 v2, s30, v2                                  // 000000002408: 2604041E
	v_mul_lo_u32 v5, v4, s28                                   // 00000000240C: D2850005 00003904
	v_mul_hi_u32 v6, v4, s28                                   // 000000002414: D2860006 00003904
	s_mov_b32 s7, 0                                            // 00000000241C: BE870080
	s_mov_b32 s6, s22                                          // 000000002420: BE860016
	v_sub_u32_e32 v7, vcc, 0, v5                               // 000000002424: 340E0A80
	v_cmp_eq_u32_e64 s[0:1], 0, v6                             // 000000002428: D0CA0000 00020C80
	v_cndmask_b32_e64 v5, v5, v7, s[0:1]                       // 000000002430: D1000005 00020F05
	v_mul_hi_u32 v5, v5, v4                                    // 000000002438: D2860005 00020905
	v_lshlrev_b32_e32 v25, 4, v2                               // 000000002440: 24320484
	v_alignbit_b32 v2, 0, s22, 30                              // 000000002444: D1CE0002 02782C80
	v_mul_lo_u32 v2, v2, v25                                   // 00000000244C: D2850002 00023302
	v_add_u32_e32 v1, vcc, v5, v4                              // 000000002454: 32020905
	v_subrev_u32_e32 v4, vcc, v5, v4                           // 000000002458: 36080905
	v_cndmask_b32_e64 v1, v4, v1, s[0:1]                       // 00000000245C: D1000001 00020304
	v_mul_hi_u32 v1, v1, s10                                   // 000000002464: D2860001 00001501
	v_or_b32_e32 v4, v17, v9                                   // 00000000246C: 28081311
	v_mov_b32_e32 v26, v24                                     // 000000002470: 7E340318
	s_mov_b32 m0, -1                                           // 000000002474: BEFC00C1
	v_mul_lo_u32 v1, v1, s28                                   // 000000002478: D2850001 00003901
	v_sub_u32_e32 v5, vcc, s10, v1                             // 000000002480: 340A020A
	v_cmp_ge_u32_e64 s[2:3], s10, v1                           // 000000002484: D0CE0002 0002020A
	v_cmp_le_u32_e64 s[0:1], s28, v5                           // 00000000248C: D0CB0000 00020A1C
	v_add_u32_e32 v6, vcc, s28, v5                             // 000000002494: 320C0A1C
	v_subrev_u32_e32 v1, vcc, s28, v5                          // 000000002498: 36020A1C
	s_and_b64 vcc, s[0:1], s[2:3]                              // 00000000249C: 86EA0200
	v_cndmask_b32_e32 v1, v5, v1, vcc                          // 0000000024A0: 00020305
	v_cndmask_b32_e64 v1, v6, v1, s[2:3]                       // 0000000024A4: D1000001 000A0306
	v_mul_lo_u32 v5, v19, s22                                  // 0000000024AC: D2850005 00002D13
	v_mul_lo_u32 v6, v1, s23                                   // 0000000024B4: D2850006 00002F01
	s_add_i32 s0, s26, -1                                      // 0000000024BC: 8100C11A
	v_min_u32_e32 v3, s0, v3                                   // 0000000024C0: 1C060600
	s_add_i32 s0, s27, -1                                      // 0000000024C4: 8100C11B
	v_add_u32_e32 v5, vcc, v6, v5                              // 0000000024C8: 320A0B06
	v_min_u32_e32 v4, s0, v4                                   // 0000000024CC: 1C080800
	v_add_u32_e32 v23, vcc, v5, v3                             // 0000000024D0: 322E0705
	v_mul_lo_u32 v3, v1, s25                                   // 0000000024D4: D2850003 00003301
	v_mul_lo_u32 v4, v4, s24                                   // 0000000024DC: D2850004 00003104
	s_lshl_b64 s[0:1], s[6:7], 2                               // 0000000024E4: 8E808206
	v_lshlrev_b64 v[5:6], 2, v[23:24]                          // 0000000024E8: D28F0005 00022E82
	v_add_u32_e32 v3, vcc, v3, v18                             // 0000000024F0: 32062503
	v_add_u32_e32 v3, vcc, v3, v4                              // 0000000024F4: 32060903
	v_mov_b32_e32 v4, v24                                      // 0000000024F8: 7E080318
	v_lshlrev_b64 v[7:8], 2, v[3:4]                            // 0000000024FC: D28F0007 00020682
	v_lshlrev_b32_e32 v3, 6, v18                               // 000000002504: 24062486
	v_mul_hi_u32 v4, s0, v25                                   // 000000002508: D2860004 00023200
	v_or_b32_e32 v3, v3, v9                                    // 000000002510: 28061303
	v_mul_lo_u32 v9, s0, v25                                   // 000000002514: D2850009 00023200
	s_lshr_b32 s2, s29, 2                                      // 00000000251C: 8F02821D
	v_add_u32_e32 v10, vcc, v4, v2                             // 000000002520: 32140504
	v_mov_b32_e32 v2, s37                                      // 000000002524: 7E040225
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 000000002528: D28F0009 00021282
	s_cmp_lt_u32 s29, 4                                        // 000000002530: BF0A841D
	v_add_u32_e32 v4, vcc, s36, v9                             // 000000002534: 32081224
	v_addc_u32_e32 v2, vcc, v10, v2, vcc                       // 000000002538: 3804050A
	v_add_u32_e32 v27, vcc, v4, v5                             // 00000000253C: 32360B04
	v_lshlrev_b64 v[4:5], 4, v[25:26]                          // 000000002540: D28F0004 00023284
	v_addc_u32_e32 v28, vcc, v2, v6, vcc                       // 000000002548: 38380D02
	v_mov_b32_e32 v2, s35                                      // 00000000254C: 7E040223
	v_add_u32_e32 v4, vcc, s34, v4                             // 000000002550: 32080822
	v_addc_u32_e32 v2, vcc, v5, v2, vcc                        // 000000002554: 38040505
	v_add_u32_e32 v29, vcc, v4, v7                             // 000000002558: 323A0F04
	v_or_b32_e32 v26, 0x100, v3                                // 00000000255C: 283406FF 00000100
	v_addc_u32_e32 v30, vcc, v2, v8, vcc                       // 000000002564: 383C1102
	s_cbranch_scc1 BB0_21                                      // 000000002568: BF8500E6
	flat_load_dword v5, v[29:30]                               // 00000000256C: DC500000 0500001D
	flat_load_dword v6, v[27:28]                               // 000000002574: DC500000 0600001B
	v_add_u32_e32 v8, vcc, 16, v29                             // 00000000257C: 32103A90
	v_mov_b32_e32 v2, s2                                       // 000000002580: 7E040202
	s_lshl_b64 s[4:5], s[0:1], 2                               // 000000002584: 8E848200
	s_and_b32 s6, s29, -4                                      // 000000002588: 8606C41D
	v_addc_u32_e32 v9, vcc, 0, v30, vcc                        // 00000000258C: 38123C80
	v_mul_hi_u32 v7, s0, v2                                    // 000000002590: D2860007 00020400
	s_sub_u32 s8, 0, s6                                        // 000000002598: 80880680
	v_mov_b32_e32 v15, s5                                      // 00000000259C: 7E1E0205
	v_add_u32_e32 v20, vcc, s4, v27                            // 0000000025A0: 32283604
	s_subb_u32 s9, 0, 0                                        // 0000000025A4: 82898080
	s_lshl_b64 s[6:7], s[6:7], 2                               // 0000000025A8: 8E868206
	v_addc_u32_e32 v15, vcc, v28, v15, vcc                     // 0000000025AC: 381E1F1C
	v_lshlrev_b32_e32 v10, 2, v3                               // 0000000025B0: 24140682
	v_or_b32_e32 v26, 0x300, v3                                // 0000000025B4: 283406FF 00000300
	v_lshlrev_b32_e32 v3, 2, v12                               // 0000000025BC: 24061882
	v_or_b32_e32 v32, 0x400, v3                                // 0000000025C0: 284006FF 00000400
	s_mul_i32 s3, s1, s2                                       // 0000000025C8: 92030201
	v_mov_b32_e32 v3, s7                                       // 0000000025CC: 7E060207
	v_subrev_u32_e32 v21, vcc, s6, v8                          // 0000000025D0: 362A1006
	v_subb_u32_e32 v22, vcc, v9, v3, vcc                       // 0000000025D4: 3A2C0709
	s_mul_i32 s10, s0, s2                                      // 0000000025D8: 920A0200
	v_add_u32_e32 v3, vcc, s3, v7                              // 0000000025DC: 32060E03
	v_sub_u32_e64 v33, vcc, 0, s10                             // 0000000025E0: D11A6A21 00001480
	v_mov_b32_e32 v2, s10                                      // 0000000025E8: 7E04020A
	v_subb_u32_e32 v34, vcc, 0, v3, vcc                        // 0000000025EC: 3A440680
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000025F0: D28F0002 00020482
	v_or_b32_e32 v4, 1, v25                                    // 0000000025F8: 28083281
	v_sub_u32_e32 v2, vcc, v20, v2                             // 0000000025FC: 34040514
	v_subb_u32_e32 v3, vcc, v15, v3, vcc                       // 000000002600: 3A06070F
	v_cmp_eq_u32_e32 vcc, s2, v4                               // 000000002604: 7D940802
	v_lshlrev_b32_e32 v13, 2, v0                               // 000000002608: 241A0082
	v_cndmask_b32_e32 v27, v20, v2, vcc                        // 00000000260C: 00360514
	v_or_b32_e32 v0, 0x200, v0                                 // 000000002610: 280000FF 00000200
	v_lshlrev_b32_e32 v36, 2, v11                              // 000000002618: 24481682
	s_cmp_lt_u32 s29, 8                                        // 00000000261C: BF0A881D
	v_cndmask_b32_e32 v28, v15, v3, vcc                        // 000000002620: 0038070F
	v_cndmask_b32_e32 v30, v9, v22, vcc                        // 000000002624: 003C2D09
	v_cndmask_b32_e32 v29, v8, v21, vcc                        // 000000002628: 003A2B08
	v_mov_b32_e32 v2, 0                                        // 00000000262C: 7E040280
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002630: BF8C0070
	ds_write_b32 v13, v6                                       // 000000002634: D81A0000 0000060D
	ds_write_b32 v10, v5 offset:1024                           // 00000000263C: D81A0400 0000050A
	s_cbranch_scc1 BB0_22                                      // 000000002644: BF8500C0
	v_mov_b32_e32 v2, 0                                        // 000000002648: 7E040280
	s_lshl_b64 s[6:7], s[8:9], 2                               // 00000000264C: 8E868208
	v_add_u32_e32 v35, vcc, 2, v25                             // 000000002650: 32463282
	s_movk_i32 s3, 0x200                                       // 000000002654: B0030200
	s_movk_i32 s8, 0x3ff                                       // 000000002658: B00803FF
	s_mov_b32 s9, s2                                           // 00000000265C: BE890002
	v_mov_b32_e32 v3, v2                                       // 000000002660: 7E060302
	v_mov_b32_e32 v4, v2                                       // 000000002664: 7E080302
	v_mov_b32_e32 v5, v2                                       // 000000002668: 7E0A0302
	v_mov_b32_e32 v6, v2                                       // 00000000266C: 7E0C0302
	v_mov_b32_e32 v7, v2                                       // 000000002670: 7E0E0302
	v_mov_b32_e32 v8, v2                                       // 000000002674: 7E100302
	v_mov_b32_e32 v9, v2                                       // 000000002678: 7E120302
	v_mov_b32_e32 v10, v2                                      // 00000000267C: 7E140302
	v_mov_b32_e32 v13, v2                                      // 000000002680: 7E1A0302
	v_mov_b32_e32 v15, v2                                      // 000000002684: 7E1E0302
	v_mov_b32_e32 v22, v2                                      // 000000002688: 7E2C0302
	v_mov_b32_e32 v21, v2                                      // 00000000268C: 7E2A0302
	v_mov_b32_e32 v20, v2                                      // 000000002690: 7E280302
	v_mov_b32_e32 v23, v2                                      // 000000002694: 7E2E0302
	v_mov_b32_e32 v31, v11                                     // 000000002698: 7E3E030B
	v_mov_b32_e32 v24, v2                                      // 00000000269C: 7E300302

00000000000026a0 BB0_20:
	s_waitcnt lgkmcnt(0)                                       // 0000000026A0: BF8C007F
	s_barrier                                                  // 0000000026A4: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000026A8: BF8C007F
	flat_load_dword v51, v[29:30]                              // 0000000026AC: DC500000 3300001D
	flat_load_dword v52, v[27:28]                              // 0000000026B4: DC500000 3400001B
	ds_read2_b32 v[37:38], v36 offset1:16                      // 0000000026BC: D86E1000 25000024
	ds_read2_b32 v[39:40], v36 offset0:32 offset1:48           // 0000000026C4: D86E3020 27000024
	ds_read2_b32 v[41:42], v32 offset1:16                      // 0000000026CC: D86E1000 29000020
	ds_read2_b32 v[43:44], v32 offset0:32 offset1:48           // 0000000026D4: D86E3020 2B000020
	ds_read2_b32 v[45:46], v36 offset0:64 offset1:80           // 0000000026DC: D86E5040 2D000024
	ds_read2_b32 v[47:48], v32 offset0:64 offset1:80           // 0000000026E4: D86E5040 2F000020
	v_add_u32_e32 v29, vcc, 16, v29                            // 0000000026EC: 323A3A90
	s_waitcnt lgkmcnt(3)                                       // 0000000026F0: BF8C037F
	v_mac_f32_e32 v24, v37, v41                                // 0000000026F4: 2C305325
	v_mac_f32_e32 v23, v38, v41                                // 0000000026F8: 2C2E5326
	v_mac_f32_e32 v22, v37, v42                                // 0000000026FC: 2C2C5525
	v_mac_f32_e32 v15, v38, v42                                // 000000002700: 2C1E5526
	v_mac_f32_e32 v20, v39, v41                                // 000000002704: 2C285327
	v_mac_f32_e32 v21, v40, v41                                // 000000002708: 2C2A5328
	v_mac_f32_e32 v13, v39, v42                                // 00000000270C: 2C1A5527
	v_mac_f32_e32 v10, v40, v42                                // 000000002710: 2C145528
	ds_read2_b32 v[41:42], v36 offset0:96 offset1:112          // 000000002714: D86E7060 29000024
	s_waitcnt lgkmcnt(3)                                       // 00000000271C: BF8C037F
	v_mac_f32_e32 v9, v37, v43                                 // 000000002720: 2C125725
	v_mac_f32_e32 v8, v38, v43                                 // 000000002724: 2C105726
	v_mac_f32_e32 v5, v37, v44                                 // 000000002728: 2C0A5925
	v_mac_f32_e32 v4, v38, v44                                 // 00000000272C: 2C085926
	ds_read2_b32 v[37:38], v32 offset0:96 offset1:112          // 000000002730: D86E7060 25000020
	v_mac_f32_e32 v7, v39, v43                                 // 000000002738: 2C0E5727
	v_mac_f32_e32 v6, v40, v43                                 // 00000000273C: 2C0C5728
	v_mac_f32_e32 v3, v39, v44                                 // 000000002740: 2C065927
	v_mac_f32_e32 v2, v40, v44                                 // 000000002744: 2C045928
	ds_read2_b32 v[39:40], v36 offset0:128 offset1:144         // 000000002748: D86E9080 27000024
	ds_read2_b32 v[43:44], v32 offset0:128 offset1:144         // 000000002750: D86E9080 2B000020
	s_waitcnt lgkmcnt(4)                                       // 000000002758: BF8C047F
	v_mac_f32_e32 v24, v45, v47                                // 00000000275C: 2C305F2D
	v_mac_f32_e32 v23, v46, v47                                // 000000002760: 2C2E5F2E
	v_mac_f32_e32 v22, v45, v48                                // 000000002764: 2C2C612D
	v_mac_f32_e32 v15, v46, v48                                // 000000002768: 2C1E612E
	s_waitcnt lgkmcnt(3)                                       // 00000000276C: BF8C037F
	v_mac_f32_e32 v20, v41, v47                                // 000000002770: 2C285F29
	v_mac_f32_e32 v21, v42, v47                                // 000000002774: 2C2A5F2A
	v_mac_f32_e32 v13, v41, v48                                // 000000002778: 2C1A6129
	v_mac_f32_e32 v10, v42, v48                                // 00000000277C: 2C14612A
	ds_read2_b32 v[47:48], v36 offset0:160 offset1:176         // 000000002780: D86EB0A0 2F000024
	s_waitcnt lgkmcnt(3)                                       // 000000002788: BF8C037F
	v_mac_f32_e32 v9, v45, v37                                 // 00000000278C: 2C124B2D
	v_mac_f32_e32 v8, v46, v37                                 // 000000002790: 2C104B2E
	v_mac_f32_e32 v5, v45, v38                                 // 000000002794: 2C0A4D2D
	v_mac_f32_e32 v4, v46, v38                                 // 000000002798: 2C084D2E
	ds_read2_b32 v[45:46], v32 offset0:160 offset1:176         // 00000000279C: D86EB0A0 2D000020
	v_addc_u32_e32 v30, vcc, 0, v30, vcc                       // 0000000027A4: 383C3C80
	v_mac_f32_e32 v7, v41, v37                                 // 0000000027A8: 2C0E4B29
	v_mac_f32_e32 v6, v42, v37                                 // 0000000027AC: 2C0C4B2A
	v_mac_f32_e32 v3, v41, v38                                 // 0000000027B0: 2C064D29
	v_mac_f32_e32 v2, v42, v38                                 // 0000000027B4: 2C044D2A
	ds_read2_b32 v[37:38], v36 offset0:192 offset1:208         // 0000000027B8: D86ED0C0 25000024
	ds_read2_b32 v[41:42], v32 offset0:192 offset1:208         // 0000000027C0: D86ED0C0 29000020
	s_waitcnt lgkmcnt(4)                                       // 0000000027C8: BF8C047F
	v_mac_f32_e32 v24, v39, v43                                // 0000000027CC: 2C305727
	v_mac_f32_e32 v23, v40, v43                                // 0000000027D0: 2C2E5728
	v_mac_f32_e32 v22, v39, v44                                // 0000000027D4: 2C2C5927
	v_mac_f32_e32 v15, v40, v44                                // 0000000027D8: 2C1E5928
	s_waitcnt lgkmcnt(3)                                       // 0000000027DC: BF8C037F
	v_mac_f32_e32 v20, v47, v43                                // 0000000027E0: 2C28572F
	v_mac_f32_e32 v21, v48, v43                                // 0000000027E4: 2C2A5730
	v_mac_f32_e32 v13, v47, v44                                // 0000000027E8: 2C1A592F
	v_mac_f32_e32 v10, v48, v44                                // 0000000027EC: 2C145930
	ds_read2_b32 v[43:44], v36 offset0:224 offset1:240         // 0000000027F0: D86EF0E0 2B000024
	ds_read2_b32 v[49:50], v32 offset0:224 offset1:240         // 0000000027F8: D86EF0E0 31000020
	s_waitcnt lgkmcnt(4)                                       // 000000002800: BF8C047F
	v_mac_f32_e32 v9, v39, v45                                 // 000000002804: 2C125B27
	v_mac_f32_e32 v8, v40, v45                                 // 000000002808: 2C105B28
	v_mac_f32_e32 v5, v39, v46                                 // 00000000280C: 2C0A5D27
	v_mac_f32_e32 v4, v40, v46                                 // 000000002810: 2C085D28
	v_mov_b32_e32 v32, s5                                      // 000000002814: 7E400205
	v_add_u32_e32 v27, vcc, s4, v27                            // 000000002818: 32363604
	v_lshlrev_b64 v[39:40], 2, v[33:34]                        // 00000000281C: D28F0027 00024282
	v_mac_f32_e32 v7, v47, v45                                 // 000000002824: 2C0E5B2F
	v_mac_f32_e32 v6, v48, v45                                 // 000000002828: 2C0C5B30
	v_mac_f32_e32 v3, v47, v46                                 // 00000000282C: 2C065D2F
	v_mac_f32_e32 v2, v48, v46                                 // 000000002830: 2C045D30
	v_addc_u32_e32 v28, vcc, v28, v32, vcc                     // 000000002834: 3838411C
	v_add_u32_e32 v31, vcc, s3, v31                            // 000000002838: 323E3E03
	v_add_u32_e32 v14, vcc, s3, v14                            // 00000000283C: 321C1C03
	v_lshlrev_b32_e32 v45, 2, v0                               // 000000002840: 245A0082
	v_lshlrev_b32_e32 v46, 2, v26                              // 000000002844: 245C3482
	v_add_u32_e32 v0, vcc, s3, v0                              // 000000002848: 32000003
	v_add_u32_e32 v26, vcc, s3, v26                            // 00000000284C: 32343403
	v_add_u32_e32 v32, vcc, v27, v39                           // 000000002850: 32404F1B
	v_addc_u32_e32 v39, vcc, v28, v40, vcc                     // 000000002854: 384E511C
	v_mov_b32_e32 v36, s7                                      // 000000002858: 7E480207
	v_add_u32_e32 v40, vcc, s6, v29                            // 00000000285C: 32503A06
	v_addc_u32_e32 v47, vcc, v30, v36, vcc                     // 000000002860: 385E491E
	v_cmp_eq_u32_e32 vcc, s9, v35                              // 000000002864: 7D944609
	s_add_i32 s10, s9, -1                                      // 000000002868: 810AC109
	v_and_b32_e32 v31, s8, v31                                 // 00000000286C: 263E3E08
	v_and_b32_e32 v14, s8, v14                                 // 000000002870: 261C1C08
	v_cndmask_b32_e32 v27, v27, v32, vcc                       // 000000002874: 0036411B
	v_and_b32_e32 v0, s8, v0                                   // 000000002878: 26000008
	v_and_b32_e32 v26, s8, v26                                 // 00000000287C: 26343408
	s_cmp_gt_u32 s10, 1                                        // 000000002880: BF08810A
	s_mov_b32 s9, s10                                          // 000000002884: BE89000A
	v_cndmask_b32_e32 v28, v28, v39, vcc                       // 000000002888: 00384F1C
	v_lshlrev_b32_e32 v32, 2, v14                              // 00000000288C: 24401C82
	v_lshlrev_b32_e32 v36, 2, v31                              // 000000002890: 24483E82
	v_cndmask_b32_e32 v30, v30, v47, vcc                       // 000000002894: 003C5F1E
	v_cndmask_b32_e32 v29, v29, v40, vcc                       // 000000002898: 003A511D
	s_waitcnt lgkmcnt(2)                                       // 00000000289C: BF8C027F
	v_mac_f32_e32 v24, v37, v41                                // 0000000028A0: 2C305325
	v_mac_f32_e32 v23, v38, v41                                // 0000000028A4: 2C2E5326
	s_waitcnt lgkmcnt(1)                                       // 0000000028A8: BF8C017F
	v_mac_f32_e32 v20, v43, v41                                // 0000000028AC: 2C28532B
	v_mac_f32_e32 v21, v44, v41                                // 0000000028B0: 2C2A532C
	v_mac_f32_e32 v22, v37, v42                                // 0000000028B4: 2C2C5525
	v_mac_f32_e32 v15, v38, v42                                // 0000000028B8: 2C1E5526
	v_mac_f32_e32 v13, v43, v42                                // 0000000028BC: 2C1A552B
	v_mac_f32_e32 v10, v44, v42                                // 0000000028C0: 2C14552C
	s_waitcnt lgkmcnt(0)                                       // 0000000028C4: BF8C007F
	v_mac_f32_e32 v9, v37, v49                                 // 0000000028C8: 2C126325
	v_mac_f32_e32 v8, v38, v49                                 // 0000000028CC: 2C106326
	v_mac_f32_e32 v5, v37, v50                                 // 0000000028D0: 2C0A6525
	v_mac_f32_e32 v4, v38, v50                                 // 0000000028D4: 2C086526
	v_mac_f32_e32 v7, v43, v49                                 // 0000000028D8: 2C0E632B
	v_mac_f32_e32 v6, v44, v49                                 // 0000000028DC: 2C0C632C
	v_mac_f32_e32 v3, v43, v50                                 // 0000000028E0: 2C06652B
	v_mac_f32_e32 v2, v44, v50                                 // 0000000028E4: 2C04652C
	s_waitcnt vmcnt(0)                                         // 0000000028E8: BF8C0F70
	ds_write_b32 v45, v52                                      // 0000000028EC: D81A0000 0000342D
	ds_write_b32 v46, v51                                      // 0000000028F4: D81A0000 0000332E
	s_cbranch_scc1 BB0_20                                      // 0000000028FC: BF85FF68
	s_branch BB0_23                                            // 000000002900: BF820021

0000000000002904 BB0_21:
	v_mov_b32_e32 v31, v11                                     // 000000002904: 7E3E030B
	v_mov_b32_e32 v23, v24                                     // 000000002908: 7E2E0318
	v_mov_b32_e32 v20, v24                                     // 00000000290C: 7E280318
	v_mov_b32_e32 v21, v24                                     // 000000002910: 7E2A0318
	v_mov_b32_e32 v22, v24                                     // 000000002914: 7E2C0318
	v_mov_b32_e32 v15, v24                                     // 000000002918: 7E1E0318
	v_mov_b32_e32 v13, v24                                     // 00000000291C: 7E1A0318
	v_mov_b32_e32 v10, v24                                     // 000000002920: 7E140318
	v_mov_b32_e32 v9, v24                                      // 000000002924: 7E120318
	v_mov_b32_e32 v8, v24                                      // 000000002928: 7E100318
	v_mov_b32_e32 v7, v24                                      // 00000000292C: 7E0E0318
	v_mov_b32_e32 v6, v24                                      // 000000002930: 7E0C0318
	v_mov_b32_e32 v5, v24                                      // 000000002934: 7E0A0318
	v_mov_b32_e32 v4, v24                                      // 000000002938: 7E080318
	v_mov_b32_e32 v3, v24                                      // 00000000293C: 7E060318
	v_mov_b32_e32 v2, v24                                      // 000000002940: 7E040318
	s_branch BB0_24                                            // 000000002944: BF82007B

0000000000002948 BB0_22:
	v_mov_b32_e32 v3, v2                                       // 000000002948: 7E060302
	v_mov_b32_e32 v4, v2                                       // 00000000294C: 7E080302
	v_mov_b32_e32 v5, v2                                       // 000000002950: 7E0A0302
	v_mov_b32_e32 v6, v2                                       // 000000002954: 7E0C0302
	v_mov_b32_e32 v7, v2                                       // 000000002958: 7E0E0302
	v_mov_b32_e32 v8, v2                                       // 00000000295C: 7E100302
	v_mov_b32_e32 v9, v2                                       // 000000002960: 7E120302
	v_mov_b32_e32 v10, v2                                      // 000000002964: 7E140302
	v_mov_b32_e32 v13, v2                                      // 000000002968: 7E1A0302
	v_mov_b32_e32 v15, v2                                      // 00000000296C: 7E1E0302
	v_mov_b32_e32 v22, v2                                      // 000000002970: 7E2C0302
	v_mov_b32_e32 v21, v2                                      // 000000002974: 7E2A0302
	v_mov_b32_e32 v20, v2                                      // 000000002978: 7E280302
	v_mov_b32_e32 v23, v2                                      // 00000000297C: 7E2E0302
	v_mov_b32_e32 v24, v2                                      // 000000002980: 7E300302
	v_mov_b32_e32 v31, v11                                     // 000000002984: 7E3E030B

0000000000002988 BB0_23:
	s_waitcnt lgkmcnt(0)                                       // 000000002988: BF8C007F
	s_barrier                                                  // 00000000298C: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002990: BF8C007F
	ds_read2_b32 v[33:34], v36 offset1:16                      // 000000002994: D86E1000 21000024
	ds_read2_b32 v[37:38], v36 offset0:32 offset1:48           // 00000000299C: D86E3020 25000024
	ds_read2_b32 v[39:40], v32 offset1:16                      // 0000000029A4: D86E1000 27000020
	ds_read2_b32 v[41:42], v32 offset0:32 offset1:48           // 0000000029AC: D86E3020 29000020
	ds_read2_b32 v[43:44], v36 offset0:64 offset1:80           // 0000000029B4: D86E5040 2B000024
	ds_read2_b32 v[45:46], v32 offset0:64 offset1:80           // 0000000029BC: D86E5040 2D000020
	ds_read2_b32 v[47:48], v36 offset0:96 offset1:112          // 0000000029C4: D86E7060 2F000024
	ds_read2_b32 v[49:50], v32 offset0:96 offset1:112          // 0000000029CC: D86E7060 31000020
	ds_read2_b32 v[51:52], v36 offset0:128 offset1:144         // 0000000029D4: D86E9080 33000024
	ds_read2_b32 v[53:54], v32 offset0:128 offset1:144         // 0000000029DC: D86E9080 35000020
	ds_read2_b32 v[55:56], v36 offset0:160 offset1:176         // 0000000029E4: D86EB0A0 37000024
	ds_read2_b32 v[57:58], v32 offset0:160 offset1:176         // 0000000029EC: D86EB0A0 39000020
	s_waitcnt lgkmcnt(9)                                       // 0000000029F4: BF8C097F
	v_mac_f32_e32 v24, v33, v39                                // 0000000029F8: 2C304F21
	v_mac_f32_e32 v23, v34, v39                                // 0000000029FC: 2C2E4F22
	v_mac_f32_e32 v20, v37, v39                                // 000000002A00: 2C284F25
	v_mac_f32_e32 v21, v38, v39                                // 000000002A04: 2C2A4F26
	v_mac_f32_e32 v22, v33, v40                                // 000000002A08: 2C2C5121
	v_mac_f32_e32 v15, v34, v40                                // 000000002A0C: 2C1E5122
	v_mac_f32_e32 v13, v37, v40                                // 000000002A10: 2C1A5125
	v_mac_f32_e32 v10, v38, v40                                // 000000002A14: 2C145126
	ds_read2_b32 v[39:40], v36 offset0:192 offset1:208         // 000000002A18: D86ED0C0 27000024
	s_waitcnt lgkmcnt(9)                                       // 000000002A20: BF8C097F
	v_mac_f32_e32 v9, v33, v41                                 // 000000002A24: 2C125321
	v_mac_f32_e32 v8, v34, v41                                 // 000000002A28: 2C105322
	v_mac_f32_e32 v5, v33, v42                                 // 000000002A2C: 2C0A5521
	v_mac_f32_e32 v4, v34, v42                                 // 000000002A30: 2C085522
	ds_read2_b32 v[35:36], v36 offset0:224 offset1:240         // 000000002A34: D86EF0E0 23000024
	ds_read2_b32 v[33:34], v32 offset0:192 offset1:208         // 000000002A3C: D86ED0C0 21000020
	s_waitcnt lgkmcnt(9)                                       // 000000002A44: BF8C097F
	v_mac_f32_e32 v24, v43, v45                                // 000000002A48: 2C305B2B
	v_mac_f32_e32 v23, v44, v45                                // 000000002A4C: 2C2E5B2C
	s_waitcnt lgkmcnt(8)                                       // 000000002A50: BF8C087F
	v_mac_f32_e32 v20, v47, v45                                // 000000002A54: 2C285B2F
	v_mac_f32_e32 v21, v48, v45                                // 000000002A58: 2C2A5B30
	s_waitcnt lgkmcnt(5)                                       // 000000002A5C: BF8C057F
	v_mac_f32_e32 v24, v51, v53                                // 000000002A60: 2C306B33
	v_mac_f32_e32 v23, v52, v53                                // 000000002A64: 2C2E6B34
	s_waitcnt lgkmcnt(4)                                       // 000000002A68: BF8C047F
	v_mac_f32_e32 v20, v55, v53                                // 000000002A6C: 2C286B37
	v_mac_f32_e32 v21, v56, v53                                // 000000002A70: 2C2A6B38
	s_waitcnt lgkmcnt(0)                                       // 000000002A74: BF8C007F
	v_mac_f32_e32 v24, v39, v33                                // 000000002A78: 2C304327
	v_mac_f32_e32 v23, v40, v33                                // 000000002A7C: 2C2E4328
	v_mac_f32_e32 v20, v35, v33                                // 000000002A80: 2C284323
	v_mac_f32_e32 v21, v36, v33                                // 000000002A84: 2C2A4324
	ds_read2_b32 v[32:33], v32 offset0:224 offset1:240         // 000000002A88: D86EF0E0 20000020
	v_mac_f32_e32 v7, v37, v41                                 // 000000002A90: 2C0E5325
	v_mac_f32_e32 v6, v38, v41                                 // 000000002A94: 2C0C5326
	v_mac_f32_e32 v3, v37, v42                                 // 000000002A98: 2C065525
	v_mac_f32_e32 v2, v38, v42                                 // 000000002A9C: 2C045526
	v_mac_f32_e32 v22, v43, v46                                // 000000002AA0: 2C2C5D2B
	v_mac_f32_e32 v15, v44, v46                                // 000000002AA4: 2C1E5D2C
	v_mac_f32_e32 v13, v47, v46                                // 000000002AA8: 2C1A5D2F
	v_mac_f32_e32 v10, v48, v46                                // 000000002AAC: 2C145D30
	v_mac_f32_e32 v9, v43, v49                                 // 000000002AB0: 2C12632B
	v_mac_f32_e32 v8, v44, v49                                 // 000000002AB4: 2C10632C
	v_mac_f32_e32 v5, v43, v50                                 // 000000002AB8: 2C0A652B
	v_mac_f32_e32 v4, v44, v50                                 // 000000002ABC: 2C08652C
	v_mac_f32_e32 v7, v47, v49                                 // 000000002AC0: 2C0E632F
	v_mac_f32_e32 v6, v48, v49                                 // 000000002AC4: 2C0C6330
	v_mac_f32_e32 v3, v47, v50                                 // 000000002AC8: 2C06652F
	v_mac_f32_e32 v2, v48, v50                                 // 000000002ACC: 2C046530
	v_mac_f32_e32 v22, v51, v54                                // 000000002AD0: 2C2C6D33
	v_mac_f32_e32 v15, v52, v54                                // 000000002AD4: 2C1E6D34
	v_mac_f32_e32 v13, v55, v54                                // 000000002AD8: 2C1A6D37
	v_mac_f32_e32 v10, v56, v54                                // 000000002ADC: 2C146D38
	v_mac_f32_e32 v9, v51, v57                                 // 000000002AE0: 2C127333
	v_mac_f32_e32 v8, v52, v57                                 // 000000002AE4: 2C107334
	v_mac_f32_e32 v5, v51, v58                                 // 000000002AE8: 2C0A7533
	v_mac_f32_e32 v4, v52, v58                                 // 000000002AEC: 2C087534
	v_mac_f32_e32 v7, v55, v57                                 // 000000002AF0: 2C0E7337
	v_mac_f32_e32 v6, v56, v57                                 // 000000002AF4: 2C0C7338
	v_mac_f32_e32 v3, v55, v58                                 // 000000002AF8: 2C067537
	v_mac_f32_e32 v2, v56, v58                                 // 000000002AFC: 2C047538
	v_mac_f32_e32 v22, v39, v34                                // 000000002B00: 2C2C4527
	v_mac_f32_e32 v15, v40, v34                                // 000000002B04: 2C1E4528
	v_mac_f32_e32 v13, v35, v34                                // 000000002B08: 2C1A4523
	v_mac_f32_e32 v10, v36, v34                                // 000000002B0C: 2C144524
	s_waitcnt lgkmcnt(0)                                       // 000000002B10: BF8C007F
	v_mac_f32_e32 v9, v39, v32                                 // 000000002B14: 2C124127
	v_mac_f32_e32 v8, v40, v32                                 // 000000002B18: 2C104128
	v_mac_f32_e32 v5, v39, v33                                 // 000000002B1C: 2C0A4327
	v_mac_f32_e32 v4, v40, v33                                 // 000000002B20: 2C084328
	v_mac_f32_e32 v7, v35, v32                                 // 000000002B24: 2C0E4123
	v_mac_f32_e32 v6, v36, v32                                 // 000000002B28: 2C0C4124
	v_mac_f32_e32 v3, v35, v33                                 // 000000002B2C: 2C064323
	v_mac_f32_e32 v2, v36, v33                                 // 000000002B30: 2C044324

0000000000002b34 BB0_24:
	s_and_b32 s3, s29, 3                                       // 000000002B34: 8603831D
	v_sub_u32_e32 v32, vcc, s2, v25                            // 000000002B38: 34403202
	v_mov_b32_e32 v33, 0                                       // 000000002B3C: 7E420280
	v_cmp_gt_u32_e32 vcc, s3, v19                              // 000000002B40: 7D982603
	v_mov_b32_e32 v19, v33                                     // 000000002B44: 7E260321
	s_and_saveexec_b64 s[4:5], vcc                             // 000000002B48: BE84206A
	s_cbranch_execz BB0_26                                     // 000000002B4C: BF88000D

0000000000002b50 BB0_25:
	v_mul_lo_u32 v19, s1, v32                                  // 000000002B50: D2850013 00024001
	v_mul_hi_u32 v25, s0, v32                                  // 000000002B58: D2860019 00024000
	v_mul_lo_u32 v34, s0, v32                                  // 000000002B60: D2850022 00024000
	v_add_u32_e32 v35, vcc, v25, v19                           // 000000002B68: 32462719
	v_lshlrev_b64 v[34:35], 2, v[34:35]                        // 000000002B6C: D28F0022 00024482
	v_add_u32_e32 v27, vcc, v27, v34                           // 000000002B74: 3236451B
	v_addc_u32_e32 v28, vcc, v28, v35, vcc                     // 000000002B78: 3838471C
	flat_load_dword v19, v[27:28]                              // 000000002B7C: DC500000 1300001B

0000000000002b84 BB0_26:
	s_or_b64 exec, exec, s[4:5]                                // 000000002B84: 87FE047E
	v_cmp_gt_u32_e32 vcc, s3, v18                              // 000000002B88: 7D982403
	v_mov_b32_e32 v18, 0                                       // 000000002B8C: 7E240280
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002B90: BE80206A
	s_cbranch_execz BB0_28                                     // 000000002B94: BF880006

0000000000002b98 BB0_27:
	v_lshlrev_b64 v[27:28], 4, v[32:33]                        // 000000002B98: D28F001B 00024084
	v_add_u32_e32 v27, vcc, v29, v27                           // 000000002BA0: 3236371D
	v_addc_u32_e32 v28, vcc, v30, v28, vcc                     // 000000002BA4: 3838391E
	flat_load_dword v18, v[27:28]                              // 000000002BA8: DC500000 1200001B

0000000000002bb0 BB0_28:
	s_or_b64 exec, exec, s[0:1]                                // 000000002BB0: 87FE007E
	s_movk_i32 s0, 0x1ff                                       // 000000002BB4: B00001FF
	v_and_b32_e32 v0, s0, v0                                   // 000000002BB8: 26000000
	v_and_b32_e32 v25, s0, v26                                 // 000000002BBC: 26323400
	v_lshlrev_b32_e32 v0, 2, v0                                // 000000002BC0: 24000082
	v_lshlrev_b32_e32 v25, 2, v25                              // 000000002BC4: 24323282
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002BC8: BF8C0070
	s_barrier                                                  // 000000002BCC: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002BD0: BF8C007F
	ds_write_b32 v0, v19                                       // 000000002BD4: D81A0000 00001300
	ds_write_b32 v25, v18                                      // 000000002BDC: D81A0000 00001219
	s_waitcnt lgkmcnt(0)                                       // 000000002BE4: BF8C007F
	s_barrier                                                  // 000000002BE8: BF8A0000
	s_cmp_eq_u32 s3, 0                                         // 000000002BEC: BF068003
	s_waitcnt lgkmcnt(0)                                       // 000000002BF0: BF8C007F
	s_cbranch_scc1 BB0_31                                      // 000000002BF4: BF850025
	v_and_b32_e32 v0, s0, v14                                  // 000000002BF8: 26001C00
	v_and_b32_e32 v14, s0, v31                                 // 000000002BFC: 261C3E00
	v_lshlrev_b32_e32 v0, 2, v0                                // 000000002C00: 24000082
	v_lshlrev_b32_e32 v14, 2, v14                              // 000000002C04: 241C1C82
	v_mov_b32_e32 v18, s3                                      // 000000002C08: 7E240203
	s_movk_i32 s0, 0x100                                       // 000000002C0C: B0000100

0000000000002c10 BB0_30:
	ds_read2_b32 v[27:28], v0 offset1:16                       // 000000002C10: D86E1000 1B000000
	ds_read2_b32 v[29:30], v14 offset0:32 offset1:48           // 000000002C18: D86E3020 1D00000E
	ds_read2_b32 v[31:32], v0 offset0:32 offset1:48            // 000000002C20: D86E3020 1F000000
	ds_read2_b32 v[25:26], v14 offset1:16                      // 000000002C28: D86E1000 1900000E
	v_add_u32_e32 v18, vcc, -1, v18                            // 000000002C30: 322424C1
	v_add_u32_e32 v14, vcc, s0, v14                            // 000000002C34: 321C1C00
	v_add_u32_e32 v0, vcc, s0, v0                              // 000000002C38: 32000000
	v_cmp_ne_u32_e32 vcc, 0, v18                               // 000000002C3C: 7D9A2480
	s_and_b64 vcc, exec, vcc                                   // 000000002C40: 86EA6A7E
	s_waitcnt lgkmcnt(0)                                       // 000000002C44: BF8C007F
	v_mac_f32_e32 v24, v25, v27                                // 000000002C48: 2C303719
	v_mac_f32_e32 v23, v26, v27                                // 000000002C4C: 2C2E371A
	v_mac_f32_e32 v20, v29, v27                                // 000000002C50: 2C28371D
	v_mac_f32_e32 v21, v30, v27                                // 000000002C54: 2C2A371E
	v_mac_f32_e32 v22, v25, v28                                // 000000002C58: 2C2C3919
	v_mac_f32_e32 v15, v26, v28                                // 000000002C5C: 2C1E391A
	v_mac_f32_e32 v13, v29, v28                                // 000000002C60: 2C1A391D
	v_mac_f32_e32 v10, v30, v28                                // 000000002C64: 2C14391E
	v_mac_f32_e32 v9, v25, v31                                 // 000000002C68: 2C123F19
	v_mac_f32_e32 v8, v26, v31                                 // 000000002C6C: 2C103F1A
	v_mac_f32_e32 v5, v25, v32                                 // 000000002C70: 2C0A4119
	v_mac_f32_e32 v4, v26, v32                                 // 000000002C74: 2C08411A
	v_mac_f32_e32 v7, v29, v31                                 // 000000002C78: 2C0E3F1D
	v_mac_f32_e32 v6, v30, v31                                 // 000000002C7C: 2C0C3F1E
	v_mac_f32_e32 v3, v29, v32                                 // 000000002C80: 2C06411D
	v_mac_f32_e32 v2, v30, v32                                 // 000000002C84: 2C04411E
	s_cbranch_vccnz BB0_30                                     // 000000002C88: BF87FFE1

0000000000002c8c BB0_31:
	v_or_b32_e32 v18, v16, v11                                 // 000000002C8C: 28241710
	v_or_b32_e32 v0, v17, v12                                  // 000000002C90: 28001911
	v_cmp_gt_u32_e64 s[4:5], s26, v18                          // 000000002C94: D0CC0004 0002241A
	v_cmp_gt_u32_e64 s[8:9], s27, v0                           // 000000002C9C: D0CC0008 0002001B
	s_and_b64 s[2:3], s[4:5], s[8:9]                           // 000000002CA4: 86820804
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002CA8: BE802002
	s_cbranch_execz BB0_35                                     // 000000002CAC: BF88001E

0000000000002cb0 BB0_32:
	v_cmp_neq_f32_e64 s[2:3], s17, 0                           // 000000002CB0: D04D0002 00010011
	v_mul_f32_e32 v11, s16, v24                                // 000000002CB8: 0A163010
	v_mov_b32_e32 v19, 0                                       // 000000002CBC: 7E260280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002CC0: 86EA027E
	s_cbranch_vccz BB0_34                                      // 000000002CC4: BF86000D
	v_mad_u64_u32 v[16:17], s[2:3], v1, s21, v[18:19]          // 000000002CC8: D1E80210 04482B01
	v_mov_b32_e32 v12, s15                                     // 000000002CD0: 7E18020F
	v_mad_u64_u32 v[16:17], s[2:3], v0, s20, v[16:17]          // 000000002CD4: D1E80210 04402900
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002CDC: D28F0010 00022082
	v_add_u32_e32 v16, vcc, s14, v16                           // 000000002CE4: 3220200E
	v_addc_u32_e32 v17, vcc, v12, v17, vcc                     // 000000002CE8: 3822230C
	flat_load_dword v12, v[16:17]                              // 000000002CEC: DC500000 0C000010
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002CF4: BF8C0070
	v_mac_f32_e32 v11, s17, v12                                // 000000002CF8: 2C161811

0000000000002cfc BB0_34:
	v_mad_u64_u32 v[16:17], s[2:3], v1, s19, v[18:19]          // 000000002CFC: D1E80210 04482701
	v_mov_b32_e32 v12, s13                                     // 000000002D04: 7E18020D
	v_mad_u64_u32 v[16:17], s[2:3], v0, s18, v[16:17]          // 000000002D08: D1E80210 04402500
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002D10: D28F0010 00022082
	v_add_u32_e32 v16, vcc, s12, v16                           // 000000002D18: 3220200C
	v_addc_u32_e32 v17, vcc, v12, v17, vcc                     // 000000002D1C: 3822230C
	flat_store_dword v[16:17], v11                             // 000000002D20: DC700000 00000B10

0000000000002d28 BB0_35:
	s_or_b64 exec, exec, s[0:1]                                // 000000002D28: 87FE007E
	v_or_b32_e32 v11, 16, v18                                  // 000000002D2C: 28162490
	v_cmp_gt_u32_e64 s[0:1], s26, v11                          // 000000002D30: D0CC0000 0002161A
	s_and_b64 s[6:7], s[0:1], s[8:9]                           // 000000002D38: 86860800
	s_and_saveexec_b64 s[2:3], s[6:7]                          // 000000002D3C: BE822006
	s_cbranch_execz BB0_39                                     // 000000002D40: BF88001E

0000000000002d44 BB0_36:
	v_cmp_neq_f32_e64 s[6:7], s17, 0                           // 000000002D44: D04D0006 00010011
	v_mul_f32_e32 v14, s16, v23                                // 000000002D4C: 0A1C2E10
	v_mov_b32_e32 v12, 0                                       // 000000002D50: 7E180280
	s_and_b64 vcc, exec, s[6:7]                                // 000000002D54: 86EA067E
	s_cbranch_vccz BB0_38                                      // 000000002D58: BF86000D
	v_mad_u64_u32 v[16:17], s[6:7], v1, s21, v[11:12]          // 000000002D5C: D1E80610 042C2B01
	v_mov_b32_e32 v19, s15                                     // 000000002D64: 7E26020F
	v_mad_u64_u32 v[16:17], s[6:7], v0, s20, v[16:17]          // 000000002D68: D1E80610 04402900
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002D70: D28F0010 00022082
	v_add_u32_e32 v16, vcc, s14, v16                           // 000000002D78: 3220200E
	v_addc_u32_e32 v17, vcc, v19, v17, vcc                     // 000000002D7C: 38222313
	flat_load_dword v16, v[16:17]                              // 000000002D80: DC500000 10000010
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002D88: BF8C0070
	v_mac_f32_e32 v14, s17, v16                                // 000000002D8C: 2C1C2011

0000000000002d90 BB0_38:
	v_mad_u64_u32 v[16:17], s[6:7], v1, s19, v[11:12]          // 000000002D90: D1E80610 042C2701
	v_mov_b32_e32 v12, s13                                     // 000000002D98: 7E18020D
	v_mad_u64_u32 v[16:17], s[6:7], v0, s18, v[16:17]          // 000000002D9C: D1E80610 04402500
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002DA4: D28F0010 00022082
	v_add_u32_e32 v16, vcc, s12, v16                           // 000000002DAC: 3220200C
	v_addc_u32_e32 v17, vcc, v12, v17, vcc                     // 000000002DB0: 3822230C
	flat_store_dword v[16:17], v14                             // 000000002DB4: DC700000 00000E10

0000000000002dbc BB0_39:
	s_or_b64 exec, exec, s[2:3]                                // 000000002DBC: 87FE027E
	v_or_b32_e32 v16, 32, v18                                  // 000000002DC0: 282024A0
	v_cmp_gt_u32_e64 s[2:3], s26, v16                          // 000000002DC4: D0CC0002 0002201A
	s_and_b64 s[10:11], s[2:3], s[8:9]                         // 000000002DCC: 868A0802
	s_and_saveexec_b64 s[6:7], s[10:11]                        // 000000002DD0: BE86200A
	s_cbranch_execz BB0_43                                     // 000000002DD4: BF88001E

0000000000002dd8 BB0_40:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000002DD8: D04D000A 00010011
	v_mul_f32_e32 v12, s16, v20                                // 000000002DE0: 0A182810
	v_mov_b32_e32 v17, 0                                       // 000000002DE4: 7E220280
	s_and_b64 vcc, exec, s[10:11]                              // 000000002DE8: 86EA0A7E
	s_cbranch_vccz BB0_42                                      // 000000002DEC: BF86000D
	v_mad_u64_u32 v[19:20], s[10:11], v1, s21, v[16:17]        // 000000002DF0: D1E80A13 04402B01
	v_mov_b32_e32 v14, s15                                     // 000000002DF8: 7E1C020F
	v_mad_u64_u32 v[19:20], s[10:11], v0, s20, v[19:20]        // 000000002DFC: D1E80A13 044C2900
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002E04: D28F0013 00022682
	v_add_u32_e32 v19, vcc, s14, v19                           // 000000002E0C: 3226260E
	v_addc_u32_e32 v20, vcc, v14, v20, vcc                     // 000000002E10: 3828290E
	flat_load_dword v14, v[19:20]                              // 000000002E14: DC500000 0E000013
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002E1C: BF8C0070
	v_mac_f32_e32 v12, s17, v14                                // 000000002E20: 2C181C11

0000000000002e24 BB0_42:
	v_mad_u64_u32 v[19:20], s[10:11], v1, s19, v[16:17]        // 000000002E24: D1E80A13 04402701
	v_mov_b32_e32 v14, s13                                     // 000000002E2C: 7E1C020D
	v_mad_u64_u32 v[19:20], s[10:11], v0, s18, v[19:20]        // 000000002E30: D1E80A13 044C2500
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002E38: D28F0013 00022682
	v_add_u32_e32 v19, vcc, s12, v19                           // 000000002E40: 3226260C
	v_addc_u32_e32 v20, vcc, v14, v20, vcc                     // 000000002E44: 3828290E
	flat_store_dword v[19:20], v12                             // 000000002E48: DC700000 00000C13

0000000000002e50 BB0_43:
	s_or_b64 exec, exec, s[6:7]                                // 000000002E50: 87FE067E
	v_or_b32_e32 v20, 48, v18                                  // 000000002E54: 282824B0
	v_cmp_gt_u32_e64 s[6:7], s26, v20                          // 000000002E58: D0CC0006 0002281A
	s_and_b64 s[10:11], s[6:7], s[8:9]                         // 000000002E60: 868A0806
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 000000002E64: BE88200A
	s_cbranch_execz BB0_47                                     // 000000002E68: BF88001E

0000000000002e6c BB0_44:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000002E6C: D04D000A 00010011
	v_mul_f32_e32 v12, s16, v21                                // 000000002E74: 0A182A10
	v_mov_b32_e32 v21, 0                                       // 000000002E78: 7E2A0280
	s_and_b64 vcc, exec, s[10:11]                              // 000000002E7C: 86EA0A7E
	s_cbranch_vccz BB0_46                                      // 000000002E80: BF86000D
	v_mad_u64_u32 v[23:24], s[10:11], v1, s21, v[20:21]        // 000000002E84: D1E80A17 04502B01
	v_mov_b32_e32 v14, s15                                     // 000000002E8C: 7E1C020F
	v_mad_u64_u32 v[23:24], s[10:11], v0, s20, v[23:24]        // 000000002E90: D1E80A17 045C2900
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002E98: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s14, v23                           // 000000002EA0: 322E2E0E
	v_addc_u32_e32 v24, vcc, v14, v24, vcc                     // 000000002EA4: 3830310E
	flat_load_dword v14, v[23:24]                              // 000000002EA8: DC500000 0E000017
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002EB0: BF8C0070
	v_mac_f32_e32 v12, s17, v14                                // 000000002EB4: 2C181C11

0000000000002eb8 BB0_46:
	v_mad_u64_u32 v[23:24], s[10:11], v1, s19, v[20:21]        // 000000002EB8: D1E80A17 04502701
	v_mov_b32_e32 v14, s13                                     // 000000002EC0: 7E1C020D
	v_mad_u64_u32 v[23:24], s[10:11], v0, s18, v[23:24]        // 000000002EC4: D1E80A17 045C2500
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002ECC: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s12, v23                           // 000000002ED4: 322E2E0C
	v_addc_u32_e32 v24, vcc, v14, v24, vcc                     // 000000002ED8: 3830310E
	flat_store_dword v[23:24], v12                             // 000000002EDC: DC700000 00000C17

0000000000002ee4 BB0_47:
	s_or_b64 exec, exec, s[8:9]                                // 000000002EE4: 87FE087E
	v_add_u32_e32 v12, vcc, 16, v0                             // 000000002EE8: 32180090
	v_cmp_gt_u32_e64 s[8:9], s27, v12                          // 000000002EEC: D0CC0008 0002181B
	s_and_b64 s[22:23], s[4:5], s[8:9]                         // 000000002EF4: 86960804
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000002EF8: BE8A2016
	s_cbranch_execz BB0_51                                     // 000000002EFC: BF88001F

0000000000002f00 BB0_48:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000002F00: D04D0016 00010011
	v_mul_f32_e32 v14, s16, v22                                // 000000002F08: 0A1C2C10
	v_mov_b32_e32 v22, 0                                       // 000000002F0C: 7E2C0280
	v_mov_b32_e32 v21, v18                                     // 000000002F10: 7E2A0312
	s_and_b64 vcc, exec, s[22:23]                              // 000000002F14: 86EA167E
	s_cbranch_vccz BB0_50                                      // 000000002F18: BF86000D
	v_mad_u64_u32 v[23:24], s[22:23], v1, s21, v[21:22]        // 000000002F1C: D1E81617 04542B01
	v_mov_b32_e32 v17, s15                                     // 000000002F24: 7E22020F
	v_mad_u64_u32 v[23:24], s[22:23], v12, s20, v[23:24]       // 000000002F28: D1E81617 045C290C
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002F30: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s14, v23                           // 000000002F38: 322E2E0E
	v_addc_u32_e32 v24, vcc, v17, v24, vcc                     // 000000002F3C: 38303111
	flat_load_dword v17, v[23:24]                              // 000000002F40: DC500000 11000017
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002F48: BF8C0070
	v_mac_f32_e32 v14, s17, v17                                // 000000002F4C: 2C1C2211

0000000000002f50 BB0_50:
	v_mad_u64_u32 v[21:22], s[22:23], v1, s19, v[21:22]        // 000000002F50: D1E81615 04542701
	v_mov_b32_e32 v17, s13                                     // 000000002F58: 7E22020D
	v_mad_u64_u32 v[21:22], s[22:23], v12, s18, v[21:22]       // 000000002F5C: D1E81615 0454250C
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002F64: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s12, v21                           // 000000002F6C: 322A2A0C
	v_addc_u32_e32 v22, vcc, v17, v22, vcc                     // 000000002F70: 382C2D11
	flat_store_dword v[21:22], v14                             // 000000002F74: DC700000 00000E15

0000000000002f7c BB0_51:
	s_or_b64 exec, exec, s[10:11]                              // 000000002F7C: 87FE0A7E
	s_and_b64 s[22:23], s[0:1], s[8:9]                         // 000000002F80: 86960800
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000002F84: BE8A2016
	s_cbranch_execz BB0_55                                     // 000000002F88: BF88001F

0000000000002f8c BB0_52:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000002F8C: D04D0016 00010011
	v_mul_f32_e32 v14, s16, v15                                // 000000002F94: 0A1C1E10
	v_mov_b32_e32 v22, 0                                       // 000000002F98: 7E2C0280
	v_mov_b32_e32 v21, v11                                     // 000000002F9C: 7E2A030B
	s_and_b64 vcc, exec, s[22:23]                              // 000000002FA0: 86EA167E
	s_cbranch_vccz BB0_54                                      // 000000002FA4: BF86000D
	v_mad_u64_u32 v[23:24], s[22:23], v1, s21, v[21:22]        // 000000002FA8: D1E81617 04542B01
	v_mov_b32_e32 v15, s15                                     // 000000002FB0: 7E1E020F
	v_mad_u64_u32 v[23:24], s[22:23], v12, s20, v[23:24]       // 000000002FB4: D1E81617 045C290C
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002FBC: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s14, v23                           // 000000002FC4: 322E2E0E
	v_addc_u32_e32 v24, vcc, v15, v24, vcc                     // 000000002FC8: 3830310F
	flat_load_dword v15, v[23:24]                              // 000000002FCC: DC500000 0F000017
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002FD4: BF8C0070
	v_mac_f32_e32 v14, s17, v15                                // 000000002FD8: 2C1C1E11

0000000000002fdc BB0_54:
	v_mad_u64_u32 v[21:22], s[22:23], v1, s19, v[21:22]        // 000000002FDC: D1E81615 04542701
	v_mov_b32_e32 v15, s13                                     // 000000002FE4: 7E1E020D
	v_mad_u64_u32 v[21:22], s[22:23], v12, s18, v[21:22]       // 000000002FE8: D1E81615 0454250C
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002FF0: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s12, v21                           // 000000002FF8: 322A2A0C
	v_addc_u32_e32 v22, vcc, v15, v22, vcc                     // 000000002FFC: 382C2D0F
	flat_store_dword v[21:22], v14                             // 000000003000: DC700000 00000E15

0000000000003008 BB0_55:
	s_or_b64 exec, exec, s[10:11]                              // 000000003008: 87FE0A7E
	s_and_b64 s[22:23], s[2:3], s[8:9]                         // 00000000300C: 86960802
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000003010: BE8A2016
	s_cbranch_execz BB0_59                                     // 000000003014: BF88001F

0000000000003018 BB0_56:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000003018: D04D0016 00010011
	v_mul_f32_e32 v13, s16, v13                                // 000000003020: 0A1A1A10
	v_mov_b32_e32 v15, 0                                       // 000000003024: 7E1E0280
	v_mov_b32_e32 v14, v16                                     // 000000003028: 7E1C0310
	s_and_b64 vcc, exec, s[22:23]                              // 00000000302C: 86EA167E
	s_cbranch_vccz BB0_58                                      // 000000003030: BF86000D
	v_mad_u64_u32 v[21:22], s[22:23], v1, s21, v[14:15]        // 000000003034: D1E81615 04382B01
	v_mov_b32_e32 v17, s15                                     // 00000000303C: 7E22020F
	v_mad_u64_u32 v[21:22], s[22:23], v12, s20, v[21:22]       // 000000003040: D1E81615 0454290C
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000003048: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s14, v21                           // 000000003050: 322A2A0E
	v_addc_u32_e32 v22, vcc, v17, v22, vcc                     // 000000003054: 382C2D11
	flat_load_dword v17, v[21:22]                              // 000000003058: DC500000 11000015
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003060: BF8C0070
	v_mac_f32_e32 v13, s17, v17                                // 000000003064: 2C1A2211

0000000000003068 BB0_58:
	v_mad_u64_u32 v[14:15], s[22:23], v1, s19, v[14:15]        // 000000003068: D1E8160E 04382701
	v_mov_b32_e32 v17, s13                                     // 000000003070: 7E22020D
	v_mad_u64_u32 v[14:15], s[22:23], v12, s18, v[14:15]       // 000000003074: D1E8160E 0438250C
	v_lshlrev_b64 v[14:15], 2, v[14:15]                        // 00000000307C: D28F000E 00021C82
	v_add_u32_e32 v14, vcc, s12, v14                           // 000000003084: 321C1C0C
	v_addc_u32_e32 v15, vcc, v17, v15, vcc                     // 000000003088: 381E1F11
	flat_store_dword v[14:15], v13                             // 00000000308C: DC700000 00000D0E

0000000000003094 BB0_59:
	s_or_b64 exec, exec, s[10:11]                              // 000000003094: 87FE0A7E
	s_and_b64 s[10:11], s[6:7], s[8:9]                         // 000000003098: 868A0806
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 00000000309C: BE88200A
	s_cbranch_execz BB0_63                                     // 0000000030A0: BF88001F

00000000000030a4 BB0_60:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 0000000030A4: D04D000A 00010011
	v_mul_f32_e32 v10, s16, v10                                // 0000000030AC: 0A141410
	v_mov_b32_e32 v14, 0                                       // 0000000030B0: 7E1C0280
	v_mov_b32_e32 v13, v20                                     // 0000000030B4: 7E1A0314
	s_and_b64 vcc, exec, s[10:11]                              // 0000000030B8: 86EA0A7E
	s_cbranch_vccz BB0_62                                      // 0000000030BC: BF86000D
	v_mad_u64_u32 v[21:22], s[10:11], v1, s21, v[13:14]        // 0000000030C0: D1E80A15 04342B01
	v_mov_b32_e32 v15, s15                                     // 0000000030C8: 7E1E020F
	v_mad_u64_u32 v[21:22], s[10:11], v12, s20, v[21:22]       // 0000000030CC: D1E80A15 0454290C
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 0000000030D4: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s14, v21                           // 0000000030DC: 322A2A0E
	v_addc_u32_e32 v22, vcc, v15, v22, vcc                     // 0000000030E0: 382C2D0F
	flat_load_dword v15, v[21:22]                              // 0000000030E4: DC500000 0F000015
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000030EC: BF8C0070
	v_mac_f32_e32 v10, s17, v15                                // 0000000030F0: 2C141E11

00000000000030f4 BB0_62:
	v_mad_u64_u32 v[13:14], s[10:11], v1, s19, v[13:14]        // 0000000030F4: D1E80A0D 04342701
	v_mad_u64_u32 v[12:13], s[10:11], v12, s18, v[13:14]       // 0000000030FC: D1E80A0C 0434250C
	v_mov_b32_e32 v14, s13                                     // 000000003104: 7E1C020D
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 000000003108: D28F000C 00021882
	v_add_u32_e32 v12, vcc, s12, v12                           // 000000003110: 3218180C
	v_addc_u32_e32 v13, vcc, v14, v13, vcc                     // 000000003114: 381A1B0E
	flat_store_dword v[12:13], v10                             // 000000003118: DC700000 00000A0C

0000000000003120 BB0_63:
	s_or_b64 exec, exec, s[8:9]                                // 000000003120: 87FE087E
	v_add_u32_e32 v10, vcc, 32, v0                             // 000000003124: 321400A0
	v_cmp_gt_u32_e64 s[8:9], s27, v10                          // 000000003128: D0CC0008 0002141B
	s_and_b64 s[22:23], s[4:5], s[8:9]                         // 000000003130: 86960804
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000003134: BE8A2016
	s_cbranch_execz BB0_67                                     // 000000003138: BF88001F

000000000000313c BB0_64:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 00000000313C: D04D0016 00010011
	v_mul_f32_e32 v9, s16, v9                                  // 000000003144: 0A121210
	v_mov_b32_e32 v13, 0                                       // 000000003148: 7E1A0280
	v_mov_b32_e32 v12, v18                                     // 00000000314C: 7E180312
	s_and_b64 vcc, exec, s[22:23]                              // 000000003150: 86EA167E
	s_cbranch_vccz BB0_66                                      // 000000003154: BF86000D
	v_mad_u64_u32 v[14:15], s[22:23], v1, s21, v[12:13]        // 000000003158: D1E8160E 04302B01
	v_mov_b32_e32 v17, s15                                     // 000000003160: 7E22020F
	v_mad_u64_u32 v[14:15], s[22:23], v10, s20, v[14:15]       // 000000003164: D1E8160E 0438290A
	v_lshlrev_b64 v[14:15], 2, v[14:15]                        // 00000000316C: D28F000E 00021C82
	v_add_u32_e32 v14, vcc, s14, v14                           // 000000003174: 321C1C0E
	v_addc_u32_e32 v15, vcc, v17, v15, vcc                     // 000000003178: 381E1F11
	flat_load_dword v14, v[14:15]                              // 00000000317C: DC500000 0E00000E
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003184: BF8C0070
	v_mac_f32_e32 v9, s17, v14                                 // 000000003188: 2C121C11

000000000000318c BB0_66:
	v_mad_u64_u32 v[12:13], s[22:23], v1, s19, v[12:13]        // 00000000318C: D1E8160C 04302701
	v_mov_b32_e32 v14, s13                                     // 000000003194: 7E1C020D
	v_mad_u64_u32 v[12:13], s[22:23], v10, s18, v[12:13]       // 000000003198: D1E8160C 0430250A
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 0000000031A0: D28F000C 00021882
	v_add_u32_e32 v12, vcc, s12, v12                           // 0000000031A8: 3218180C
	v_addc_u32_e32 v13, vcc, v14, v13, vcc                     // 0000000031AC: 381A1B0E
	flat_store_dword v[12:13], v9                              // 0000000031B0: DC700000 0000090C

00000000000031b8 BB0_67:
	s_or_b64 exec, exec, s[10:11]                              // 0000000031B8: 87FE0A7E
	s_and_b64 s[22:23], s[0:1], s[8:9]                         // 0000000031BC: 86960800
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 0000000031C0: BE8A2016
	s_cbranch_execz BB0_71                                     // 0000000031C4: BF88001F

00000000000031c8 BB0_68:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 0000000031C8: D04D0016 00010011
	v_mul_f32_e32 v8, s16, v8                                  // 0000000031D0: 0A101010
	v_mov_b32_e32 v13, 0                                       // 0000000031D4: 7E1A0280
	v_mov_b32_e32 v12, v11                                     // 0000000031D8: 7E18030B
	s_and_b64 vcc, exec, s[22:23]                              // 0000000031DC: 86EA167E
	s_cbranch_vccz BB0_70                                      // 0000000031E0: BF86000D
	v_mad_u64_u32 v[14:15], s[22:23], v1, s21, v[12:13]        // 0000000031E4: D1E8160E 04302B01
	v_mov_b32_e32 v9, s15                                      // 0000000031EC: 7E12020F
	v_mad_u64_u32 v[14:15], s[22:23], v10, s20, v[14:15]       // 0000000031F0: D1E8160E 0438290A
	v_lshlrev_b64 v[14:15], 2, v[14:15]                        // 0000000031F8: D28F000E 00021C82
	v_add_u32_e32 v14, vcc, s14, v14                           // 000000003200: 321C1C0E
	v_addc_u32_e32 v15, vcc, v9, v15, vcc                      // 000000003204: 381E1F09
	flat_load_dword v9, v[14:15]                               // 000000003208: DC500000 0900000E
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003210: BF8C0070
	v_mac_f32_e32 v8, s17, v9                                  // 000000003214: 2C101211

0000000000003218 BB0_70:
	v_mad_u64_u32 v[12:13], s[22:23], v1, s19, v[12:13]        // 000000003218: D1E8160C 04302701
	v_mov_b32_e32 v9, s13                                      // 000000003220: 7E12020D
	v_mad_u64_u32 v[12:13], s[22:23], v10, s18, v[12:13]       // 000000003224: D1E8160C 0430250A
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 00000000322C: D28F000C 00021882
	v_add_u32_e32 v12, vcc, s12, v12                           // 000000003234: 3218180C
	v_addc_u32_e32 v13, vcc, v9, v13, vcc                      // 000000003238: 381A1B09
	flat_store_dword v[12:13], v8                              // 00000000323C: DC700000 0000080C

0000000000003244 BB0_71:
	s_or_b64 exec, exec, s[10:11]                              // 000000003244: 87FE0A7E
	s_and_b64 s[22:23], s[2:3], s[8:9]                         // 000000003248: 86960802
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 00000000324C: BE8A2016
	s_cbranch_execz BB0_75                                     // 000000003250: BF88001F

0000000000003254 BB0_72:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000003254: D04D0016 00010011
	v_mul_f32_e32 v7, s16, v7                                  // 00000000325C: 0A0E0E10
	v_mov_b32_e32 v9, 0                                        // 000000003260: 7E120280
	v_mov_b32_e32 v8, v16                                      // 000000003264: 7E100310
	s_and_b64 vcc, exec, s[22:23]                              // 000000003268: 86EA167E
	s_cbranch_vccz BB0_74                                      // 00000000326C: BF86000D
	v_mad_u64_u32 v[12:13], s[22:23], v1, s21, v[8:9]          // 000000003270: D1E8160C 04202B01
	v_mov_b32_e32 v14, s15                                     // 000000003278: 7E1C020F
	v_mad_u64_u32 v[12:13], s[22:23], v10, s20, v[12:13]       // 00000000327C: D1E8160C 0430290A
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 000000003284: D28F000C 00021882
	v_add_u32_e32 v12, vcc, s14, v12                           // 00000000328C: 3218180E
	v_addc_u32_e32 v13, vcc, v14, v13, vcc                     // 000000003290: 381A1B0E
	flat_load_dword v12, v[12:13]                              // 000000003294: DC500000 0C00000C
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000329C: BF8C0070
	v_mac_f32_e32 v7, s17, v12                                 // 0000000032A0: 2C0E1811

00000000000032a4 BB0_74:
	v_mad_u64_u32 v[8:9], s[22:23], v1, s19, v[8:9]            // 0000000032A4: D1E81608 04202701
	v_mov_b32_e32 v12, s13                                     // 0000000032AC: 7E18020D
	v_mad_u64_u32 v[8:9], s[22:23], v10, s18, v[8:9]           // 0000000032B0: D1E81608 0420250A
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 0000000032B8: D28F0008 00021082
	v_add_u32_e32 v8, vcc, s12, v8                             // 0000000032C0: 3210100C
	v_addc_u32_e32 v9, vcc, v12, v9, vcc                       // 0000000032C4: 3812130C
	flat_store_dword v[8:9], v7                                // 0000000032C8: DC700000 00000708

00000000000032d0 BB0_75:
	s_or_b64 exec, exec, s[10:11]                              // 0000000032D0: 87FE0A7E
	s_and_b64 s[10:11], s[6:7], s[8:9]                         // 0000000032D4: 868A0806
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 0000000032D8: BE88200A
	s_cbranch_execz BB0_79                                     // 0000000032DC: BF88001F

00000000000032e0 BB0_76:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 0000000032E0: D04D000A 00010011
	v_mul_f32_e32 v6, s16, v6                                  // 0000000032E8: 0A0C0C10
	v_mov_b32_e32 v8, 0                                        // 0000000032EC: 7E100280
	v_mov_b32_e32 v7, v20                                      // 0000000032F0: 7E0E0314
	s_and_b64 vcc, exec, s[10:11]                              // 0000000032F4: 86EA0A7E
	s_cbranch_vccz BB0_78                                      // 0000000032F8: BF86000D
	v_mad_u64_u32 v[12:13], s[10:11], v1, s21, v[7:8]          // 0000000032FC: D1E80A0C 041C2B01
	v_mov_b32_e32 v9, s15                                      // 000000003304: 7E12020F
	v_mad_u64_u32 v[12:13], s[10:11], v10, s20, v[12:13]       // 000000003308: D1E80A0C 0430290A
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 000000003310: D28F000C 00021882
	v_add_u32_e32 v12, vcc, s14, v12                           // 000000003318: 3218180E
	v_addc_u32_e32 v13, vcc, v9, v13, vcc                      // 00000000331C: 381A1B09
	flat_load_dword v9, v[12:13]                               // 000000003320: DC500000 0900000C
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003328: BF8C0070
	v_mac_f32_e32 v6, s17, v9                                  // 00000000332C: 2C0C1211

0000000000003330 BB0_78:
	v_mad_u64_u32 v[7:8], s[10:11], v1, s19, v[7:8]            // 000000003330: D1E80A07 041C2701
	v_mov_b32_e32 v9, s13                                      // 000000003338: 7E12020D
	v_mad_u64_u32 v[7:8], s[10:11], v10, s18, v[7:8]           // 00000000333C: D1E80A07 041C250A
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 000000003344: D28F0007 00020E82
	v_add_u32_e32 v7, vcc, s12, v7                             // 00000000334C: 320E0E0C
	v_addc_u32_e32 v8, vcc, v9, v8, vcc                        // 000000003350: 38101109
	flat_store_dword v[7:8], v6                                // 000000003354: DC700000 00000607

000000000000335c BB0_79:
	s_or_b64 exec, exec, s[8:9]                                // 00000000335C: 87FE087E
	v_add_u32_e32 v0, vcc, 48, v0                              // 000000003360: 320000B0
	v_cmp_gt_u32_e64 s[8:9], s27, v0                           // 000000003364: D0CC0008 0002001B
	s_and_b64 s[10:11], s[4:5], s[8:9]                         // 00000000336C: 868A0804
	s_and_saveexec_b64 s[4:5], s[10:11]                        // 000000003370: BE84200A
	s_cbranch_execz BB0_83                                     // 000000003374: BF88001E

0000000000003378 BB0_80:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000003378: D04D000A 00010011
	v_mul_f32_e32 v5, s16, v5                                  // 000000003380: 0A0A0A10
	v_mov_b32_e32 v19, 0                                       // 000000003384: 7E260280
	s_and_b64 vcc, exec, s[10:11]                              // 000000003388: 86EA0A7E
	s_cbranch_vccz BB0_82                                      // 00000000338C: BF86000D
	v_mad_u64_u32 v[6:7], s[10:11], v1, s21, v[18:19]          // 000000003390: D1E80A06 04482B01
	v_mov_b32_e32 v8, s15                                      // 000000003398: 7E10020F
	v_mad_u64_u32 v[6:7], s[10:11], v0, s20, v[6:7]            // 00000000339C: D1E80A06 04182900
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 0000000033A4: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s14, v6                             // 0000000033AC: 320C0C0E
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 0000000033B0: 380E0F08
	flat_load_dword v6, v[6:7]                                 // 0000000033B4: DC500000 06000006
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000033BC: BF8C0070
	v_mac_f32_e32 v5, s17, v6                                  // 0000000033C0: 2C0A0C11

00000000000033c4 BB0_82:
	v_mad_u64_u32 v[6:7], s[10:11], v1, s19, v[18:19]          // 0000000033C4: D1E80A06 04482701
	v_mov_b32_e32 v8, s13                                      // 0000000033CC: 7E10020D
	v_mad_u64_u32 v[6:7], s[10:11], v0, s18, v[6:7]            // 0000000033D0: D1E80A06 04182500
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 0000000033D8: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s12, v6                             // 0000000033E0: 320C0C0C
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 0000000033E4: 380E0F08
	flat_store_dword v[6:7], v5                                // 0000000033E8: DC700000 00000506

00000000000033f0 BB0_83:
	s_or_b64 exec, exec, s[4:5]                                // 0000000033F0: 87FE047E
	s_and_b64 s[4:5], s[0:1], s[8:9]                           // 0000000033F4: 86840800
	s_and_saveexec_b64 s[0:1], s[4:5]                          // 0000000033F8: BE802004
	s_cbranch_execz BB0_87                                     // 0000000033FC: BF88001E

0000000000003400 BB0_84:
	v_cmp_neq_f32_e64 s[4:5], s17, 0                           // 000000003400: D04D0004 00010011
	v_mul_f32_e32 v4, s16, v4                                  // 000000003408: 0A080810
	v_mov_b32_e32 v12, 0                                       // 00000000340C: 7E180280
	s_and_b64 vcc, exec, s[4:5]                                // 000000003410: 86EA047E
	s_cbranch_vccz BB0_86                                      // 000000003414: BF86000D
	v_mad_u64_u32 v[5:6], s[4:5], v1, s21, v[11:12]            // 000000003418: D1E80405 042C2B01
	v_mov_b32_e32 v7, s15                                      // 000000003420: 7E0E020F
	v_mad_u64_u32 v[5:6], s[4:5], v0, s20, v[5:6]              // 000000003424: D1E80405 04142900
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 00000000342C: D28F0005 00020A82
	v_add_u32_e32 v5, vcc, s14, v5                             // 000000003434: 320A0A0E
	v_addc_u32_e32 v6, vcc, v7, v6, vcc                        // 000000003438: 380C0D07
	flat_load_dword v5, v[5:6]                                 // 00000000343C: DC500000 05000005
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003444: BF8C0070
	v_mac_f32_e32 v4, s17, v5                                  // 000000003448: 2C080A11

000000000000344c BB0_86:
	v_mad_u64_u32 v[5:6], s[4:5], v1, s19, v[11:12]            // 00000000344C: D1E80405 042C2701
	v_mov_b32_e32 v7, s13                                      // 000000003454: 7E0E020D
	v_mad_u64_u32 v[5:6], s[4:5], v0, s18, v[5:6]              // 000000003458: D1E80405 04142500
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 000000003460: D28F0005 00020A82
	v_add_u32_e32 v5, vcc, s12, v5                             // 000000003468: 320A0A0C
	v_addc_u32_e32 v6, vcc, v7, v6, vcc                        // 00000000346C: 380C0D07
	flat_store_dword v[5:6], v4                                // 000000003470: DC700000 00000405

0000000000003478 BB0_87:
	s_or_b64 exec, exec, s[0:1]                                // 000000003478: 87FE007E
	s_and_b64 s[2:3], s[2:3], s[8:9]                           // 00000000347C: 86820802
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000003480: BE802002
	s_cbranch_execz BB0_91                                     // 000000003484: BF88001E

0000000000003488 BB0_88:
	v_cmp_neq_f32_e64 s[2:3], s17, 0                           // 000000003488: D04D0002 00010011
	v_mul_f32_e32 v3, s16, v3                                  // 000000003490: 0A060610
	v_mov_b32_e32 v17, 0                                       // 000000003494: 7E220280
	s_and_b64 vcc, exec, s[2:3]                                // 000000003498: 86EA027E
	s_cbranch_vccz BB0_90                                      // 00000000349C: BF86000D
	v_mad_u64_u32 v[4:5], s[2:3], v1, s21, v[16:17]            // 0000000034A0: D1E80204 04402B01
	v_mov_b32_e32 v6, s15                                      // 0000000034A8: 7E0C020F
	v_mad_u64_u32 v[4:5], s[2:3], v0, s20, v[4:5]              // 0000000034AC: D1E80204 04102900
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000034B4: D28F0004 00020882
	v_add_u32_e32 v4, vcc, s14, v4                             // 0000000034BC: 3208080E
	v_addc_u32_e32 v5, vcc, v6, v5, vcc                        // 0000000034C0: 380A0B06
	flat_load_dword v4, v[4:5]                                 // 0000000034C4: DC500000 04000004
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000034CC: BF8C0070
	v_mac_f32_e32 v3, s17, v4                                  // 0000000034D0: 2C060811

00000000000034d4 BB0_90:
	v_mad_u64_u32 v[4:5], s[2:3], v1, s19, v[16:17]            // 0000000034D4: D1E80204 04402701
	v_mov_b32_e32 v6, s13                                      // 0000000034DC: 7E0C020D
	v_mad_u64_u32 v[4:5], s[2:3], v0, s18, v[4:5]              // 0000000034E0: D1E80204 04102500
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000034E8: D28F0004 00020882
	v_add_u32_e32 v4, vcc, s12, v4                             // 0000000034F0: 3208080C
	v_addc_u32_e32 v5, vcc, v6, v5, vcc                        // 0000000034F4: 380A0B06
	flat_store_dword v[4:5], v3                                // 0000000034F8: DC700000 00000304

0000000000003500 BB0_91:
	s_or_b64 exec, exec, s[0:1]                                // 000000003500: 87FE007E
	s_and_b64 s[0:1], s[6:7], s[8:9]                           // 000000003504: 86800806
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000003508: BE822000
	s_cbranch_execz BB0_95                                     // 00000000350C: BF88001E

0000000000003510 BB0_92:
	v_cmp_neq_f32_e64 s[0:1], s17, 0                           // 000000003510: D04D0000 00010011
	v_mul_f32_e32 v2, s16, v2                                  // 000000003518: 0A040410
	v_mov_b32_e32 v21, 0                                       // 00000000351C: 7E2A0280
	s_and_b64 vcc, exec, s[0:1]                                // 000000003520: 86EA007E
	s_cbranch_vccz BB0_94                                      // 000000003524: BF86000D
	v_mad_u64_u32 v[3:4], s[0:1], v1, s21, v[20:21]            // 000000003528: D1E80003 04502B01
	v_mov_b32_e32 v5, s15                                      // 000000003530: 7E0A020F
	v_mad_u64_u32 v[3:4], s[0:1], v0, s20, v[3:4]              // 000000003534: D1E80003 040C2900
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 00000000353C: D28F0003 00020682
	v_add_u32_e32 v3, vcc, s14, v3                             // 000000003544: 3206060E
	v_addc_u32_e32 v4, vcc, v5, v4, vcc                        // 000000003548: 38080905
	flat_load_dword v3, v[3:4]                                 // 00000000354C: DC500000 03000003
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003554: BF8C0070
	v_mac_f32_e32 v2, s17, v3                                  // 000000003558: 2C040611

000000000000355c BB0_94:
	v_mad_u64_u32 v[3:4], s[0:1], v1, s19, v[20:21]            // 00000000355C: D1E80003 04502701
	v_mad_u64_u32 v[0:1], s[0:1], v0, s18, v[3:4]              // 000000003564: D1E80000 040C2500
	v_mov_b32_e32 v3, s13                                      // 00000000356C: 7E06020D
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000003570: D28F0000 00020082
	v_add_u32_e32 v0, vcc, s12, v0                             // 000000003578: 3200000C
	v_addc_u32_e32 v1, vcc, v3, v1, vcc                        // 00000000357C: 38020303
	flat_store_dword v[0:1], v2                                // 000000003580: DC700000 00000200

0000000000003588 BB0_95:
	s_endpgm                                                   // 000000003588: BF810000
