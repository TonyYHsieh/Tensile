
Kernels.so-000-gfx906.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000002100 Cijk_Ailk_Bljk_SB_MT64x64x4_SE_K1:
	v_mov_b32_e32 v1, s4                                       // 000000002100: 7E020204
	v_mov_b32_e32 v2, s5                                       // 000000002104: 7E040205
	global_load_ushort v1, v[1:2], off offset:6                // 000000002108: DC488006 017F0001
	s_load_dword s0, s[4:5], 0x4                               // 000000002110: C0020002 00000004
	s_load_dwordx2 s[34:35], s[4:5], 0xc                       // 000000002118: C0060882 0000000C
	s_load_dwordx2 s[12:13], s[6:7], 0x0                       // 000000002120: C0060303 00000000
	s_mov_b32 s1, 0x4f800000                                   // 000000002128: BE8100FF 4F800000
	s_load_dwordx2 s[14:15], s[6:7], 0x8                       // 000000002130: C0060383 00000008
	s_waitcnt lgkmcnt(0)                                       // 000000002138: BF8CC07F
	s_and_b32 s0, s0, 0xffff                                   // 00000000213C: 8600FF00 0000FFFF
	v_cvt_f32_u32_e32 v2, s0                                   // 000000002144: 7E040C00
	s_load_dwordx2 s[30:31], s[6:7], 0x10                      // 000000002148: C0060783 00000010
	s_load_dwordx2 s[28:29], s[6:7], 0x18                      // 000000002150: C0060703 00000018
	s_load_dwordx8 s[16:23], s[6:7], 0x20                      // 000000002158: C00E0403 00000020
	v_rcp_iflag_f32_e32 v2, v2                                 // 000000002160: 7E044702
	s_load_dwordx4 s[24:27], s[6:7], 0x40                      // 000000002164: C00A0603 00000040
	s_load_dwordx4 s[4:7], s[6:7], 0x50                        // 00000000216C: C00A0103 00000050
	s_waitcnt lgkmcnt(0)                                       // 000000002174: BF8CC07F
	s_and_b32 s7, s9, 7                                        // 000000002178: 86078709
	v_mul_f32_e32 v2, s1, v2                                   // 00000000217C: 0A040401
	v_cvt_u32_f32_e32 v2, v2                                   // 000000002180: 7E040F02
	v_lshrrev_b32_e32 v11, 4, v0                               // 000000002184: 20160084
	s_mov_b32 s33, s11                                         // 000000002188: BEA1000B
	v_and_b32_e32 v10, 15, v0                                  // 00000000218C: 2614008F
	v_mul_lo_u32 v3, v2, s0                                    // 000000002190: D2850003 00000102
	v_mul_hi_u32 v4, v2, s0                                    // 000000002198: D2860004 00000102
	v_or_b32_e32 v14, 0x100, v11                               // 0000000021A0: 281C16FF 00000100
	s_mov_b32 s32, s33                                         // 0000000021A8: BEA00021
	v_sub_u32_e32 v5, 0, v3                                    // 0000000021AC: 6A0A0680
	v_cmp_eq_u32_e32 vcc, 0, v4                                // 0000000021B0: 7D940880
	v_cndmask_b32_e32 v3, v3, v5, vcc                          // 0000000021B4: 00060B03
	v_mul_hi_u32 v3, v3, v2                                    // 0000000021B8: D2860003 00020503
	v_add_u32_e32 v4, v2, v3                                   // 0000000021C0: 68080702
	v_sub_u32_e32 v2, v2, v3                                   // 0000000021C4: 6A040702
	v_cndmask_b32_e32 v2, v2, v4, vcc                          // 0000000021C8: 00040902
	v_mul_hi_u32 v2, v2, s34                                   // 0000000021CC: D2860002 00004502
	v_mul_lo_u32 v4, v2, s0                                    // 0000000021D4: D2850004 00000102
	v_add_u32_e32 v6, -1, v2                                   // 0000000021DC: 680C04C1
	v_sub_u32_e32 v7, s34, v4                                  // 0000000021E0: 6A0E0822
	v_cmp_ge_u32_e32 vcc, s34, v4                              // 0000000021E4: 7D9C0822
	s_waitcnt vmcnt(0)                                         // 0000000021E8: BF8C0F70
	v_cvt_f32_u32_e32 v5, v1                                   // 0000000021EC: 7E0A0D01
	v_rcp_iflag_f32_e32 v3, v5                                 // 0000000021F0: 7E064705
	v_add_u32_e32 v5, 1, v2                                    // 0000000021F4: 680A0481
	v_mul_f32_e32 v3, s1, v3                                   // 0000000021F8: 0A060601
	v_cvt_u32_f32_e32 v3, v3                                   // 0000000021FC: 7E060F03
	v_cmp_le_u32_e64 s[0:1], s0, v7                            // 000000002200: D0CB0000 00020E00
	s_and_b64 s[0:1], s[0:1], vcc                              // 000000002208: 86806A00
	v_cndmask_b32_e64 v2, v2, v5, s[0:1]                       // 00000000220C: D1000002 00020B02
	v_mul_lo_u32 v8, v3, v1                                    // 000000002214: D2850008 00020303
	v_mul_hi_u32 v9, v3, v1                                    // 00000000221C: D2860009 00020303
	v_cndmask_b32_e32 v2, v6, v2, vcc                          // 000000002224: 00040506
	v_mul_lo_u32 v2, v2, s7                                    // 000000002228: D2850002 00000F02
	v_sub_u32_e32 v4, 0, v8                                    // 000000002230: 6A081080
	v_cmp_eq_u32_e64 s[2:3], 0, v9                             // 000000002234: D0CA0002 00021280
	v_cndmask_b32_e64 v4, v8, v4, s[2:3]                       // 00000000223C: D1000004 000A0908
	v_mul_hi_u32 v4, v4, v3                                    // 000000002244: D2860004 00020704
	v_add_u32_e32 v2, s8, v2                                   // 00000000224C: 68040408
	v_add_u32_e32 v5, v3, v4                                   // 000000002250: 680A0903
	v_sub_u32_e32 v3, v3, v4                                   // 000000002254: 6A060903
	v_cndmask_b32_e64 v3, v3, v5, s[2:3]                       // 000000002258: D1000003 000A0B03
	v_mul_hi_u32 v3, v3, s35                                   // 000000002260: D2860003 00004703
	s_and_b32 s2, s9, -8                                       // 000000002268: 8602C809
	v_mul_lo_u32 v4, v3, v1                                    // 00000000226C: D2850004 00020303
	v_add_u32_e32 v5, 1, v3                                    // 000000002274: 680A0681
	v_add_u32_e32 v6, -1, v3                                   // 000000002278: 680C06C1
	v_sub_u32_e32 v7, s35, v4                                  // 00000000227C: 6A0E0823
	v_cmp_ge_u32_e32 vcc, s35, v4                              // 000000002280: 7D9C0823
	v_cmp_ge_u32_e64 s[0:1], v7, v1                            // 000000002284: D0CE0000 00020307
	s_and_b64 s[0:1], s[0:1], vcc                              // 00000000228C: 86806A00
	v_cndmask_b32_e64 v1, v3, v5, s[0:1]                       // 000000002290: D1000001 00020B03
	v_cndmask_b32_e32 v1, v6, v1, vcc                          // 000000002298: 00020306
	v_and_b32_e32 v3, 7, v1                                    // 00000000229C: 26060287
	v_sub_u32_e32 v1, v1, v3                                   // 0000000022A0: 6A020701
	v_cmp_ge_u32_e32 vcc, s9, v1                               // 0000000022A4: 7D9C0209
	v_cndmask_b32_e32 v1, 0, v3, vcc                           // 0000000022A8: 00020680
	v_cmp_gt_i32_e32 vcc, 3, v1                                // 0000000022AC: 7D880283
	s_and_b64 vcc, exec, vcc                                   // 0000000022B0: 86EA6A7E
	s_cbranch_vccz BB0_4                                       // 0000000022B4: BF860008
	v_cmp_gt_i32_e32 vcc, 1, v1                                // 0000000022B8: 7D880281
	s_and_b64 vcc, exec, vcc                                   // 0000000022BC: 86EA6A7E
	s_cbranch_vccnz BB0_9                                      // 0000000022C0: BF87001E
	v_cmp_gt_i32_e32 vcc, 2, v1                                // 0000000022C4: 7D880282
	s_and_b64 vcc, exec, vcc                                   // 0000000022C8: 86EA6A7E
	s_cbranch_vccz BB0_10                                      // 0000000022CC: BF86001E
	v_mov_b32_e32 v1, s2                                       // 0000000022D0: 7E020202
	s_branch BB0_17                                            // 0000000022D4: BF82003A

00000000000022d8 BB0_4:
	v_cmp_gt_i32_e32 vcc, 5, v1                                // 0000000022D8: 7D880285
	s_and_b64 vcc, exec, vcc                                   // 0000000022DC: 86EA6A7E
	s_cbranch_vccz BB0_7                                       // 0000000022E0: BF86000B
	v_cmp_gt_i32_e32 vcc, 4, v1                                // 0000000022E4: 7D880284
	s_and_b64 vcc, exec, vcc                                   // 0000000022E8: 86EA6A7E
	s_cbranch_vccz BB0_11                                      // 0000000022EC: BF860019
	s_mov_b32 s0, 0xaaaaaaab                                   // 0000000022F0: BE8000FF AAAAAAAB
	v_mul_hi_u32 v1, v2, s0                                    // 0000000022F8: D2860001 00000102
	v_lshrrev_b32_e32 v3, 1, v1                                // 000000002300: 20060281
	v_mul_lo_u32 v1, v3, -3                                    // 000000002304: D2850001 00018703
	s_branch BB0_15                                            // 00000000230C: BF820029

0000000000002310 BB0_7:
	v_cmp_gt_i32_e32 vcc, 6, v1                                // 000000002310: 7D880286
	s_and_b64 vcc, exec, vcc                                   // 000000002314: 86EA6A7E
	s_cbranch_vccz BB0_12                                      // 000000002318: BF860011
	s_mov_b32 s0, 0xcccccccd                                   // 00000000231C: BE8000FF CCCCCCCD
	v_mul_hi_u32 v1, v2, s0                                    // 000000002324: D2860001 00000102
	v_lshrrev_b32_e32 v3, 2, v1                                // 00000000232C: 20060282
	v_mul_lo_u32 v1, v3, -5                                    // 000000002330: D2850001 00018B03
	s_branch BB0_15                                            // 000000002338: BF82001E

000000000000233c BB0_9:
	v_lshrrev_b32_e32 v3, 3, v2                                // 00000000233C: 20060483
	v_and_b32_e32 v1, 7, v2                                    // 000000002340: 26020487
	s_branch BB0_16                                            // 000000002344: BF82001C

0000000000002348 BB0_10:
	v_lshrrev_b32_e32 v3, 1, v2                                // 000000002348: 20060481
	v_and_b32_e32 v1, 1, v2                                    // 00000000234C: 26020481
	s_branch BB0_16                                            // 000000002350: BF820019

0000000000002354 BB0_11:
	v_lshrrev_b32_e32 v3, 2, v2                                // 000000002354: 20060482
	v_and_b32_e32 v1, 3, v2                                    // 000000002358: 26020483
	s_branch BB0_16                                            // 00000000235C: BF820016

0000000000002360 BB0_12:
	v_cmp_eq_u32_e32 vcc, 6, v1                                // 000000002360: 7D940286
	s_and_b64 vcc, exec, vcc                                   // 000000002364: 86EA6A7E
	s_cbranch_vccz BB0_14                                      // 000000002368: BF860008
	s_mov_b32 s0, 0xaaaaaaab                                   // 00000000236C: BE8000FF AAAAAAAB
	v_mul_hi_u32 v1, v2, s0                                    // 000000002374: D2860001 00000102
	v_lshrrev_b32_e32 v3, 2, v1                                // 00000000237C: 20060282
	v_mul_lo_u32 v1, v3, -6                                    // 000000002380: D2850001 00018D03
	s_branch BB0_15                                            // 000000002388: BF82000A

000000000000238c BB0_14:
	s_mov_b32 s0, 0x24924925                                   // 00000000238C: BE8000FF 24924925
	v_mul_hi_u32 v1, v2, s0                                    // 000000002394: D2860001 00000102
	v_sub_u32_e32 v3, v2, v1                                   // 00000000239C: 6A060302
	v_lshrrev_b32_e32 v3, 1, v3                                // 0000000023A0: 20060681
	v_add_u32_e32 v1, v3, v1                                   // 0000000023A4: 68020303
	v_lshrrev_b32_e32 v3, 2, v1                                // 0000000023A8: 20060282
	v_mul_lo_u32 v1, v3, -7                                    // 0000000023AC: D2850001 00018F03

00000000000023b4 BB0_15:
	v_add_u32_e32 v1, v1, v2                                   // 0000000023B4: 68020501

00000000000023b8 BB0_16:
	v_or_b32_e32 v1, s2, v1                                    // 0000000023B8: 28020202
	v_mov_b32_e32 v2, v3                                       // 0000000023BC: 7E040303

00000000000023c0 BB0_17:
	v_cvt_f32_u32_e32 v3, s4                                   // 0000000023C0: 7E060C04
	v_lshlrev_b32_e32 v16, 6, v1                               // 0000000023C4: 24200286
	v_lshrrev_b32_e32 v8, 2, v0                                // 0000000023C8: 20100082
	s_add_i32 s0, s27, -1                                      // 0000000023CC: 8100C11B
	v_rcp_iflag_f32_e32 v3, v3                                 // 0000000023D0: 7E064703
	v_lshrrev_b32_e32 v22, 6, v0                               // 0000000023D4: 202C0086
	v_lshlrev_b32_e32 v15, 6, v2                               // 0000000023D8: 241E0486
	v_and_b32_e32 v2, s6, v2                                   // 0000000023DC: 26040406
	v_mul_f32_e32 v3, 0x4f800000, v3                           // 0000000023E0: 0A0606FF 4F800000
	v_cvt_u32_f32_e32 v3, v3                                   // 0000000023E8: 7E060F03
	s_mov_b32 s9, 0                                            // 0000000023EC: BE890080
	s_mov_b32 s8, s22                                          // 0000000023F0: BE880016
	v_lshlrev_b32_e32 v25, 4, v2                               // 0000000023F4: 24320484
	v_mul_lo_u32 v4, v3, s4                                    // 0000000023F8: D2850004 00000903
	v_mul_hi_u32 v5, v3, s4                                    // 000000002400: D2860005 00000903
	v_alignbit_b32 v2, 0, s22, 30                              // 000000002408: D1CE0002 02782C80
	s_add_i32 s2, s26, -1                                      // 000000002410: 8102C11A
	v_sub_u32_e32 v1, 0, v4                                    // 000000002414: 6A020880
	v_cmp_eq_u32_e32 vcc, 0, v5                                // 000000002418: 7D940A80
	v_cndmask_b32_e32 v1, v4, v1, vcc                          // 00000000241C: 00020304
	v_mul_hi_u32 v1, v1, v3                                    // 000000002420: D2860001 00020701
	v_and_or_b32 v7, v0, 63, v15                               // 000000002428: D2010007 043D7F00
	v_min_u32_e32 v7, s2, v7                                   // 000000002430: 1C0E0E02
	v_mul_lo_u32 v9, v2, v25                                   // 000000002434: D2850009 00023302
	v_add_u32_e32 v4, v3, v1                                   // 00000000243C: 68080303
	v_sub_u32_e32 v1, v3, v1                                   // 000000002440: 6A020303
	v_cndmask_b32_e32 v1, v1, v4, vcc                          // 000000002444: 00020901
	v_mul_hi_u32 v1, v1, s10                                   // 000000002448: D2860001 00001501
	v_or_b32_e32 v3, v16, v8                                   // 000000002450: 28061110
	v_min_u32_e32 v3, s0, v3                                   // 000000002454: 1C060600
	v_mul_lo_u32 v4, v22, s22                                  // 000000002458: D2850004 00002D16
	v_mul_lo_u32 v1, v1, s4                                    // 000000002460: D2850001 00000901
	v_and_b32_e32 v18, 3, v0                                   // 000000002468: 26240083
	v_mul_lo_u32 v3, v3, s24                                   // 00000000246C: D2850003 00003103
	v_lshl_or_b32 v2, v18, 6, v8                               // 000000002474: D2000002 04210D12
	v_sub_u32_e32 v5, s10, v1                                  // 00000000247C: 6A0A020A
	v_cmp_ge_u32_e64 s[0:1], s10, v1                           // 000000002480: D0CE0000 0002020A
	v_cmp_le_u32_e32 vcc, s4, v5                               // 000000002488: 7D960A04
	v_subrev_u32_e32 v1, s4, v5                                // 00000000248C: 6C020A04
	s_and_b64 vcc, vcc, s[0:1]                                 // 000000002490: 86EA006A
	v_add_u32_e32 v6, s4, v5                                   // 000000002494: 680C0A04
	v_cndmask_b32_e32 v1, v5, v1, vcc                          // 000000002498: 00020305
	v_cndmask_b32_e64 v1, v6, v1, s[0:1]                       // 00000000249C: D1000001 00020306
	v_mul_lo_u32 v5, v1, s23                                   // 0000000024A4: D2850005 00002F01
	s_lshl_b64 s[0:1], s[8:9], 2                               // 0000000024AC: 8E808208
	v_mul_hi_u32 v12, s0, v25                                  // 0000000024B0: D286000C 00023200
	v_mul_lo_u32 v6, v1, s25                                   // 0000000024B8: D2850006 00003301
	v_add3_u32 v23, v5, v4, v7                                 // 0000000024C0: D1FF0017 041E0905
	v_mul_lo_u32 v7, s0, v25                                   // 0000000024C8: D2850007 00023200
	v_add_u32_e32 v8, v12, v9                                  // 0000000024D0: 6810130C
	v_mov_b32_e32 v24, 0                                       // 0000000024D4: 7E300280
	v_add3_u32 v3, v6, v18, v3                                 // 0000000024D8: D1FF0003 040E2506
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 0000000024E0: D28F0007 00020E82
	v_lshlrev_b64 v[5:6], 2, v[23:24]                          // 0000000024E8: D28F0005 00022E82
	v_mov_b32_e32 v9, s31                                      // 0000000024F0: 7E12021F
	v_add_co_u32_e32 v7, vcc, s30, v7                          // 0000000024F4: 320E0E1E
	v_addc_co_u32_e32 v8, vcc, v8, v9, vcc                     // 0000000024F8: 38101308
	v_add_co_u32_e32 v27, vcc, v7, v5                          // 0000000024FC: 32360B07
	v_mov_b32_e32 v26, v24                                     // 000000002500: 7E340318
	v_addc_co_u32_e32 v28, vcc, v8, v6, vcc                    // 000000002504: 38380D08
	v_lshlrev_b64 v[5:6], 4, v[25:26]                          // 000000002508: D28F0005 00023284
	v_mov_b32_e32 v4, v24                                      // 000000002510: 7E080318
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 000000002514: D28F0003 00020682
	v_mov_b32_e32 v7, s29                                      // 00000000251C: 7E0E021D
	v_add_co_u32_e32 v5, vcc, s28, v5                          // 000000002520: 320A0A1C
	v_addc_co_u32_e32 v6, vcc, v6, v7, vcc                     // 000000002524: 380C0F06
	v_add_co_u32_e32 v30, vcc, v5, v3                          // 000000002528: 323C0705
	s_lshr_b32 s2, s5, 2                                       // 00000000252C: 8F028205
	v_or_b32_e32 v26, 0x100, v2                                // 000000002530: 283404FF 00000100
	s_cmp_lt_u32 s5, 4                                         // 000000002538: BF0A8405
	v_addc_co_u32_e32 v31, vcc, v6, v4, vcc                    // 00000000253C: 383E0906
	s_cbranch_scc1 BB0_21                                      // 000000002540: BF8500E7
	global_load_dword v5, v[30:31], off                        // 000000002544: DC508000 057F001E
	global_load_dword v6, v[27:28], off                        // 00000000254C: DC508000 067F001B
	v_add_co_u32_e32 v7, vcc, 16, v30                          // 000000002554: 320E3C90
	v_mov_b32_e32 v3, s2                                       // 000000002558: 7E060202
	s_lshl_b64 s[6:7], s[0:1], 2                               // 00000000255C: 8E868200
	s_and_b32 s8, s5, -4                                       // 000000002560: 8608C405
	v_mov_b32_e32 v13, 0x400                                   // 000000002564: 7E1A02FF 00000400
	v_addc_co_u32_e32 v8, vcc, 0, v31, vcc                     // 00000000256C: 38103E80
	s_sub_u32 s10, 0, s8                                       // 000000002570: 808A0880
	v_lshl_or_b32 v32, v11, 2, v13                             // 000000002574: D2000020 0435050B
	v_mul_hi_u32 v3, s0, v3                                    // 00000000257C: D2860003 00020600
	v_mov_b32_e32 v17, s7                                      // 000000002584: 7E220207
	v_add_co_u32_e32 v13, vcc, s6, v27                         // 000000002588: 321A3606
	s_subb_u32 s11, 0, 0                                       // 00000000258C: 828B8080
	s_lshl_b64 s[8:9], s[8:9], 2                               // 000000002590: 8E888208
	v_addc_co_u32_e32 v17, vcc, v28, v17, vcc                  // 000000002594: 3822231C
	v_mov_b32_e32 v19, s9                                      // 000000002598: 7E260209
	v_subrev_co_u32_e32 v20, vcc, s8, v7                       // 00000000259C: 36280E08
	s_mul_i32 s3, s1, s2                                       // 0000000025A0: 92030201
	s_mul_i32 s4, s0, s2                                       // 0000000025A4: 92040200
	v_subb_co_u32_e32 v19, vcc, v8, v19, vcc                   // 0000000025A8: 3A262708
	v_lshlrev_b32_e32 v9, 2, v2                                // 0000000025AC: 24120482
	v_or_b32_e32 v26, 0x300, v2                                // 0000000025B0: 283404FF 00000300
	v_mov_b32_e32 v2, s4                                       // 0000000025B8: 7E040204
	v_add_u32_e32 v3, s3, v3                                   // 0000000025BC: 68060603
	v_sub_co_u32_e64 v33, vcc, 0, s4                           // 0000000025C0: D11A6A21 00000880
	v_subb_co_u32_e32 v34, vcc, 0, v3, vcc                     // 0000000025C8: 3A440680
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000025CC: D28F0002 00020482
	v_or_b32_e32 v4, 1, v25                                    // 0000000025D4: 28083281
	v_sub_co_u32_e32 v2, vcc, v13, v2                          // 0000000025D8: 3404050D
	v_subb_co_u32_e32 v3, vcc, v17, v3, vcc                    // 0000000025DC: 3A060711
	v_cmp_eq_u32_e32 vcc, s2, v4                               // 0000000025E0: 7D940802
	v_lshlrev_b32_e32 v12, 2, v0                               // 0000000025E4: 24180082
	v_cndmask_b32_e32 v27, v13, v2, vcc                        // 0000000025E8: 0036050D
	v_or_b32_e32 v0, 0x200, v0                                 // 0000000025EC: 280000FF 00000200
	v_lshlrev_b32_e32 v36, 2, v10                              // 0000000025F4: 24481482
	s_cmp_lt_u32 s5, 8                                         // 0000000025F8: BF0A8805
	v_cndmask_b32_e32 v28, v17, v3, vcc                        // 0000000025FC: 00380711
	v_cndmask_b32_e32 v31, v8, v19, vcc                        // 000000002600: 003E2708
	v_cndmask_b32_e32 v30, v7, v20, vcc                        // 000000002604: 003C2907
	v_mov_b32_e32 v2, 0                                        // 000000002608: 7E040280
	s_waitcnt vmcnt(0)                                         // 00000000260C: BF8C0F70
	ds_write_b32 v12, v6                                       // 000000002610: D81A0000 0000060C
	ds_write_b32 v9, v5 offset:1024                            // 000000002618: D81A0400 00000509
	s_cbranch_scc1 BB0_22                                      // 000000002620: BF8500C0
	v_mov_b32_e32 v2, 0                                        // 000000002624: 7E040280
	s_lshl_b64 s[8:9], s[10:11], 2                             // 000000002628: 8E88820A
	v_add_u32_e32 v35, 2, v25                                  // 00000000262C: 68463282
	s_movk_i32 s3, 0x200                                       // 000000002630: B0030200
	s_movk_i32 s4, 0x3ff                                       // 000000002634: B00403FF
	s_mov_b32 s10, s2                                          // 000000002638: BE8A0002
	v_mov_b32_e32 v3, v2                                       // 00000000263C: 7E060302
	v_mov_b32_e32 v4, v2                                       // 000000002640: 7E080302
	v_mov_b32_e32 v5, v2                                       // 000000002644: 7E0A0302
	v_mov_b32_e32 v6, v2                                       // 000000002648: 7E0C0302
	v_mov_b32_e32 v7, v2                                       // 00000000264C: 7E0E0302
	v_mov_b32_e32 v8, v2                                       // 000000002650: 7E100302
	v_mov_b32_e32 v9, v2                                       // 000000002654: 7E120302
	v_mov_b32_e32 v12, v2                                      // 000000002658: 7E180302
	v_mov_b32_e32 v13, v2                                      // 00000000265C: 7E1A0302
	v_mov_b32_e32 v20, v2                                      // 000000002660: 7E280302
	v_mov_b32_e32 v21, v2                                      // 000000002664: 7E2A0302
	v_mov_b32_e32 v19, v2                                      // 000000002668: 7E260302
	v_mov_b32_e32 v17, v2                                      // 00000000266C: 7E220302
	v_mov_b32_e32 v23, v2                                      // 000000002670: 7E2E0302
	v_mov_b32_e32 v29, v10                                     // 000000002674: 7E3A030A
	v_mov_b32_e32 v24, v2                                      // 000000002678: 7E300302

000000000000267c BB0_20:
	s_waitcnt lgkmcnt(0)                                       // 00000000267C: BF8CC07F
	s_barrier                                                  // 000000002680: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002684: BF8CC07F
	global_load_dword v51, v[30:31], off                       // 000000002688: DC508000 337F001E
	global_load_dword v52, v[27:28], off                       // 000000002690: DC508000 347F001B
	ds_read2_b32 v[37:38], v36 offset1:16                      // 000000002698: D86E1000 25000024
	ds_read2_b32 v[39:40], v36 offset0:32 offset1:48           // 0000000026A0: D86E3020 27000024
	ds_read2_b32 v[41:42], v32 offset1:16                      // 0000000026A8: D86E1000 29000020
	ds_read2_b32 v[43:44], v32 offset0:32 offset1:48           // 0000000026B0: D86E3020 2B000020
	ds_read2_b32 v[45:46], v36 offset0:64 offset1:80           // 0000000026B8: D86E5040 2D000024
	ds_read2_b32 v[47:48], v32 offset0:64 offset1:80           // 0000000026C0: D86E5040 2F000020
	v_add_co_u32_e32 v30, vcc, 16, v30                         // 0000000026C8: 323C3C90
	s_waitcnt lgkmcnt(3)                                       // 0000000026CC: BF8CC37F
	v_mac_f32_e32 v24, v37, v41                                // 0000000026D0: 2C305325
	v_mac_f32_e32 v23, v38, v41                                // 0000000026D4: 2C2E5326
	v_mac_f32_e32 v21, v37, v42                                // 0000000026D8: 2C2A5525
	v_mac_f32_e32 v20, v38, v42                                // 0000000026DC: 2C285526
	v_mac_f32_e32 v17, v39, v41                                // 0000000026E0: 2C225327
	v_mac_f32_e32 v19, v40, v41                                // 0000000026E4: 2C265328
	v_mac_f32_e32 v13, v39, v42                                // 0000000026E8: 2C1A5527
	v_mac_f32_e32 v12, v40, v42                                // 0000000026EC: 2C185528
	ds_read2_b32 v[41:42], v36 offset0:96 offset1:112          // 0000000026F0: D86E7060 29000024
	s_waitcnt lgkmcnt(3)                                       // 0000000026F8: BF8CC37F
	v_mac_f32_e32 v9, v37, v43                                 // 0000000026FC: 2C125725
	v_mac_f32_e32 v8, v38, v43                                 // 000000002700: 2C105726
	v_mac_f32_e32 v5, v37, v44                                 // 000000002704: 2C0A5925
	v_mac_f32_e32 v4, v38, v44                                 // 000000002708: 2C085926
	ds_read2_b32 v[37:38], v32 offset0:96 offset1:112          // 00000000270C: D86E7060 25000020
	v_mac_f32_e32 v7, v39, v43                                 // 000000002714: 2C0E5727
	v_mac_f32_e32 v6, v40, v43                                 // 000000002718: 2C0C5728
	v_mac_f32_e32 v3, v39, v44                                 // 00000000271C: 2C065927
	v_mac_f32_e32 v2, v40, v44                                 // 000000002720: 2C045928
	ds_read2_b32 v[39:40], v36 offset0:128 offset1:144         // 000000002724: D86E9080 27000024
	ds_read2_b32 v[43:44], v32 offset0:128 offset1:144         // 00000000272C: D86E9080 2B000020
	s_waitcnt lgkmcnt(4)                                       // 000000002734: BF8CC47F
	v_mac_f32_e32 v24, v45, v47                                // 000000002738: 2C305F2D
	v_mac_f32_e32 v23, v46, v47                                // 00000000273C: 2C2E5F2E
	v_mac_f32_e32 v21, v45, v48                                // 000000002740: 2C2A612D
	v_mac_f32_e32 v20, v46, v48                                // 000000002744: 2C28612E
	s_waitcnt lgkmcnt(3)                                       // 000000002748: BF8CC37F
	v_mac_f32_e32 v17, v41, v47                                // 00000000274C: 2C225F29
	v_mac_f32_e32 v19, v42, v47                                // 000000002750: 2C265F2A
	v_mac_f32_e32 v13, v41, v48                                // 000000002754: 2C1A6129
	v_mac_f32_e32 v12, v42, v48                                // 000000002758: 2C18612A
	ds_read2_b32 v[47:48], v36 offset0:160 offset1:176         // 00000000275C: D86EB0A0 2F000024
	s_waitcnt lgkmcnt(3)                                       // 000000002764: BF8CC37F
	v_mac_f32_e32 v9, v45, v37                                 // 000000002768: 2C124B2D
	v_mac_f32_e32 v8, v46, v37                                 // 00000000276C: 2C104B2E
	v_mac_f32_e32 v5, v45, v38                                 // 000000002770: 2C0A4D2D
	v_mac_f32_e32 v4, v46, v38                                 // 000000002774: 2C084D2E
	ds_read2_b32 v[45:46], v32 offset0:160 offset1:176         // 000000002778: D86EB0A0 2D000020
	v_addc_co_u32_e32 v31, vcc, 0, v31, vcc                    // 000000002780: 383E3E80
	v_mac_f32_e32 v7, v41, v37                                 // 000000002784: 2C0E4B29
	v_mac_f32_e32 v6, v42, v37                                 // 000000002788: 2C0C4B2A
	v_mac_f32_e32 v3, v41, v38                                 // 00000000278C: 2C064D29
	v_mac_f32_e32 v2, v42, v38                                 // 000000002790: 2C044D2A
	ds_read2_b32 v[37:38], v36 offset0:192 offset1:208         // 000000002794: D86ED0C0 25000024
	ds_read2_b32 v[41:42], v32 offset0:192 offset1:208         // 00000000279C: D86ED0C0 29000020
	s_waitcnt lgkmcnt(4)                                       // 0000000027A4: BF8CC47F
	v_mac_f32_e32 v24, v39, v43                                // 0000000027A8: 2C305727
	v_mac_f32_e32 v23, v40, v43                                // 0000000027AC: 2C2E5728
	v_mac_f32_e32 v21, v39, v44                                // 0000000027B0: 2C2A5927
	v_mac_f32_e32 v20, v40, v44                                // 0000000027B4: 2C285928
	s_waitcnt lgkmcnt(3)                                       // 0000000027B8: BF8CC37F
	v_mac_f32_e32 v17, v47, v43                                // 0000000027BC: 2C22572F
	v_mac_f32_e32 v19, v48, v43                                // 0000000027C0: 2C265730
	v_mac_f32_e32 v13, v47, v44                                // 0000000027C4: 2C1A592F
	v_mac_f32_e32 v12, v48, v44                                // 0000000027C8: 2C185930
	ds_read2_b32 v[43:44], v36 offset0:224 offset1:240         // 0000000027CC: D86EF0E0 2B000024
	ds_read2_b32 v[49:50], v32 offset0:224 offset1:240         // 0000000027D4: D86EF0E0 31000020
	s_waitcnt lgkmcnt(4)                                       // 0000000027DC: BF8CC47F
	v_mac_f32_e32 v9, v39, v45                                 // 0000000027E0: 2C125B27
	v_mac_f32_e32 v8, v40, v45                                 // 0000000027E4: 2C105B28
	v_mac_f32_e32 v5, v39, v46                                 // 0000000027E8: 2C0A5D27
	v_mac_f32_e32 v4, v40, v46                                 // 0000000027EC: 2C085D28
	v_mov_b32_e32 v32, s7                                      // 0000000027F0: 7E400207
	v_add_co_u32_e32 v27, vcc, s6, v27                         // 0000000027F4: 32363606
	v_lshlrev_b64 v[39:40], 2, v[33:34]                        // 0000000027F8: D28F0027 00024282
	v_addc_co_u32_e32 v28, vcc, v28, v32, vcc                  // 000000002800: 3838411C
	v_add_co_u32_e32 v32, vcc, v27, v39                        // 000000002804: 32404F1B
	v_addc_co_u32_e32 v39, vcc, v28, v40, vcc                  // 000000002808: 384E511C
	v_mov_b32_e32 v36, s9                                      // 00000000280C: 7E480209
	v_add_co_u32_e32 v40, vcc, s8, v30                         // 000000002810: 32503C08
	v_mac_f32_e32 v7, v47, v45                                 // 000000002814: 2C0E5B2F
	v_mac_f32_e32 v3, v47, v46                                 // 000000002818: 2C065D2F
	v_add_u32_e32 v29, s3, v29                                 // 00000000281C: 683A3A03
	v_add_u32_e32 v14, s3, v14                                 // 000000002820: 681C1C03
	v_addc_co_u32_e32 v47, vcc, v31, v36, vcc                  // 000000002824: 385E491F
	v_cmp_eq_u32_e32 vcc, s10, v35                             // 000000002828: 7D94460A
	s_add_i32 s11, s10, -1                                     // 00000000282C: 810BC10A
	v_mac_f32_e32 v6, v48, v45                                 // 000000002830: 2C0C5B30
	v_mac_f32_e32 v2, v48, v46                                 // 000000002834: 2C045D30
	v_lshlrev_b32_e32 v45, 2, v0                               // 000000002838: 245A0082
	v_lshlrev_b32_e32 v46, 2, v26                              // 00000000283C: 245C3482
	v_add_u32_e32 v0, s3, v0                                   // 000000002840: 68000003
	v_add_u32_e32 v26, s3, v26                                 // 000000002844: 68343403
	v_and_b32_e32 v29, s4, v29                                 // 000000002848: 263A3A04
	v_and_b32_e32 v14, s4, v14                                 // 00000000284C: 261C1C04
	v_cndmask_b32_e32 v27, v27, v32, vcc                       // 000000002850: 0036411B
	v_and_b32_e32 v0, s4, v0                                   // 000000002854: 26000004
	v_and_b32_e32 v26, s4, v26                                 // 000000002858: 26343404
	s_cmp_gt_u32 s11, 1                                        // 00000000285C: BF08810B
	s_mov_b32 s10, s11                                         // 000000002860: BE8A000B
	v_cndmask_b32_e32 v28, v28, v39, vcc                       // 000000002864: 00384F1C
	v_lshlrev_b32_e32 v32, 2, v14                              // 000000002868: 24401C82
	v_lshlrev_b32_e32 v36, 2, v29                              // 00000000286C: 24483A82
	v_cndmask_b32_e32 v31, v31, v47, vcc                       // 000000002870: 003E5F1F
	v_cndmask_b32_e32 v30, v30, v40, vcc                       // 000000002874: 003C511E
	s_waitcnt lgkmcnt(2)                                       // 000000002878: BF8CC27F
	v_mac_f32_e32 v24, v37, v41                                // 00000000287C: 2C305325
	v_mac_f32_e32 v23, v38, v41                                // 000000002880: 2C2E5326
	s_waitcnt lgkmcnt(1)                                       // 000000002884: BF8CC17F
	v_mac_f32_e32 v17, v43, v41                                // 000000002888: 2C22532B
	v_mac_f32_e32 v19, v44, v41                                // 00000000288C: 2C26532C
	v_mac_f32_e32 v21, v37, v42                                // 000000002890: 2C2A5525
	v_mac_f32_e32 v20, v38, v42                                // 000000002894: 2C285526
	v_mac_f32_e32 v13, v43, v42                                // 000000002898: 2C1A552B
	v_mac_f32_e32 v12, v44, v42                                // 00000000289C: 2C18552C
	s_waitcnt lgkmcnt(0)                                       // 0000000028A0: BF8CC07F
	v_mac_f32_e32 v9, v37, v49                                 // 0000000028A4: 2C126325
	v_mac_f32_e32 v8, v38, v49                                 // 0000000028A8: 2C106326
	v_mac_f32_e32 v5, v37, v50                                 // 0000000028AC: 2C0A6525
	v_mac_f32_e32 v4, v38, v50                                 // 0000000028B0: 2C086526
	v_mac_f32_e32 v7, v43, v49                                 // 0000000028B4: 2C0E632B
	v_mac_f32_e32 v6, v44, v49                                 // 0000000028B8: 2C0C632C
	v_mac_f32_e32 v3, v43, v50                                 // 0000000028BC: 2C06652B
	v_mac_f32_e32 v2, v44, v50                                 // 0000000028C0: 2C04652C
	s_waitcnt vmcnt(0)                                         // 0000000028C4: BF8C0F70
	ds_write_b32 v45, v52                                      // 0000000028C8: D81A0000 0000342D
	ds_write_b32 v46, v51                                      // 0000000028D0: D81A0000 0000332E
	s_cbranch_scc1 BB0_20                                      // 0000000028D8: BF85FF68
	s_branch BB0_23                                            // 0000000028DC: BF820021

00000000000028e0 BB0_21:
	v_mov_b32_e32 v29, v10                                     // 0000000028E0: 7E3A030A
	v_mov_b32_e32 v23, v24                                     // 0000000028E4: 7E2E0318
	v_mov_b32_e32 v17, v24                                     // 0000000028E8: 7E220318
	v_mov_b32_e32 v19, v24                                     // 0000000028EC: 7E260318
	v_mov_b32_e32 v21, v24                                     // 0000000028F0: 7E2A0318
	v_mov_b32_e32 v20, v24                                     // 0000000028F4: 7E280318
	v_mov_b32_e32 v13, v24                                     // 0000000028F8: 7E1A0318
	v_mov_b32_e32 v12, v24                                     // 0000000028FC: 7E180318
	v_mov_b32_e32 v9, v24                                      // 000000002900: 7E120318
	v_mov_b32_e32 v8, v24                                      // 000000002904: 7E100318
	v_mov_b32_e32 v7, v24                                      // 000000002908: 7E0E0318
	v_mov_b32_e32 v6, v24                                      // 00000000290C: 7E0C0318
	v_mov_b32_e32 v5, v24                                      // 000000002910: 7E0A0318
	v_mov_b32_e32 v4, v24                                      // 000000002914: 7E080318
	v_mov_b32_e32 v3, v24                                      // 000000002918: 7E060318
	v_mov_b32_e32 v2, v24                                      // 00000000291C: 7E040318
	s_branch BB0_24                                            // 000000002920: BF82007B

0000000000002924 BB0_22:
	v_mov_b32_e32 v3, v2                                       // 000000002924: 7E060302
	v_mov_b32_e32 v4, v2                                       // 000000002928: 7E080302
	v_mov_b32_e32 v5, v2                                       // 00000000292C: 7E0A0302
	v_mov_b32_e32 v6, v2                                       // 000000002930: 7E0C0302
	v_mov_b32_e32 v7, v2                                       // 000000002934: 7E0E0302
	v_mov_b32_e32 v8, v2                                       // 000000002938: 7E100302
	v_mov_b32_e32 v9, v2                                       // 00000000293C: 7E120302
	v_mov_b32_e32 v12, v2                                      // 000000002940: 7E180302
	v_mov_b32_e32 v13, v2                                      // 000000002944: 7E1A0302
	v_mov_b32_e32 v20, v2                                      // 000000002948: 7E280302
	v_mov_b32_e32 v21, v2                                      // 00000000294C: 7E2A0302
	v_mov_b32_e32 v19, v2                                      // 000000002950: 7E260302
	v_mov_b32_e32 v17, v2                                      // 000000002954: 7E220302
	v_mov_b32_e32 v23, v2                                      // 000000002958: 7E2E0302
	v_mov_b32_e32 v24, v2                                      // 00000000295C: 7E300302
	v_mov_b32_e32 v29, v10                                     // 000000002960: 7E3A030A

0000000000002964 BB0_23:
	s_waitcnt lgkmcnt(0)                                       // 000000002964: BF8CC07F
	s_barrier                                                  // 000000002968: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 00000000296C: BF8CC07F
	ds_read2_b32 v[33:34], v36 offset1:16                      // 000000002970: D86E1000 21000024
	ds_read2_b32 v[37:38], v36 offset0:32 offset1:48           // 000000002978: D86E3020 25000024
	ds_read2_b32 v[39:40], v32 offset1:16                      // 000000002980: D86E1000 27000020
	ds_read2_b32 v[41:42], v32 offset0:32 offset1:48           // 000000002988: D86E3020 29000020
	ds_read2_b32 v[43:44], v36 offset0:64 offset1:80           // 000000002990: D86E5040 2B000024
	ds_read2_b32 v[45:46], v32 offset0:64 offset1:80           // 000000002998: D86E5040 2D000020
	ds_read2_b32 v[47:48], v36 offset0:96 offset1:112          // 0000000029A0: D86E7060 2F000024
	ds_read2_b32 v[49:50], v32 offset0:96 offset1:112          // 0000000029A8: D86E7060 31000020
	ds_read2_b32 v[51:52], v36 offset0:128 offset1:144         // 0000000029B0: D86E9080 33000024
	ds_read2_b32 v[53:54], v32 offset0:128 offset1:144         // 0000000029B8: D86E9080 35000020
	ds_read2_b32 v[55:56], v36 offset0:160 offset1:176         // 0000000029C0: D86EB0A0 37000024
	ds_read2_b32 v[57:58], v32 offset0:160 offset1:176         // 0000000029C8: D86EB0A0 39000020
	s_waitcnt lgkmcnt(9)                                       // 0000000029D0: BF8CC97F
	v_mac_f32_e32 v24, v33, v39                                // 0000000029D4: 2C304F21
	v_mac_f32_e32 v23, v34, v39                                // 0000000029D8: 2C2E4F22
	v_mac_f32_e32 v17, v37, v39                                // 0000000029DC: 2C224F25
	v_mac_f32_e32 v19, v38, v39                                // 0000000029E0: 2C264F26
	v_mac_f32_e32 v21, v33, v40                                // 0000000029E4: 2C2A5121
	v_mac_f32_e32 v20, v34, v40                                // 0000000029E8: 2C285122
	v_mac_f32_e32 v13, v37, v40                                // 0000000029EC: 2C1A5125
	v_mac_f32_e32 v12, v38, v40                                // 0000000029F0: 2C185126
	ds_read2_b32 v[39:40], v36 offset0:192 offset1:208         // 0000000029F4: D86ED0C0 27000024
	s_waitcnt lgkmcnt(9)                                       // 0000000029FC: BF8CC97F
	v_mac_f32_e32 v9, v33, v41                                 // 000000002A00: 2C125321
	v_mac_f32_e32 v8, v34, v41                                 // 000000002A04: 2C105322
	v_mac_f32_e32 v5, v33, v42                                 // 000000002A08: 2C0A5521
	v_mac_f32_e32 v4, v34, v42                                 // 000000002A0C: 2C085522
	ds_read2_b32 v[35:36], v36 offset0:224 offset1:240         // 000000002A10: D86EF0E0 23000024
	ds_read2_b32 v[33:34], v32 offset0:192 offset1:208         // 000000002A18: D86ED0C0 21000020
	s_waitcnt lgkmcnt(9)                                       // 000000002A20: BF8CC97F
	v_mac_f32_e32 v24, v43, v45                                // 000000002A24: 2C305B2B
	v_mac_f32_e32 v23, v44, v45                                // 000000002A28: 2C2E5B2C
	s_waitcnt lgkmcnt(8)                                       // 000000002A2C: BF8CC87F
	v_mac_f32_e32 v17, v47, v45                                // 000000002A30: 2C225B2F
	v_mac_f32_e32 v19, v48, v45                                // 000000002A34: 2C265B30
	s_waitcnt lgkmcnt(5)                                       // 000000002A38: BF8CC57F
	v_mac_f32_e32 v24, v51, v53                                // 000000002A3C: 2C306B33
	v_mac_f32_e32 v23, v52, v53                                // 000000002A40: 2C2E6B34
	s_waitcnt lgkmcnt(4)                                       // 000000002A44: BF8CC47F
	v_mac_f32_e32 v17, v55, v53                                // 000000002A48: 2C226B37
	v_mac_f32_e32 v19, v56, v53                                // 000000002A4C: 2C266B38
	s_waitcnt lgkmcnt(0)                                       // 000000002A50: BF8CC07F
	v_mac_f32_e32 v24, v39, v33                                // 000000002A54: 2C304327
	v_mac_f32_e32 v23, v40, v33                                // 000000002A58: 2C2E4328
	v_mac_f32_e32 v17, v35, v33                                // 000000002A5C: 2C224323
	v_mac_f32_e32 v19, v36, v33                                // 000000002A60: 2C264324
	ds_read2_b32 v[32:33], v32 offset0:224 offset1:240         // 000000002A64: D86EF0E0 20000020
	v_mac_f32_e32 v7, v37, v41                                 // 000000002A6C: 2C0E5325
	v_mac_f32_e32 v6, v38, v41                                 // 000000002A70: 2C0C5326
	v_mac_f32_e32 v3, v37, v42                                 // 000000002A74: 2C065525
	v_mac_f32_e32 v2, v38, v42                                 // 000000002A78: 2C045526
	v_mac_f32_e32 v21, v43, v46                                // 000000002A7C: 2C2A5D2B
	v_mac_f32_e32 v20, v44, v46                                // 000000002A80: 2C285D2C
	v_mac_f32_e32 v13, v47, v46                                // 000000002A84: 2C1A5D2F
	v_mac_f32_e32 v12, v48, v46                                // 000000002A88: 2C185D30
	v_mac_f32_e32 v9, v43, v49                                 // 000000002A8C: 2C12632B
	v_mac_f32_e32 v8, v44, v49                                 // 000000002A90: 2C10632C
	v_mac_f32_e32 v5, v43, v50                                 // 000000002A94: 2C0A652B
	v_mac_f32_e32 v4, v44, v50                                 // 000000002A98: 2C08652C
	v_mac_f32_e32 v7, v47, v49                                 // 000000002A9C: 2C0E632F
	v_mac_f32_e32 v6, v48, v49                                 // 000000002AA0: 2C0C6330
	v_mac_f32_e32 v3, v47, v50                                 // 000000002AA4: 2C06652F
	v_mac_f32_e32 v2, v48, v50                                 // 000000002AA8: 2C046530
	v_mac_f32_e32 v21, v51, v54                                // 000000002AAC: 2C2A6D33
	v_mac_f32_e32 v20, v52, v54                                // 000000002AB0: 2C286D34
	v_mac_f32_e32 v13, v55, v54                                // 000000002AB4: 2C1A6D37
	v_mac_f32_e32 v12, v56, v54                                // 000000002AB8: 2C186D38
	v_mac_f32_e32 v9, v51, v57                                 // 000000002ABC: 2C127333
	v_mac_f32_e32 v8, v52, v57                                 // 000000002AC0: 2C107334
	v_mac_f32_e32 v5, v51, v58                                 // 000000002AC4: 2C0A7533
	v_mac_f32_e32 v4, v52, v58                                 // 000000002AC8: 2C087534
	v_mac_f32_e32 v7, v55, v57                                 // 000000002ACC: 2C0E7337
	v_mac_f32_e32 v6, v56, v57                                 // 000000002AD0: 2C0C7338
	v_mac_f32_e32 v3, v55, v58                                 // 000000002AD4: 2C067537
	v_mac_f32_e32 v2, v56, v58                                 // 000000002AD8: 2C047538
	v_mac_f32_e32 v21, v39, v34                                // 000000002ADC: 2C2A4527
	v_mac_f32_e32 v20, v40, v34                                // 000000002AE0: 2C284528
	v_mac_f32_e32 v13, v35, v34                                // 000000002AE4: 2C1A4523
	v_mac_f32_e32 v12, v36, v34                                // 000000002AE8: 2C184524
	s_waitcnt lgkmcnt(0)                                       // 000000002AEC: BF8CC07F
	v_mac_f32_e32 v9, v39, v32                                 // 000000002AF0: 2C124127
	v_mac_f32_e32 v8, v40, v32                                 // 000000002AF4: 2C104128
	v_mac_f32_e32 v5, v39, v33                                 // 000000002AF8: 2C0A4327
	v_mac_f32_e32 v4, v40, v33                                 // 000000002AFC: 2C084328
	v_mac_f32_e32 v7, v35, v32                                 // 000000002B00: 2C0E4123
	v_mac_f32_e32 v6, v36, v32                                 // 000000002B04: 2C0C4124
	v_mac_f32_e32 v3, v35, v33                                 // 000000002B08: 2C064323
	v_mac_f32_e32 v2, v36, v33                                 // 000000002B0C: 2C044324

0000000000002b10 BB0_24:
	s_and_b32 s3, s5, 3                                        // 000000002B10: 86038305
	v_mov_b32_e32 v33, 0                                       // 000000002B14: 7E420280
	v_cmp_gt_u32_e32 vcc, s3, v22                              // 000000002B18: 7D982C03
	v_sub_u32_e32 v32, s2, v25                                 // 000000002B1C: 6A403202
	v_mov_b32_e32 v22, v33                                     // 000000002B20: 7E2C0321
	s_and_saveexec_b64 s[4:5], vcc                             // 000000002B24: BE84206A
	s_cbranch_execz BB0_26                                     // 000000002B28: BF88000D

0000000000002b2c BB0_25:
	v_mul_lo_u32 v22, s1, v32                                  // 000000002B2C: D2850016 00024001
	v_mul_hi_u32 v25, s0, v32                                  // 000000002B34: D2860019 00024000
	v_mul_lo_u32 v34, s0, v32                                  // 000000002B3C: D2850022 00024000
	v_add_u32_e32 v35, v25, v22                                // 000000002B44: 68462D19
	v_lshlrev_b64 v[34:35], 2, v[34:35]                        // 000000002B48: D28F0022 00024482
	v_add_co_u32_e32 v27, vcc, v27, v34                        // 000000002B50: 3236451B
	v_addc_co_u32_e32 v28, vcc, v28, v35, vcc                  // 000000002B54: 3838471C
	global_load_dword v22, v[27:28], off                       // 000000002B58: DC508000 167F001B

0000000000002b60 BB0_26:
	s_or_b64 exec, exec, s[4:5]                                // 000000002B60: 87FE047E
	v_cmp_gt_u32_e32 vcc, s3, v18                              // 000000002B64: 7D982403
	v_mov_b32_e32 v18, 0                                       // 000000002B68: 7E240280
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002B6C: BE80206A
	s_cbranch_execz BB0_28                                     // 000000002B70: BF880006

0000000000002b74 BB0_27:
	v_lshlrev_b64 v[27:28], 4, v[32:33]                        // 000000002B74: D28F001B 00024084
	v_add_co_u32_e32 v27, vcc, v30, v27                        // 000000002B7C: 3236371E
	v_addc_co_u32_e32 v28, vcc, v31, v28, vcc                  // 000000002B80: 3838391F
	global_load_dword v18, v[27:28], off                       // 000000002B84: DC508000 127F001B

0000000000002b8c BB0_28:
	s_or_b64 exec, exec, s[0:1]                                // 000000002B8C: 87FE007E
	s_movk_i32 s0, 0x1ff                                       // 000000002B90: B00001FF
	v_and_b32_e32 v0, s0, v0                                   // 000000002B94: 26000000
	v_and_b32_e32 v25, s0, v26                                 // 000000002B98: 26323400
	v_lshlrev_b32_e32 v0, 2, v0                                // 000000002B9C: 24000082
	v_lshlrev_b32_e32 v25, 2, v25                              // 000000002BA0: 24323282
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002BA4: BF8C0070
	s_barrier                                                  // 000000002BA8: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002BAC: BF8CC07F
	ds_write_b32 v0, v22                                       // 000000002BB0: D81A0000 00001600
	ds_write_b32 v25, v18                                      // 000000002BB8: D81A0000 00001219
	s_waitcnt lgkmcnt(0)                                       // 000000002BC0: BF8CC07F
	s_barrier                                                  // 000000002BC4: BF8A0000
	s_cmp_eq_u32 s3, 0                                         // 000000002BC8: BF068003
	s_waitcnt lgkmcnt(0)                                       // 000000002BCC: BF8CC07F
	s_cbranch_scc1 BB0_31                                      // 000000002BD0: BF850025
	v_and_b32_e32 v0, s0, v14                                  // 000000002BD4: 26001C00
	v_and_b32_e32 v14, s0, v29                                 // 000000002BD8: 261C3A00
	v_lshlrev_b32_e32 v0, 2, v0                                // 000000002BDC: 24000082
	v_lshlrev_b32_e32 v14, 2, v14                              // 000000002BE0: 241C1C82
	v_mov_b32_e32 v18, s3                                      // 000000002BE4: 7E240203
	s_movk_i32 s0, 0x100                                       // 000000002BE8: B0000100

0000000000002bec BB0_30:
	ds_read2_b32 v[27:28], v0 offset1:16                       // 000000002BEC: D86E1000 1B000000
	ds_read2_b32 v[29:30], v14 offset0:32 offset1:48           // 000000002BF4: D86E3020 1D00000E
	ds_read2_b32 v[31:32], v0 offset0:32 offset1:48            // 000000002BFC: D86E3020 1F000000
	ds_read2_b32 v[25:26], v14 offset1:16                      // 000000002C04: D86E1000 1900000E
	v_add_u32_e32 v18, -1, v18                                 // 000000002C0C: 682424C1
	v_cmp_ne_u32_e32 vcc, 0, v18                               // 000000002C10: 7D9A2480
	v_add_u32_e32 v14, s0, v14                                 // 000000002C14: 681C1C00
	v_add_u32_e32 v0, s0, v0                                   // 000000002C18: 68000000
	s_and_b64 vcc, exec, vcc                                   // 000000002C1C: 86EA6A7E
	s_waitcnt lgkmcnt(0)                                       // 000000002C20: BF8CC07F
	v_mac_f32_e32 v24, v25, v27                                // 000000002C24: 2C303719
	v_mac_f32_e32 v23, v26, v27                                // 000000002C28: 2C2E371A
	v_mac_f32_e32 v17, v29, v27                                // 000000002C2C: 2C22371D
	v_mac_f32_e32 v19, v30, v27                                // 000000002C30: 2C26371E
	v_mac_f32_e32 v21, v25, v28                                // 000000002C34: 2C2A3919
	v_mac_f32_e32 v20, v26, v28                                // 000000002C38: 2C28391A
	v_mac_f32_e32 v13, v29, v28                                // 000000002C3C: 2C1A391D
	v_mac_f32_e32 v12, v30, v28                                // 000000002C40: 2C18391E
	v_mac_f32_e32 v9, v25, v31                                 // 000000002C44: 2C123F19
	v_mac_f32_e32 v8, v26, v31                                 // 000000002C48: 2C103F1A
	v_mac_f32_e32 v5, v25, v32                                 // 000000002C4C: 2C0A4119
	v_mac_f32_e32 v4, v26, v32                                 // 000000002C50: 2C08411A
	v_mac_f32_e32 v7, v29, v31                                 // 000000002C54: 2C0E3F1D
	v_mac_f32_e32 v6, v30, v31                                 // 000000002C58: 2C0C3F1E
	v_mac_f32_e32 v3, v29, v32                                 // 000000002C5C: 2C06411D
	v_mac_f32_e32 v2, v30, v32                                 // 000000002C60: 2C04411E
	s_cbranch_vccnz BB0_30                                     // 000000002C64: BF87FFE1

0000000000002c68 BB0_31:
	v_or_b32_e32 v10, v15, v10                                 // 000000002C68: 2814150F
	v_or_b32_e32 v0, v16, v11                                  // 000000002C6C: 28001710
	v_cmp_gt_u32_e64 s[6:7], s26, v10                          // 000000002C70: D0CC0006 0002141A
	v_cmp_gt_u32_e64 s[8:9], s27, v0                           // 000000002C78: D0CC0008 0002001B
	s_and_b64 s[2:3], s[6:7], s[8:9]                           // 000000002C80: 86820806
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002C84: BE802002
	s_cbranch_execz BB0_35                                     // 000000002C88: BF88001E

0000000000002c8c BB0_32:
	v_cmp_neq_f32_e64 s[2:3], s17, 0                           // 000000002C8C: D04D0002 00010011
	v_mul_f32_e32 v14, s16, v24                                // 000000002C94: 0A1C3010
	v_mov_b32_e32 v11, 0                                       // 000000002C98: 7E160280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002C9C: 86EA027E
	s_cbranch_vccz BB0_34                                      // 000000002CA0: BF86000D
	v_mad_u64_u32 v[15:16], s[2:3], v1, s21, v[10:11]          // 000000002CA4: D1E8020F 04282B01
	v_mov_b32_e32 v18, s15                                     // 000000002CAC: 7E24020F
	v_mad_u64_u32 v[15:16], s[2:3], v0, s20, v[15:16]          // 000000002CB0: D1E8020F 043C2900
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002CB8: D28F000F 00021E82
	v_add_co_u32_e32 v15, vcc, s14, v15                        // 000000002CC0: 321E1E0E
	v_addc_co_u32_e32 v16, vcc, v18, v16, vcc                  // 000000002CC4: 38202112
	global_load_dword v15, v[15:16], off                       // 000000002CC8: DC508000 0F7F000F
	s_waitcnt vmcnt(0)                                         // 000000002CD0: BF8C0F70
	v_mac_f32_e32 v14, s17, v15                                // 000000002CD4: 2C1C1E11

0000000000002cd8 BB0_34:
	v_mad_u64_u32 v[15:16], s[2:3], v1, s19, v[10:11]          // 000000002CD8: D1E8020F 04282701
	v_mov_b32_e32 v11, s13                                     // 000000002CE0: 7E16020D
	v_mad_u64_u32 v[15:16], s[2:3], v0, s18, v[15:16]          // 000000002CE4: D1E8020F 043C2500
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002CEC: D28F000F 00021E82
	v_add_co_u32_e32 v15, vcc, s12, v15                        // 000000002CF4: 321E1E0C
	v_addc_co_u32_e32 v16, vcc, v11, v16, vcc                  // 000000002CF8: 3820210B
	global_store_dword v[15:16], v14, off                      // 000000002CFC: DC708000 007F0E0F

0000000000002d04 BB0_35:
	s_or_b64 exec, exec, s[0:1]                                // 000000002D04: 87FE007E
	v_or_b32_e32 v14, 16, v10                                  // 000000002D08: 281C1490
	v_cmp_gt_u32_e64 s[0:1], s26, v14                          // 000000002D0C: D0CC0000 00021C1A
	s_and_b64 s[4:5], s[0:1], s[8:9]                           // 000000002D14: 86840800
	s_and_saveexec_b64 s[2:3], s[4:5]                          // 000000002D18: BE822004
	s_cbranch_execz BB0_39                                     // 000000002D1C: BF880020

0000000000002d20 BB0_36:
	v_cmp_neq_f32_e64 s[4:5], s17, 0                           // 000000002D20: D04D0004 00010011
	v_mul_f32_e32 v11, s16, v23                                // 000000002D28: 0A162E10
	v_mov_b32_e32 v15, 0                                       // 000000002D2C: 7E1E0280
	s_and_b64 vcc, exec, s[4:5]                                // 000000002D30: 86EA047E
	s_cbranch_vccz BB0_38                                      // 000000002D34: BF86000F
	v_mov_b32_e32 v22, v10                                     // 000000002D38: 7E2C030A
	v_mov_b32_e32 v23, v15                                     // 000000002D3C: 7E2E030F
	v_mad_u64_u32 v[22:23], s[4:5], v1, s21, v[22:23]          // 000000002D40: D1E80416 04582B01
	v_mov_b32_e32 v16, s15                                     // 000000002D48: 7E20020F
	v_mad_u64_u32 v[22:23], s[4:5], v0, s20, v[22:23]          // 000000002D4C: D1E80416 04582900
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002D54: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s14, v22                        // 000000002D5C: 322C2C0E
	v_addc_co_u32_e32 v23, vcc, v16, v23, vcc                  // 000000002D60: 382E2F10
	global_load_dword v16, v[22:23], off offset:64             // 000000002D64: DC508040 107F0016
	s_waitcnt vmcnt(0)                                         // 000000002D6C: BF8C0F70
	v_mac_f32_e32 v11, s17, v16                                // 000000002D70: 2C162011

0000000000002d74 BB0_38:
	v_mad_u64_u32 v[15:16], s[4:5], v1, s19, v[14:15]          // 000000002D74: D1E8040F 04382701
	v_mov_b32_e32 v18, s13                                     // 000000002D7C: 7E24020D
	v_mad_u64_u32 v[15:16], s[4:5], v0, s18, v[15:16]          // 000000002D80: D1E8040F 043C2500
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002D88: D28F000F 00021E82
	v_add_co_u32_e32 v15, vcc, s12, v15                        // 000000002D90: 321E1E0C
	v_addc_co_u32_e32 v16, vcc, v18, v16, vcc                  // 000000002D94: 38202112
	global_store_dword v[15:16], v11, off                      // 000000002D98: DC708000 007F0B0F

0000000000002da0 BB0_39:
	s_or_b64 exec, exec, s[2:3]                                // 000000002DA0: 87FE027E
	v_or_b32_e32 v16, 32, v10                                  // 000000002DA4: 282014A0
	v_cmp_gt_u32_e64 s[2:3], s26, v16                          // 000000002DA8: D0CC0002 0002201A
	s_and_b64 s[10:11], s[2:3], s[8:9]                         // 000000002DB0: 868A0802
	s_and_saveexec_b64 s[4:5], s[10:11]                        // 000000002DB4: BE84200A
	s_cbranch_execz BB0_43                                     // 000000002DB8: BF880020

0000000000002dbc BB0_40:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000002DBC: D04D000A 00010011
	v_mul_f32_e32 v11, s16, v17                                // 000000002DC4: 0A162210
	v_mov_b32_e32 v17, 0                                       // 000000002DC8: 7E220280
	s_and_b64 vcc, exec, s[10:11]                              // 000000002DCC: 86EA0A7E
	s_cbranch_vccz BB0_42                                      // 000000002DD0: BF86000F
	v_mov_b32_e32 v22, v10                                     // 000000002DD4: 7E2C030A
	v_mov_b32_e32 v23, v17                                     // 000000002DD8: 7E2E0311
	v_mad_u64_u32 v[22:23], s[10:11], v1, s21, v[22:23]        // 000000002DDC: D1E80A16 04582B01
	v_mov_b32_e32 v15, s15                                     // 000000002DE4: 7E1E020F
	v_mad_u64_u32 v[22:23], s[10:11], v0, s20, v[22:23]        // 000000002DE8: D1E80A16 04582900
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002DF0: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s14, v22                        // 000000002DF8: 322C2C0E
	v_addc_co_u32_e32 v23, vcc, v15, v23, vcc                  // 000000002DFC: 382E2F0F
	global_load_dword v15, v[22:23], off offset:128            // 000000002E00: DC508080 0F7F0016
	s_waitcnt vmcnt(0)                                         // 000000002E08: BF8C0F70
	v_mac_f32_e32 v11, s17, v15                                // 000000002E0C: 2C161E11

0000000000002e10 BB0_42:
	v_mad_u64_u32 v[17:18], s[10:11], v1, s19, v[16:17]        // 000000002E10: D1E80A11 04402701
	v_mov_b32_e32 v15, s13                                     // 000000002E18: 7E1E020D
	v_mad_u64_u32 v[17:18], s[10:11], v0, s18, v[17:18]        // 000000002E1C: D1E80A11 04442500
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002E24: D28F0011 00022282
	v_add_co_u32_e32 v17, vcc, s12, v17                        // 000000002E2C: 3222220C
	v_addc_co_u32_e32 v18, vcc, v15, v18, vcc                  // 000000002E30: 3824250F
	global_store_dword v[17:18], v11, off                      // 000000002E34: DC708000 007F0B11

0000000000002e3c BB0_43:
	s_or_b64 exec, exec, s[4:5]                                // 000000002E3C: 87FE047E
	v_or_b32_e32 v18, 48, v10                                  // 000000002E40: 282414B0
	v_cmp_gt_u32_e64 s[4:5], s26, v18                          // 000000002E44: D0CC0004 0002241A
	s_and_b64 s[10:11], s[4:5], s[8:9]                         // 000000002E4C: 868A0804
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 000000002E50: BE88200A
	s_cbranch_execz BB0_47                                     // 000000002E54: BF880020

0000000000002e58 BB0_44:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000002E58: D04D000A 00010011
	v_mul_f32_e32 v11, s16, v19                                // 000000002E60: 0A162610
	v_mov_b32_e32 v19, 0                                       // 000000002E64: 7E260280
	s_and_b64 vcc, exec, s[10:11]                              // 000000002E68: 86EA0A7E
	s_cbranch_vccz BB0_46                                      // 000000002E6C: BF86000F
	v_mov_b32_e32 v22, v10                                     // 000000002E70: 7E2C030A
	v_mov_b32_e32 v23, v19                                     // 000000002E74: 7E2E0313
	v_mad_u64_u32 v[22:23], s[10:11], v1, s21, v[22:23]        // 000000002E78: D1E80A16 04582B01
	v_mov_b32_e32 v15, s15                                     // 000000002E80: 7E1E020F
	v_mad_u64_u32 v[22:23], s[10:11], v0, s20, v[22:23]        // 000000002E84: D1E80A16 04582900
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002E8C: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s14, v22                        // 000000002E94: 322C2C0E
	v_addc_co_u32_e32 v23, vcc, v15, v23, vcc                  // 000000002E98: 382E2F0F
	global_load_dword v15, v[22:23], off offset:192            // 000000002E9C: DC5080C0 0F7F0016
	s_waitcnt vmcnt(0)                                         // 000000002EA4: BF8C0F70
	v_mac_f32_e32 v11, s17, v15                                // 000000002EA8: 2C161E11

0000000000002eac BB0_46:
	v_mad_u64_u32 v[22:23], s[10:11], v1, s19, v[18:19]        // 000000002EAC: D1E80A16 04482701
	v_mov_b32_e32 v15, s13                                     // 000000002EB4: 7E1E020D
	v_mad_u64_u32 v[22:23], s[10:11], v0, s18, v[22:23]        // 000000002EB8: D1E80A16 04582500
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002EC0: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s12, v22                        // 000000002EC8: 322C2C0C
	v_addc_co_u32_e32 v23, vcc, v15, v23, vcc                  // 000000002ECC: 382E2F0F
	global_store_dword v[22:23], v11, off                      // 000000002ED0: DC708000 007F0B16

0000000000002ed8 BB0_47:
	s_or_b64 exec, exec, s[8:9]                                // 000000002ED8: 87FE087E
	v_add_u32_e32 v11, 16, v0                                  // 000000002EDC: 68160090
	v_cmp_gt_u32_e64 s[8:9], s27, v11                          // 000000002EE0: D0CC0008 0002161B
	s_and_b64 s[22:23], s[6:7], s[8:9]                         // 000000002EE8: 86960806
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000002EEC: BE8A2016
	s_cbranch_execz BB0_51                                     // 000000002EF0: BF88001F

0000000000002ef4 BB0_48:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000002EF4: D04D0016 00010011
	v_mul_f32_e32 v15, s16, v21                                // 000000002EFC: 0A1E2A10
	v_mov_b32_e32 v22, 0                                       // 000000002F00: 7E2C0280
	v_mov_b32_e32 v21, v10                                     // 000000002F04: 7E2A030A
	s_and_b64 vcc, exec, s[22:23]                              // 000000002F08: 86EA167E
	s_cbranch_vccz BB0_50                                      // 000000002F0C: BF86000D
	v_mad_u64_u32 v[23:24], s[22:23], v1, s21, v[21:22]        // 000000002F10: D1E81617 04542B01
	v_mov_b32_e32 v17, s15                                     // 000000002F18: 7E22020F
	v_mad_u64_u32 v[23:24], s[22:23], v11, s20, v[23:24]       // 000000002F1C: D1E81617 045C290B
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002F24: D28F0017 00022E82
	v_add_co_u32_e32 v23, vcc, s14, v23                        // 000000002F2C: 322E2E0E
	v_addc_co_u32_e32 v24, vcc, v17, v24, vcc                  // 000000002F30: 38303111
	global_load_dword v17, v[23:24], off                       // 000000002F34: DC508000 117F0017
	s_waitcnt vmcnt(0)                                         // 000000002F3C: BF8C0F70
	v_mac_f32_e32 v15, s17, v17                                // 000000002F40: 2C1E2211

0000000000002f44 BB0_50:
	v_mad_u64_u32 v[21:22], s[22:23], v1, s19, v[21:22]        // 000000002F44: D1E81615 04542701
	v_mov_b32_e32 v17, s13                                     // 000000002F4C: 7E22020D
	v_mad_u64_u32 v[21:22], s[22:23], v11, s18, v[21:22]       // 000000002F50: D1E81615 0454250B
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002F58: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s12, v21                        // 000000002F60: 322A2A0C
	v_addc_co_u32_e32 v22, vcc, v17, v22, vcc                  // 000000002F64: 382C2D11
	global_store_dword v[21:22], v15, off                      // 000000002F68: DC708000 007F0F15

0000000000002f70 BB0_51:
	s_or_b64 exec, exec, s[10:11]                              // 000000002F70: 87FE0A7E
	s_and_b64 s[22:23], s[0:1], s[8:9]                         // 000000002F74: 86960800
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000002F78: BE8A2016
	s_cbranch_execz BB0_56                                     // 000000002F7C: BF880023

0000000000002f80 BB0_52:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000002F80: D04D0016 00010011
	v_mul_f32_e32 v15, s16, v20                                // 000000002F88: 0A1E2810
	v_mov_b32_e32 v20, 0                                       // 000000002F8C: 7E280280
	s_and_b64 vcc, exec, s[22:23]                              // 000000002F90: 86EA167E
	s_cbranch_vccz BB0_54                                      // 000000002F94: BF860011
	v_mov_b32_e32 v21, v10                                     // 000000002F98: 7E2A030A
	v_mov_b32_e32 v22, v20                                     // 000000002F9C: 7E2C0314
	v_mad_u64_u32 v[21:22], s[22:23], v1, s21, v[21:22]        // 000000002FA0: D1E81615 04542B01
	v_mov_b32_e32 v17, s15                                     // 000000002FA8: 7E22020F
	v_mov_b32_e32 v19, v14                                     // 000000002FAC: 7E26030E
	v_mad_u64_u32 v[21:22], s[22:23], v11, s20, v[21:22]       // 000000002FB0: D1E81615 0454290B
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002FB8: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s14, v21                        // 000000002FC0: 322A2A0E
	v_addc_co_u32_e32 v22, vcc, v17, v22, vcc                  // 000000002FC4: 382C2D11
	global_load_dword v17, v[21:22], off offset:64             // 000000002FC8: DC508040 117F0015
	s_waitcnt vmcnt(0)                                         // 000000002FD0: BF8C0F70
	v_mac_f32_e32 v15, s17, v17                                // 000000002FD4: 2C1E2211
	s_branch BB0_55                                            // 000000002FD8: BF820001

0000000000002fdc BB0_54:
	v_mov_b32_e32 v19, v14                                     // 000000002FDC: 7E26030E

0000000000002fe0 BB0_55:
	v_mad_u64_u32 v[19:20], s[22:23], v1, s19, v[19:20]        // 000000002FE0: D1E81613 044C2701
	v_mov_b32_e32 v17, s13                                     // 000000002FE8: 7E22020D
	v_mad_u64_u32 v[19:20], s[22:23], v11, s18, v[19:20]       // 000000002FEC: D1E81613 044C250B
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002FF4: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s12, v19                        // 000000002FFC: 3226260C
	v_addc_co_u32_e32 v20, vcc, v17, v20, vcc                  // 000000003000: 38282911
	global_store_dword v[19:20], v15, off                      // 000000003004: DC708000 007F0F13

000000000000300c BB0_56:
	s_or_b64 exec, exec, s[10:11]                              // 00000000300C: 87FE0A7E
	s_and_b64 s[22:23], s[2:3], s[8:9]                         // 000000003010: 86960802
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000003014: BE8A2016
	s_cbranch_execz BB0_61                                     // 000000003018: BF880023

000000000000301c BB0_57:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 00000000301C: D04D0016 00010011
	v_mul_f32_e32 v13, s16, v13                                // 000000003024: 0A1A1A10
	v_mov_b32_e32 v20, 0                                       // 000000003028: 7E280280
	s_and_b64 vcc, exec, s[22:23]                              // 00000000302C: 86EA167E
	s_cbranch_vccz BB0_59                                      // 000000003030: BF860011
	v_mov_b32_e32 v21, v10                                     // 000000003034: 7E2A030A
	v_mov_b32_e32 v22, v20                                     // 000000003038: 7E2C0314
	v_mad_u64_u32 v[21:22], s[22:23], v1, s21, v[21:22]        // 00000000303C: D1E81615 04542B01
	v_mov_b32_e32 v15, s15                                     // 000000003044: 7E1E020F
	v_mov_b32_e32 v19, v16                                     // 000000003048: 7E260310
	v_mad_u64_u32 v[21:22], s[22:23], v11, s20, v[21:22]       // 00000000304C: D1E81615 0454290B
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000003054: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s14, v21                        // 00000000305C: 322A2A0E
	v_addc_co_u32_e32 v22, vcc, v15, v22, vcc                  // 000000003060: 382C2D0F
	global_load_dword v15, v[21:22], off offset:128            // 000000003064: DC508080 0F7F0015
	s_waitcnt vmcnt(0)                                         // 00000000306C: BF8C0F70
	v_mac_f32_e32 v13, s17, v15                                // 000000003070: 2C1A1E11
	s_branch BB0_60                                            // 000000003074: BF820001

0000000000003078 BB0_59:
	v_mov_b32_e32 v19, v16                                     // 000000003078: 7E260310

000000000000307c BB0_60:
	v_mad_u64_u32 v[19:20], s[22:23], v1, s19, v[19:20]        // 00000000307C: D1E81613 044C2701
	v_mov_b32_e32 v15, s13                                     // 000000003084: 7E1E020D
	v_mad_u64_u32 v[19:20], s[22:23], v11, s18, v[19:20]       // 000000003088: D1E81613 044C250B
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000003090: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s12, v19                        // 000000003098: 3226260C
	v_addc_co_u32_e32 v20, vcc, v15, v20, vcc                  // 00000000309C: 3828290F
	global_store_dword v[19:20], v13, off                      // 0000000030A0: DC708000 007F0D13

00000000000030a8 BB0_61:
	s_or_b64 exec, exec, s[10:11]                              // 0000000030A8: 87FE0A7E
	s_and_b64 s[10:11], s[4:5], s[8:9]                         // 0000000030AC: 868A0804
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 0000000030B0: BE88200A
	s_cbranch_execz BB0_66                                     // 0000000030B4: BF880023

00000000000030b8 BB0_62:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 0000000030B8: D04D000A 00010011
	v_mul_f32_e32 v12, s16, v12                                // 0000000030C0: 0A181810
	v_mov_b32_e32 v20, 0                                       // 0000000030C4: 7E280280
	s_and_b64 vcc, exec, s[10:11]                              // 0000000030C8: 86EA0A7E
	s_cbranch_vccz BB0_64                                      // 0000000030CC: BF860011
	v_mov_b32_e32 v21, v10                                     // 0000000030D0: 7E2A030A
	v_mov_b32_e32 v22, v20                                     // 0000000030D4: 7E2C0314
	v_mad_u64_u32 v[21:22], s[10:11], v1, s21, v[21:22]        // 0000000030D8: D1E80A15 04542B01
	v_mov_b32_e32 v13, s15                                     // 0000000030E0: 7E1A020F
	v_mov_b32_e32 v19, v18                                     // 0000000030E4: 7E260312
	v_mad_u64_u32 v[21:22], s[10:11], v11, s20, v[21:22]       // 0000000030E8: D1E80A15 0454290B
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 0000000030F0: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s14, v21                        // 0000000030F8: 322A2A0E
	v_addc_co_u32_e32 v22, vcc, v13, v22, vcc                  // 0000000030FC: 382C2D0D
	global_load_dword v13, v[21:22], off offset:192            // 000000003100: DC5080C0 0D7F0015
	s_waitcnt vmcnt(0)                                         // 000000003108: BF8C0F70
	v_mac_f32_e32 v12, s17, v13                                // 00000000310C: 2C181A11
	s_branch BB0_65                                            // 000000003110: BF820001

0000000000003114 BB0_64:
	v_mov_b32_e32 v19, v18                                     // 000000003114: 7E260312

0000000000003118 BB0_65:
	v_mad_u64_u32 v[19:20], s[10:11], v1, s19, v[19:20]        // 000000003118: D1E80A13 044C2701
	v_mad_u64_u32 v[19:20], s[10:11], v11, s18, v[19:20]       // 000000003120: D1E80A13 044C250B
	v_mov_b32_e32 v11, s13                                     // 000000003128: 7E16020D
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 00000000312C: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s12, v19                        // 000000003134: 3226260C
	v_addc_co_u32_e32 v20, vcc, v11, v20, vcc                  // 000000003138: 3828290B
	global_store_dword v[19:20], v12, off                      // 00000000313C: DC708000 007F0C13

0000000000003144 BB0_66:
	s_or_b64 exec, exec, s[8:9]                                // 000000003144: 87FE087E
	v_add_u32_e32 v11, 32, v0                                  // 000000003148: 681600A0
	v_cmp_gt_u32_e64 s[8:9], s27, v11                          // 00000000314C: D0CC0008 0002161B
	s_and_b64 s[22:23], s[6:7], s[8:9]                         // 000000003154: 86960806
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000003158: BE8A2016
	s_cbranch_execz BB0_70                                     // 00000000315C: BF88001F

0000000000003160 BB0_67:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000003160: D04D0016 00010011
	v_mul_f32_e32 v9, s16, v9                                  // 000000003168: 0A121210
	v_mov_b32_e32 v13, 0                                       // 00000000316C: 7E1A0280
	v_mov_b32_e32 v12, v10                                     // 000000003170: 7E18030A
	s_and_b64 vcc, exec, s[22:23]                              // 000000003174: 86EA167E
	s_cbranch_vccz BB0_69                                      // 000000003178: BF86000D
	v_mad_u64_u32 v[19:20], s[22:23], v1, s21, v[12:13]        // 00000000317C: D1E81613 04302B01
	v_mov_b32_e32 v15, s15                                     // 000000003184: 7E1E020F
	v_mad_u64_u32 v[19:20], s[22:23], v11, s20, v[19:20]       // 000000003188: D1E81613 044C290B
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000003190: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s14, v19                        // 000000003198: 3226260E
	v_addc_co_u32_e32 v20, vcc, v15, v20, vcc                  // 00000000319C: 3828290F
	global_load_dword v15, v[19:20], off                       // 0000000031A0: DC508000 0F7F0013
	s_waitcnt vmcnt(0)                                         // 0000000031A8: BF8C0F70
	v_mac_f32_e32 v9, s17, v15                                 // 0000000031AC: 2C121E11

00000000000031b0 BB0_69:
	v_mad_u64_u32 v[12:13], s[22:23], v1, s19, v[12:13]        // 0000000031B0: D1E8160C 04302701
	v_mov_b32_e32 v15, s13                                     // 0000000031B8: 7E1E020D
	v_mad_u64_u32 v[12:13], s[22:23], v11, s18, v[12:13]       // 0000000031BC: D1E8160C 0430250B
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 0000000031C4: D28F000C 00021882
	v_add_co_u32_e32 v12, vcc, s12, v12                        // 0000000031CC: 3218180C
	v_addc_co_u32_e32 v13, vcc, v15, v13, vcc                  // 0000000031D0: 381A1B0F
	global_store_dword v[12:13], v9, off                       // 0000000031D4: DC708000 007F090C

00000000000031dc BB0_70:
	s_or_b64 exec, exec, s[10:11]                              // 0000000031DC: 87FE0A7E
	s_and_b64 s[22:23], s[0:1], s[8:9]                         // 0000000031E0: 86960800
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 0000000031E4: BE8A2016
	s_cbranch_execz BB0_75                                     // 0000000031E8: BF880023

00000000000031ec BB0_71:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 0000000031EC: D04D0016 00010011
	v_mul_f32_e32 v8, s16, v8                                  // 0000000031F4: 0A101010
	v_mov_b32_e32 v13, 0                                       // 0000000031F8: 7E1A0280
	s_and_b64 vcc, exec, s[22:23]                              // 0000000031FC: 86EA167E
	s_cbranch_vccz BB0_73                                      // 000000003200: BF860011
	v_mov_b32_e32 v19, v10                                     // 000000003204: 7E26030A
	v_mov_b32_e32 v20, v13                                     // 000000003208: 7E28030D
	v_mad_u64_u32 v[19:20], s[22:23], v1, s21, v[19:20]        // 00000000320C: D1E81613 044C2B01
	v_mov_b32_e32 v9, s15                                      // 000000003214: 7E12020F
	v_mov_b32_e32 v12, v14                                     // 000000003218: 7E18030E
	v_mad_u64_u32 v[19:20], s[22:23], v11, s20, v[19:20]       // 00000000321C: D1E81613 044C290B
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000003224: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s14, v19                        // 00000000322C: 3226260E
	v_addc_co_u32_e32 v20, vcc, v9, v20, vcc                   // 000000003230: 38282909
	global_load_dword v9, v[19:20], off offset:64              // 000000003234: DC508040 097F0013
	s_waitcnt vmcnt(0)                                         // 00000000323C: BF8C0F70
	v_mac_f32_e32 v8, s17, v9                                  // 000000003240: 2C101211
	s_branch BB0_74                                            // 000000003244: BF820001

0000000000003248 BB0_73:
	v_mov_b32_e32 v12, v14                                     // 000000003248: 7E18030E

000000000000324c BB0_74:
	v_mad_u64_u32 v[12:13], s[22:23], v1, s19, v[12:13]        // 00000000324C: D1E8160C 04302701
	v_mov_b32_e32 v9, s13                                      // 000000003254: 7E12020D
	v_mad_u64_u32 v[12:13], s[22:23], v11, s18, v[12:13]       // 000000003258: D1E8160C 0430250B
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 000000003260: D28F000C 00021882
	v_add_co_u32_e32 v12, vcc, s12, v12                        // 000000003268: 3218180C
	v_addc_co_u32_e32 v13, vcc, v9, v13, vcc                   // 00000000326C: 381A1B09
	global_store_dword v[12:13], v8, off                       // 000000003270: DC708000 007F080C

0000000000003278 BB0_75:
	s_or_b64 exec, exec, s[10:11]                              // 000000003278: 87FE0A7E
	s_and_b64 s[22:23], s[2:3], s[8:9]                         // 00000000327C: 86960802
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000003280: BE8A2016
	s_cbranch_execz BB0_80                                     // 000000003284: BF880023

0000000000003288 BB0_76:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000003288: D04D0016 00010011
	v_mul_f32_e32 v7, s16, v7                                  // 000000003290: 0A0E0E10
	v_mov_b32_e32 v9, 0                                        // 000000003294: 7E120280
	s_and_b64 vcc, exec, s[22:23]                              // 000000003298: 86EA167E
	s_cbranch_vccz BB0_78                                      // 00000000329C: BF860011
	v_mov_b32_e32 v12, v10                                     // 0000000032A0: 7E18030A
	v_mov_b32_e32 v13, v9                                      // 0000000032A4: 7E1A0309
	v_mad_u64_u32 v[12:13], s[22:23], v1, s21, v[12:13]        // 0000000032A8: D1E8160C 04302B01
	v_mov_b32_e32 v15, s15                                     // 0000000032B0: 7E1E020F
	v_mov_b32_e32 v8, v16                                      // 0000000032B4: 7E100310
	v_mad_u64_u32 v[12:13], s[22:23], v11, s20, v[12:13]       // 0000000032B8: D1E8160C 0430290B
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 0000000032C0: D28F000C 00021882
	v_add_co_u32_e32 v12, vcc, s14, v12                        // 0000000032C8: 3218180E
	v_addc_co_u32_e32 v13, vcc, v15, v13, vcc                  // 0000000032CC: 381A1B0F
	global_load_dword v12, v[12:13], off offset:128            // 0000000032D0: DC508080 0C7F000C
	s_waitcnt vmcnt(0)                                         // 0000000032D8: BF8C0F70
	v_mac_f32_e32 v7, s17, v12                                 // 0000000032DC: 2C0E1811
	s_branch BB0_79                                            // 0000000032E0: BF820001

00000000000032e4 BB0_78:
	v_mov_b32_e32 v8, v16                                      // 0000000032E4: 7E100310

00000000000032e8 BB0_79:
	v_mad_u64_u32 v[8:9], s[22:23], v1, s19, v[8:9]            // 0000000032E8: D1E81608 04202701
	v_mov_b32_e32 v12, s13                                     // 0000000032F0: 7E18020D
	v_mad_u64_u32 v[8:9], s[22:23], v11, s18, v[8:9]           // 0000000032F4: D1E81608 0420250B
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 0000000032FC: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s12, v8                          // 000000003304: 3210100C
	v_addc_co_u32_e32 v9, vcc, v12, v9, vcc                    // 000000003308: 3812130C
	global_store_dword v[8:9], v7, off                         // 00000000330C: DC708000 007F0708

0000000000003314 BB0_80:
	s_or_b64 exec, exec, s[10:11]                              // 000000003314: 87FE0A7E
	s_and_b64 s[10:11], s[4:5], s[8:9]                         // 000000003318: 868A0804
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 00000000331C: BE88200A
	s_cbranch_execz BB0_85                                     // 000000003320: BF880023

0000000000003324 BB0_81:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000003324: D04D000A 00010011
	v_mul_f32_e32 v6, s16, v6                                  // 00000000332C: 0A0C0C10
	v_mov_b32_e32 v8, 0                                        // 000000003330: 7E100280
	s_and_b64 vcc, exec, s[10:11]                              // 000000003334: 86EA0A7E
	s_cbranch_vccz BB0_83                                      // 000000003338: BF860011
	v_mov_b32_e32 v12, v10                                     // 00000000333C: 7E18030A
	v_mov_b32_e32 v13, v8                                      // 000000003340: 7E1A0308
	v_mad_u64_u32 v[12:13], s[10:11], v1, s21, v[12:13]        // 000000003344: D1E80A0C 04302B01
	v_mov_b32_e32 v9, s15                                      // 00000000334C: 7E12020F
	v_mov_b32_e32 v7, v18                                      // 000000003350: 7E0E0312
	v_mad_u64_u32 v[12:13], s[10:11], v11, s20, v[12:13]       // 000000003354: D1E80A0C 0430290B
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 00000000335C: D28F000C 00021882
	v_add_co_u32_e32 v12, vcc, s14, v12                        // 000000003364: 3218180E
	v_addc_co_u32_e32 v13, vcc, v9, v13, vcc                   // 000000003368: 381A1B09
	global_load_dword v9, v[12:13], off offset:192             // 00000000336C: DC5080C0 097F000C
	s_waitcnt vmcnt(0)                                         // 000000003374: BF8C0F70
	v_mac_f32_e32 v6, s17, v9                                  // 000000003378: 2C0C1211
	s_branch BB0_84                                            // 00000000337C: BF820001

0000000000003380 BB0_83:
	v_mov_b32_e32 v7, v18                                      // 000000003380: 7E0E0312

0000000000003384 BB0_84:
	v_mad_u64_u32 v[7:8], s[10:11], v1, s19, v[7:8]            // 000000003384: D1E80A07 041C2701
	v_mov_b32_e32 v9, s13                                      // 00000000338C: 7E12020D
	v_mad_u64_u32 v[7:8], s[10:11], v11, s18, v[7:8]           // 000000003390: D1E80A07 041C250B
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 000000003398: D28F0007 00020E82
	v_add_co_u32_e32 v7, vcc, s12, v7                          // 0000000033A0: 320E0E0C
	v_addc_co_u32_e32 v8, vcc, v9, v8, vcc                     // 0000000033A4: 38101109
	global_store_dword v[7:8], v6, off                         // 0000000033A8: DC708000 007F0607

00000000000033b0 BB0_85:
	s_or_b64 exec, exec, s[8:9]                                // 0000000033B0: 87FE087E
	v_add_u32_e32 v0, 48, v0                                   // 0000000033B4: 680000B0
	v_cmp_gt_u32_e64 s[8:9], s27, v0                           // 0000000033B8: D0CC0008 0002001B
	s_and_b64 s[10:11], s[6:7], s[8:9]                         // 0000000033C0: 868A0806
	s_and_saveexec_b64 s[6:7], s[10:11]                        // 0000000033C4: BE86200A
	s_cbranch_execz BB0_89                                     // 0000000033C8: BF88001F

00000000000033cc BB0_86:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 0000000033CC: D04D000A 00010011
	v_mul_f32_e32 v5, s16, v5                                  // 0000000033D4: 0A0A0A10
	v_mov_b32_e32 v7, 0                                        // 0000000033D8: 7E0E0280
	v_mov_b32_e32 v6, v10                                      // 0000000033DC: 7E0C030A
	s_and_b64 vcc, exec, s[10:11]                              // 0000000033E0: 86EA0A7E
	s_cbranch_vccz BB0_88                                      // 0000000033E4: BF86000D
	v_mad_u64_u32 v[8:9], s[10:11], v1, s21, v[6:7]            // 0000000033E8: D1E80A08 04182B01
	v_mov_b32_e32 v11, s15                                     // 0000000033F0: 7E16020F
	v_mad_u64_u32 v[8:9], s[10:11], v0, s20, v[8:9]            // 0000000033F4: D1E80A08 04202900
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 0000000033FC: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s14, v8                          // 000000003404: 3210100E
	v_addc_co_u32_e32 v9, vcc, v11, v9, vcc                    // 000000003408: 3812130B
	global_load_dword v8, v[8:9], off                          // 00000000340C: DC508000 087F0008
	s_waitcnt vmcnt(0)                                         // 000000003414: BF8C0F70
	v_mac_f32_e32 v5, s17, v8                                  // 000000003418: 2C0A1011

000000000000341c BB0_88:
	v_mad_u64_u32 v[6:7], s[10:11], v1, s19, v[6:7]            // 00000000341C: D1E80A06 04182701
	v_mov_b32_e32 v8, s13                                      // 000000003424: 7E10020D
	v_mad_u64_u32 v[6:7], s[10:11], v0, s18, v[6:7]            // 000000003428: D1E80A06 04182500
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000003430: D28F0006 00020C82
	v_add_co_u32_e32 v6, vcc, s12, v6                          // 000000003438: 320C0C0C
	v_addc_co_u32_e32 v7, vcc, v8, v7, vcc                     // 00000000343C: 380E0F08
	global_store_dword v[6:7], v5, off                         // 000000003440: DC708000 007F0506

0000000000003448 BB0_89:
	s_or_b64 exec, exec, s[6:7]                                // 000000003448: 87FE067E
	s_and_b64 s[6:7], s[0:1], s[8:9]                           // 00000000344C: 86860800
	s_and_saveexec_b64 s[0:1], s[6:7]                          // 000000003450: BE802006
	s_cbranch_execz BB0_93                                     // 000000003454: BF880020

0000000000003458 BB0_90:
	v_cmp_neq_f32_e64 s[6:7], s17, 0                           // 000000003458: D04D0006 00010011
	v_mul_f32_e32 v4, s16, v4                                  // 000000003460: 0A080810
	v_mov_b32_e32 v15, 0                                       // 000000003464: 7E1E0280
	s_and_b64 vcc, exec, s[6:7]                                // 000000003468: 86EA067E
	s_cbranch_vccz BB0_92                                      // 00000000346C: BF86000F
	v_mov_b32_e32 v5, v10                                      // 000000003470: 7E0A030A
	v_mov_b32_e32 v6, v15                                      // 000000003474: 7E0C030F
	v_mad_u64_u32 v[5:6], s[6:7], v1, s21, v[5:6]              // 000000003478: D1E80605 04142B01
	v_mov_b32_e32 v7, s15                                      // 000000003480: 7E0E020F
	v_mad_u64_u32 v[5:6], s[6:7], v0, s20, v[5:6]              // 000000003484: D1E80605 04142900
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 00000000348C: D28F0005 00020A82
	v_add_co_u32_e32 v5, vcc, s14, v5                          // 000000003494: 320A0A0E
	v_addc_co_u32_e32 v6, vcc, v7, v6, vcc                     // 000000003498: 380C0D07
	global_load_dword v5, v[5:6], off offset:64                // 00000000349C: DC508040 057F0005
	s_waitcnt vmcnt(0)                                         // 0000000034A4: BF8C0F70
	v_mac_f32_e32 v4, s17, v5                                  // 0000000034A8: 2C080A11

00000000000034ac BB0_92:
	v_mad_u64_u32 v[5:6], s[6:7], v1, s19, v[14:15]            // 0000000034AC: D1E80605 04382701
	v_mov_b32_e32 v7, s13                                      // 0000000034B4: 7E0E020D
	v_mad_u64_u32 v[5:6], s[6:7], v0, s18, v[5:6]              // 0000000034B8: D1E80605 04142500
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 0000000034C0: D28F0005 00020A82
	v_add_co_u32_e32 v5, vcc, s12, v5                          // 0000000034C8: 320A0A0C
	v_addc_co_u32_e32 v6, vcc, v7, v6, vcc                     // 0000000034CC: 380C0D07
	global_store_dword v[5:6], v4, off                         // 0000000034D0: DC708000 007F0405

00000000000034d8 BB0_93:
	s_or_b64 exec, exec, s[0:1]                                // 0000000034D8: 87FE007E
	s_and_b64 s[2:3], s[2:3], s[8:9]                           // 0000000034DC: 86820802
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 0000000034E0: BE802002
	s_cbranch_execz BB0_97                                     // 0000000034E4: BF880020

00000000000034e8 BB0_94:
	v_cmp_neq_f32_e64 s[2:3], s17, 0                           // 0000000034E8: D04D0002 00010011
	v_mul_f32_e32 v3, s16, v3                                  // 0000000034F0: 0A060610
	v_mov_b32_e32 v17, 0                                       // 0000000034F4: 7E220280
	s_and_b64 vcc, exec, s[2:3]                                // 0000000034F8: 86EA027E
	s_cbranch_vccz BB0_96                                      // 0000000034FC: BF86000F
	v_mov_b32_e32 v4, v10                                      // 000000003500: 7E08030A
	v_mov_b32_e32 v5, v17                                      // 000000003504: 7E0A0311
	v_mad_u64_u32 v[4:5], s[2:3], v1, s21, v[4:5]              // 000000003508: D1E80204 04102B01
	v_mov_b32_e32 v6, s15                                      // 000000003510: 7E0C020F
	v_mad_u64_u32 v[4:5], s[2:3], v0, s20, v[4:5]              // 000000003514: D1E80204 04102900
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000000351C: D28F0004 00020882
	v_add_co_u32_e32 v4, vcc, s14, v4                          // 000000003524: 3208080E
	v_addc_co_u32_e32 v5, vcc, v6, v5, vcc                     // 000000003528: 380A0B06
	global_load_dword v4, v[4:5], off offset:128               // 00000000352C: DC508080 047F0004
	s_waitcnt vmcnt(0)                                         // 000000003534: BF8C0F70
	v_mac_f32_e32 v3, s17, v4                                  // 000000003538: 2C060811

000000000000353c BB0_96:
	v_mad_u64_u32 v[4:5], s[2:3], v1, s19, v[16:17]            // 00000000353C: D1E80204 04402701
	v_mov_b32_e32 v6, s13                                      // 000000003544: 7E0C020D
	v_mad_u64_u32 v[4:5], s[2:3], v0, s18, v[4:5]              // 000000003548: D1E80204 04102500
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000003550: D28F0004 00020882
	v_add_co_u32_e32 v4, vcc, s12, v4                          // 000000003558: 3208080C
	v_addc_co_u32_e32 v5, vcc, v6, v5, vcc                     // 00000000355C: 380A0B06
	global_store_dword v[4:5], v3, off                         // 000000003560: DC708000 007F0304

0000000000003568 BB0_97:
	s_or_b64 exec, exec, s[0:1]                                // 000000003568: 87FE007E
	s_and_b64 s[0:1], s[4:5], s[8:9]                           // 00000000356C: 86800804
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000003570: BE822000
	s_cbranch_execz BB0_101                                    // 000000003574: BF88001F

0000000000003578 BB0_98:
	v_cmp_neq_f32_e64 s[0:1], s17, 0                           // 000000003578: D04D0000 00010011
	v_mul_f32_e32 v2, s16, v2                                  // 000000003580: 0A040410
	v_mov_b32_e32 v19, 0                                       // 000000003584: 7E260280
	s_and_b64 vcc, exec, s[0:1]                                // 000000003588: 86EA007E
	s_cbranch_vccz BB0_100                                     // 00000000358C: BF86000E
	v_mov_b32_e32 v11, v19                                     // 000000003590: 7E160313
	v_mad_u64_u32 v[3:4], s[0:1], v1, s21, v[10:11]            // 000000003594: D1E80003 04282B01
	v_mov_b32_e32 v5, s15                                      // 00000000359C: 7E0A020F
	v_mad_u64_u32 v[3:4], s[0:1], v0, s20, v[3:4]              // 0000000035A0: D1E80003 040C2900
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 0000000035A8: D28F0003 00020682
	v_add_co_u32_e32 v3, vcc, s14, v3                          // 0000000035B0: 3206060E
	v_addc_co_u32_e32 v4, vcc, v5, v4, vcc                     // 0000000035B4: 38080905
	global_load_dword v3, v[3:4], off offset:192               // 0000000035B8: DC5080C0 037F0003
	s_waitcnt vmcnt(0)                                         // 0000000035C0: BF8C0F70
	v_mac_f32_e32 v2, s17, v3                                  // 0000000035C4: 2C040611

00000000000035c8 BB0_100:
	v_mad_u64_u32 v[3:4], s[0:1], v1, s19, v[18:19]            // 0000000035C8: D1E80003 04482701
	v_mad_u64_u32 v[0:1], s[0:1], v0, s18, v[3:4]              // 0000000035D0: D1E80000 040C2500
	v_mov_b32_e32 v3, s13                                      // 0000000035D8: 7E06020D
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 0000000035DC: D28F0000 00020082
	v_add_co_u32_e32 v0, vcc, s12, v0                          // 0000000035E4: 3200000C
	v_addc_co_u32_e32 v1, vcc, v3, v1, vcc                     // 0000000035E8: 38020303
	global_store_dword v[0:1], v2, off                         // 0000000035EC: DC708000 007F0200

00000000000035f4 BB0_101:
	s_endpgm                                                   // 0000000035F4: BF810000
