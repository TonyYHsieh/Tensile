
Kernels.so-000-gfx803.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000002100 Cijk_Ailk_Bljk_SB_MT64x64x4_SE_K1:
	s_load_dword s0, s[4:5], 0x4                               // 000000002100: C0020002 00000004
	s_load_dwordx2 s[38:39], s[4:5], 0xc                       // 000000002108: C0060982 0000000C
	s_load_dwordx2 s[12:13], s[6:7], 0x0                       // 000000002110: C0060303 00000000
	s_mov_b32 s33, s11                                         // 000000002118: BEA1000B
	s_mov_b32 s11, 0x4f800000                                  // 00000000211C: BE8B00FF 4F800000
	s_waitcnt lgkmcnt(0)                                       // 000000002124: BF8C007F
	s_and_b32 s2, s0, 0xffff                                   // 000000002128: 8602FF00 0000FFFF
	v_cvt_f32_u32_e32 v1, s2                                   // 000000002130: 7E020C02
	s_load_dwordx2 s[14:15], s[6:7], 0x8                       // 000000002134: C0060383 00000008
	s_load_dwordx2 s[36:37], s[6:7], 0x10                      // 00000000213C: C0060903 00000010
	s_load_dwordx8 s[16:23], s[6:7], 0x20                      // 000000002144: C00E0403 00000020
	v_rcp_iflag_f32_e32 v1, v1                                 // 00000000214C: 7E024701
	s_load_dwordx4 s[24:27], s[6:7], 0x40                      // 000000002150: C00A0603 00000040
	s_load_dwordx2 s[34:35], s[6:7], 0x18                      // 000000002158: C0060883 00000018
	s_load_dwordx4 s[28:31], s[6:7], 0x50                      // 000000002160: C00A0703 00000050
	v_mul_f32_e32 v1, s11, v1                                  // 000000002168: 0A02020B
	v_cvt_u32_f32_e32 v1, v1                                   // 00000000216C: 7E020F01
	v_lshrrev_b32_e32 v12, 4, v0                               // 000000002170: 20180084
	v_and_b32_e32 v11, 15, v0                                  // 000000002174: 2616008F
	v_or_b32_e32 v14, 0x100, v12                               // 000000002178: 281C18FF 00000100
	v_mul_lo_u32 v2, v1, s2                                    // 000000002180: D2850002 00000501
	v_mul_hi_u32 v3, v1, s2                                    // 000000002188: D2860003 00000501
	s_mov_b32 s32, s33                                         // 000000002190: BEA00021
	v_sub_u32_e32 v4, vcc, 0, v2                               // 000000002194: 34080480
	v_cmp_eq_u32_e64 s[0:1], 0, v3                             // 000000002198: D0CA0000 00020680
	v_cndmask_b32_e64 v2, v2, v4, s[0:1]                       // 0000000021A0: D1000002 00020902
	v_mul_hi_u32 v2, v2, v1                                    // 0000000021A8: D2860002 00020302
	v_add_u32_e32 v3, vcc, v2, v1                              // 0000000021B0: 32060302
	v_subrev_u32_e32 v1, vcc, v2, v1                           // 0000000021B4: 36020302
	v_cndmask_b32_e64 v1, v1, v3, s[0:1]                       // 0000000021B8: D1000001 00020701
	v_mul_hi_u32 v3, v1, s38                                   // 0000000021C0: D2860003 00004D01
	v_mul_lo_u32 v1, v3, s2                                    // 0000000021C8: D2850001 00000503
	v_add_u32_e32 v4, vcc, -1, v3                              // 0000000021D0: 320806C1
	v_add_u32_e32 v5, vcc, 1, v3                               // 0000000021D4: 320A0681
	v_sub_u32_e32 v2, vcc, s38, v1                             // 0000000021D8: 34040226
	v_cmp_ge_u32_e64 s[0:1], s38, v1                           // 0000000021DC: D0CE0000 00020226
	v_cmp_le_u32_e64 s[2:3], s2, v2                            // 0000000021E4: D0CB0002 00020402
	s_and_b64 vcc, s[2:3], s[0:1]                              // 0000000021EC: 86EA0002
	s_add_u32 s2, s4, 6                                        // 0000000021F0: 80028604
	s_addc_u32 s3, s5, 0                                       // 0000000021F4: 82038005
	v_mov_b32_e32 v1, s2                                       // 0000000021F8: 7E020202
	v_mov_b32_e32 v2, s3                                       // 0000000021FC: 7E040203
	flat_load_ushort v1, v[1:2]                                // 000000002200: DC480000 01000001
	v_cndmask_b32_e32 v3, v3, v5, vcc                          // 000000002208: 00060B03
	v_cndmask_b32_e64 v3, v4, v3, s[0:1]                       // 00000000220C: D1000003 00020704
	s_and_b32 s2, s9, 7                                        // 000000002214: 86028709
	v_mul_lo_u32 v3, v3, s2                                    // 000000002218: D2850003 00000503
	s_and_b32 s2, s9, -8                                       // 000000002220: 8602C809
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002224: BF8C0070
	v_cvt_f32_u32_e32 v2, v1                                   // 000000002228: 7E040D01
	v_rcp_iflag_f32_e32 v2, v2                                 // 00000000222C: 7E044702
	v_mul_f32_e32 v2, s11, v2                                  // 000000002230: 0A04040B
	v_cvt_u32_f32_e32 v2, v2                                   // 000000002234: 7E040F02
	v_mul_lo_u32 v5, v2, v1                                    // 000000002238: D2850005 00020302
	v_mul_hi_u32 v6, v2, v1                                    // 000000002240: D2860006 00020302
	v_sub_u32_e32 v4, vcc, 0, v5                               // 000000002248: 34080A80
	v_cmp_eq_u32_e64 s[0:1], 0, v6                             // 00000000224C: D0CA0000 00020C80
	v_cndmask_b32_e64 v4, v5, v4, s[0:1]                       // 000000002254: D1000004 00020905
	v_mul_hi_u32 v4, v4, v2                                    // 00000000225C: D2860004 00020504
	v_add_u32_e32 v5, vcc, v4, v2                              // 000000002264: 320A0504
	v_subrev_u32_e32 v2, vcc, v4, v2                           // 000000002268: 36040504
	v_cndmask_b32_e64 v2, v2, v5, s[0:1]                       // 00000000226C: D1000002 00020B02
	v_mul_hi_u32 v4, v2, s39                                   // 000000002274: D2860004 00004F02
	v_add_u32_e32 v2, vcc, s8, v3                              // 00000000227C: 32040608
	v_mul_lo_u32 v3, v4, v1                                    // 000000002280: D2850003 00020304
	v_add_u32_e32 v5, vcc, 1, v4                               // 000000002288: 320A0881
	v_add_u32_e32 v6, vcc, -1, v4                              // 00000000228C: 320C08C1
	v_sub_u32_e32 v7, vcc, s39, v3                             // 000000002290: 340E0627
	v_cmp_ge_u32_e32 vcc, s39, v3                              // 000000002294: 7D9C0627
	v_cmp_ge_u32_e64 s[0:1], v7, v1                            // 000000002298: D0CE0000 00020307
	s_and_b64 s[0:1], s[0:1], vcc                              // 0000000022A0: 86806A00
	v_cndmask_b32_e64 v1, v4, v5, s[0:1]                       // 0000000022A4: D1000001 00020B04
	v_cndmask_b32_e32 v1, v6, v1, vcc                          // 0000000022AC: 00020306
	v_and_b32_e32 v3, 7, v1                                    // 0000000022B0: 26060287
	v_sub_u32_e32 v1, vcc, v1, v3                              // 0000000022B4: 34020701
	v_cmp_ge_u32_e32 vcc, s9, v1                               // 0000000022B8: 7D9C0209
	v_cndmask_b32_e32 v1, 0, v3, vcc                           // 0000000022BC: 00020680
	v_cmp_gt_i32_e32 vcc, 3, v1                                // 0000000022C0: 7D880283
	s_and_b64 vcc, exec, vcc                                   // 0000000022C4: 86EA6A7E
	s_cbranch_vccz BB0_4                                       // 0000000022C8: BF860008
	v_cmp_gt_i32_e32 vcc, 1, v1                                // 0000000022CC: 7D880281
	s_and_b64 vcc, exec, vcc                                   // 0000000022D0: 86EA6A7E
	s_cbranch_vccnz BB0_9                                      // 0000000022D4: BF87001E
	v_cmp_gt_i32_e32 vcc, 2, v1                                // 0000000022D8: 7D880282
	s_and_b64 vcc, exec, vcc                                   // 0000000022DC: 86EA6A7E
	s_cbranch_vccz BB0_10                                      // 0000000022E0: BF86001E
	v_mov_b32_e32 v1, s2                                       // 0000000022E4: 7E020202
	s_branch BB0_17                                            // 0000000022E8: BF82003A

00000000000022ec BB0_4:
	v_cmp_gt_i32_e32 vcc, 5, v1                                // 0000000022EC: 7D880285
	s_and_b64 vcc, exec, vcc                                   // 0000000022F0: 86EA6A7E
	s_cbranch_vccz BB0_7                                       // 0000000022F4: BF86000B
	v_cmp_gt_i32_e32 vcc, 4, v1                                // 0000000022F8: 7D880284
	s_and_b64 vcc, exec, vcc                                   // 0000000022FC: 86EA6A7E
	s_cbranch_vccz BB0_11                                      // 000000002300: BF860019
	s_mov_b32 s0, 0xaaaaaaab                                   // 000000002304: BE8000FF AAAAAAAB
	v_mul_hi_u32 v1, v2, s0                                    // 00000000230C: D2860001 00000102
	v_lshrrev_b32_e32 v3, 1, v1                                // 000000002314: 20060281
	v_mul_lo_u32 v1, v3, -3                                    // 000000002318: D2850001 00018703
	s_branch BB0_15                                            // 000000002320: BF820029

0000000000002324 BB0_7:
	v_cmp_gt_i32_e32 vcc, 6, v1                                // 000000002324: 7D880286
	s_and_b64 vcc, exec, vcc                                   // 000000002328: 86EA6A7E
	s_cbranch_vccz BB0_12                                      // 00000000232C: BF860011
	s_mov_b32 s0, 0xcccccccd                                   // 000000002330: BE8000FF CCCCCCCD
	v_mul_hi_u32 v1, v2, s0                                    // 000000002338: D2860001 00000102
	v_lshrrev_b32_e32 v3, 2, v1                                // 000000002340: 20060282
	v_mul_lo_u32 v1, v3, -5                                    // 000000002344: D2850001 00018B03
	s_branch BB0_15                                            // 00000000234C: BF82001E

0000000000002350 BB0_9:
	v_lshrrev_b32_e32 v3, 3, v2                                // 000000002350: 20060483
	v_and_b32_e32 v1, 7, v2                                    // 000000002354: 26020487
	s_branch BB0_16                                            // 000000002358: BF82001C

000000000000235c BB0_10:
	v_lshrrev_b32_e32 v3, 1, v2                                // 00000000235C: 20060481
	v_and_b32_e32 v1, 1, v2                                    // 000000002360: 26020481
	s_branch BB0_16                                            // 000000002364: BF820019

0000000000002368 BB0_11:
	v_lshrrev_b32_e32 v3, 2, v2                                // 000000002368: 20060482
	v_and_b32_e32 v1, 3, v2                                    // 00000000236C: 26020483
	s_branch BB0_16                                            // 000000002370: BF820016

0000000000002374 BB0_12:
	v_cmp_eq_u32_e32 vcc, 6, v1                                // 000000002374: 7D940286
	s_and_b64 vcc, exec, vcc                                   // 000000002378: 86EA6A7E
	s_cbranch_vccz BB0_14                                      // 00000000237C: BF860008
	s_mov_b32 s0, 0xaaaaaaab                                   // 000000002380: BE8000FF AAAAAAAB
	v_mul_hi_u32 v1, v2, s0                                    // 000000002388: D2860001 00000102
	v_lshrrev_b32_e32 v3, 2, v1                                // 000000002390: 20060282
	v_mul_lo_u32 v1, v3, -6                                    // 000000002394: D2850001 00018D03
	s_branch BB0_15                                            // 00000000239C: BF82000A

00000000000023a0 BB0_14:
	s_mov_b32 s0, 0x24924925                                   // 0000000023A0: BE8000FF 24924925
	v_mul_hi_u32 v1, v2, s0                                    // 0000000023A8: D2860001 00000102
	v_subrev_u32_e32 v3, vcc, v1, v2                           // 0000000023B0: 36060501
	v_lshrrev_b32_e32 v3, 1, v3                                // 0000000023B4: 20060681
	v_add_u32_e32 v1, vcc, v1, v3                              // 0000000023B8: 32020701
	v_lshrrev_b32_e32 v3, 2, v1                                // 0000000023BC: 20060282
	v_mul_lo_u32 v1, v3, -7                                    // 0000000023C0: D2850001 00018F03

00000000000023c8 BB0_15:
	v_add_u32_e32 v1, vcc, v1, v2                              // 0000000023C8: 32020501

00000000000023cc BB0_16:
	v_or_b32_e32 v1, s2, v1                                    // 0000000023CC: 28020202
	v_mov_b32_e32 v2, v3                                       // 0000000023D0: 7E040303

00000000000023d4 BB0_17:
	v_cvt_f32_u32_e32 v4, s28                                  // 0000000023D4: 7E080C1C
	v_lshlrev_b32_e32 v17, 6, v1                               // 0000000023D8: 24220286
	v_lshrrev_b32_e32 v19, 6, v0                               // 0000000023DC: 20260086
	v_lshlrev_b32_e32 v16, 6, v2                               // 0000000023E0: 24200486
	v_rcp_iflag_f32_e32 v4, v4                                 // 0000000023E4: 7E084704
	v_and_b32_e32 v3, 63, v0                                   // 0000000023E8: 260600BF
	v_lshrrev_b32_e32 v9, 2, v0                                // 0000000023EC: 20120082
	v_or_b32_e32 v3, v16, v3                                   // 0000000023F0: 28060710
	v_mul_f32_e32 v4, 0x4f800000, v4                           // 0000000023F4: 0A0808FF 4F800000
	v_cvt_u32_f32_e32 v4, v4                                   // 0000000023FC: 7E080F04
	v_and_b32_e32 v18, 3, v0                                   // 000000002400: 26240083
	v_mov_b32_e32 v24, 0                                       // 000000002404: 7E300280
	v_and_b32_e32 v2, s30, v2                                  // 000000002408: 2604041E
	v_mul_lo_u32 v5, v4, s28                                   // 00000000240C: D2850005 00003904
	v_mul_hi_u32 v6, v4, s28                                   // 000000002414: D2860006 00003904
	s_mov_b32 s9, 0                                            // 00000000241C: BE890080
	s_mov_b32 s8, s22                                          // 000000002420: BE880016
	v_sub_u32_e32 v7, vcc, 0, v5                               // 000000002424: 340E0A80
	v_cmp_eq_u32_e64 s[0:1], 0, v6                             // 000000002428: D0CA0000 00020C80
	v_cndmask_b32_e64 v5, v5, v7, s[0:1]                       // 000000002430: D1000005 00020F05
	v_mul_hi_u32 v5, v5, v4                                    // 000000002438: D2860005 00020905
	v_lshlrev_b32_e32 v25, 4, v2                               // 000000002440: 24320484
	v_alignbit_b32 v2, 0, s22, 30                              // 000000002444: D1CE0002 02782C80
	v_mul_lo_u32 v2, v2, v25                                   // 00000000244C: D2850002 00023302
	v_add_u32_e32 v1, vcc, v5, v4                              // 000000002454: 32020905
	v_subrev_u32_e32 v4, vcc, v5, v4                           // 000000002458: 36080905
	v_cndmask_b32_e64 v1, v4, v1, s[0:1]                       // 00000000245C: D1000001 00020304
	v_mul_hi_u32 v1, v1, s10                                   // 000000002464: D2860001 00001501
	v_or_b32_e32 v4, v17, v9                                   // 00000000246C: 28081311
	v_mov_b32_e32 v26, v24                                     // 000000002470: 7E340318
	s_lshr_b32 s4, s29, 2                                      // 000000002474: 8F04821D
	v_mul_lo_u32 v1, v1, s28                                   // 000000002478: D2850001 00003901
	s_mov_b32 m0, -1                                           // 000000002480: BEFC00C1
	v_sub_u32_e32 v5, vcc, s10, v1                             // 000000002484: 340A020A
	v_cmp_ge_u32_e64 s[2:3], s10, v1                           // 000000002488: D0CE0002 0002020A
	v_cmp_le_u32_e64 s[0:1], s28, v5                           // 000000002490: D0CB0000 00020A1C
	v_add_u32_e32 v6, vcc, s28, v5                             // 000000002498: 320C0A1C
	v_subrev_u32_e32 v1, vcc, s28, v5                          // 00000000249C: 36020A1C
	s_and_b64 vcc, s[0:1], s[2:3]                              // 0000000024A0: 86EA0200
	v_cndmask_b32_e32 v1, v5, v1, vcc                          // 0000000024A4: 00020305
	v_cndmask_b32_e64 v1, v6, v1, s[2:3]                       // 0000000024A8: D1000001 000A0306
	v_mul_lo_u32 v5, v19, s22                                  // 0000000024B0: D2850005 00002D13
	v_mul_lo_u32 v6, v1, s23                                   // 0000000024B8: D2850006 00002F01
	s_add_i32 s0, s26, -1                                      // 0000000024C0: 8100C11A
	v_min_u32_e32 v3, s0, v3                                   // 0000000024C4: 1C060600
	s_add_i32 s0, s27, -1                                      // 0000000024C8: 8100C11B
	v_add_u32_e32 v5, vcc, v6, v5                              // 0000000024CC: 320A0B06
	v_add_u32_e32 v23, vcc, v5, v3                             // 0000000024D0: 322E0705
	v_min_u32_e32 v4, s0, v4                                   // 0000000024D4: 1C080800
	v_mul_lo_u32 v3, v1, s25                                   // 0000000024D8: D2850003 00003301
	v_mul_lo_u32 v4, v4, s24                                   // 0000000024E0: D2850004 00003104
	s_lshl_b64 s[2:3], s[8:9], 2                               // 0000000024E8: 8E828208
	v_lshlrev_b64 v[5:6], 2, v[23:24]                          // 0000000024EC: D28F0005 00022E82
	v_add_u32_e32 v3, vcc, v3, v18                             // 0000000024F4: 32062503
	v_add_u32_e32 v3, vcc, v3, v4                              // 0000000024F8: 32060903
	v_mov_b32_e32 v4, v24                                      // 0000000024FC: 7E080318
	v_lshlrev_b64 v[7:8], 2, v[3:4]                            // 000000002500: D28F0007 00020682
	v_lshlrev_b32_e32 v3, 6, v18                               // 000000002508: 24062486
	v_mul_hi_u32 v4, s2, v25                                   // 00000000250C: D2860004 00023202
	v_or_b32_e32 v3, v3, v9                                    // 000000002514: 28061303
	v_mul_lo_u32 v9, s2, v25                                   // 000000002518: D2850009 00023202
	v_or_b32_e32 v30, 0x100, v3                                // 000000002520: 283C06FF 00000100
	v_add_u32_e32 v10, vcc, v4, v2                             // 000000002528: 32140504
	v_mov_b32_e32 v2, s37                                      // 00000000252C: 7E040225
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 000000002530: D28F0009 00021282
	s_cmp_lt_u32 s29, 4                                        // 000000002538: BF0A841D
	v_add_u32_e32 v4, vcc, s36, v9                             // 00000000253C: 32081224
	v_addc_u32_e32 v2, vcc, v10, v2, vcc                       // 000000002540: 3804050A
	v_add_u32_e32 v28, vcc, v4, v5                             // 000000002544: 32380B04
	v_lshlrev_b64 v[4:5], 4, v[25:26]                          // 000000002548: D28F0004 00023284
	v_addc_u32_e32 v29, vcc, v2, v6, vcc                       // 000000002550: 383A0D02
	v_mov_b32_e32 v2, s35                                      // 000000002554: 7E040223
	v_add_u32_e32 v4, vcc, s34, v4                             // 000000002558: 32080822
	v_addc_u32_e32 v2, vcc, v5, v2, vcc                        // 00000000255C: 38040505
	v_add_u32_e32 v26, vcc, v4, v7                             // 000000002560: 32340F04
	v_addc_u32_e32 v27, vcc, v2, v8, vcc                       // 000000002564: 38361102
	s_cbranch_scc1 BB0_21                                      // 000000002568: BF8500FC
	flat_load_dword v4, v[26:27]                               // 00000000256C: DC500000 0400001A
	flat_load_dword v5, v[28:29]                               // 000000002574: DC500000 0500001C
	v_lshlrev_b32_e32 v7, 2, v0                                // 00000000257C: 240E0082
	v_lshlrev_b32_e32 v6, 2, v3                                // 000000002580: 240C0682
	v_lshlrev_b32_e32 v8, 2, v12                               // 000000002584: 24101882
	s_movk_i32 s10, 0x480                                      // 000000002588: B00A0480
	s_movk_i32 s5, 0x400                                       // 00000000258C: B0050400
	s_mul_i32 s0, s3, s4                                       // 000000002590: 92000403
	v_lshlrev_b32_e32 v9, 2, v11                               // 000000002594: 24121682
	s_lshl_b64 s[6:7], s[2:3], 2                               // 000000002598: 8E868202
	s_mul_i32 s1, s2, s4                                       // 00000000259C: 92010402
	v_add_u32_e32 v10, vcc, s10, v8                            // 0000000025A0: 3214100A
	s_and_b32 s8, s29, -4                                      // 0000000025A4: 8608C41D
	v_or_b32_e32 v2, 1, v25                                    // 0000000025A8: 28043281
	s_sub_u32 s10, 0, s8                                       // 0000000025AC: 808A0880
	s_subb_u32 s11, 0, 0                                       // 0000000025B0: 828B8080
	s_lshl_b64 s[8:9], s[8:9], 2                               // 0000000025B4: 8E888208
	v_or_b32_e32 v0, 0x200, v0                                 // 0000000025B8: 280000FF 00000200
	v_or_b32_e32 v30, 0x300, v3                                // 0000000025C0: 283C06FF 00000300
	v_or_b32_e32 v35, 0x100, v9                                // 0000000025C8: 284612FF 00000100
	v_or_b32_e32 v32, 0x500, v8                                // 0000000025D0: 284010FF 00000500
	s_cmp_lt_u32 s29, 8                                        // 0000000025D8: BF0A881D
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000025DC: BF8C0070
	ds_write_b32 v7, v5                                        // 0000000025E0: D81A0000 00000507
	ds_write_b32 v6, v4 offset:1024                            // 0000000025E8: D81A0400 00000406
	s_waitcnt lgkmcnt(0)                                       // 0000000025F0: BF8C007F
	s_barrier                                                  // 0000000025F4: BF8A0000
	v_mov_b32_e32 v4, s4                                       // 0000000025F8: 7E080204
	v_mul_hi_u32 v4, s2, v4                                    // 0000000025FC: D2860004 00020802
	v_add_u32_e32 v6, vcc, s5, v8                              // 000000002604: 320C1005
	s_waitcnt lgkmcnt(0)                                       // 000000002608: BF8C007F
	ds_read2_b32 v[37:38], v9 offset1:16                       // 00000000260C: D86E1000 25000009
	v_add_u32_e32 v5, vcc, s0, v4                              // 000000002614: 320A0800
	v_mov_b32_e32 v4, s1                                       // 000000002618: 7E080201
	ds_read2_b32 v[39:40], v6 offset1:16                       // 00000000261C: D86E1000 27000006
	v_mov_b32_e32 v6, s7                                       // 000000002624: 7E0C0207
	v_add_u32_e32 v13, vcc, s6, v28                            // 000000002628: 321A3806
	v_addc_u32_e32 v15, vcc, v29, v6, vcc                      // 00000000262C: 381E0D1D
	v_lshlrev_b64 v[6:7], 2, v[4:5]                            // 000000002630: D28F0006 00020882
	v_sub_u32_e64 v33, s[0:1], 0, s1                           // 000000002638: D11A0021 00000280
	v_sub_u32_e32 v4, vcc, v13, v6                             // 000000002640: 34080D0D
	v_subb_u32_e32 v6, vcc, v15, v7, vcc                       // 000000002644: 3A0C0F0F
	v_subb_u32_e64 v34, s[0:1], 0, v5, s[0:1]                  // 000000002648: D11D0022 00020A80
	v_cmp_eq_u32_e32 vcc, s4, v2                               // 000000002650: 7D940404
	ds_read2_b32 v[41:42], v9 offset0:32 offset1:48            // 000000002654: D86E3020 29000009
	v_add_u32_e64 v2, s[0:1], 16, v26                          // 00000000265C: D1190002 00023490
	ds_read2_b32 v[43:44], v10 offset1:16                      // 000000002664: D86E1000 2B00000A
	v_cndmask_b32_e32 v28, v13, v4, vcc                        // 00000000266C: 0038090D
	v_addc_u32_e64 v4, s[0:1], 0, v27, s[0:1]                  // 000000002670: D11C0004 00023680
	v_cndmask_b32_e32 v29, v15, v6, vcc                        // 000000002678: 003A0D0F
	v_subrev_u32_e64 v6, s[0:1], s8, v2                        // 00000000267C: D11B0006 00020408
	v_mov_b32_e32 v5, s9                                       // 000000002684: 7E0A0209
	v_subb_u32_e64 v5, s[0:1], v4, v5, s[0:1]                  // 000000002688: D11D0005 00020B04
	v_cndmask_b32_e32 v26, v2, v6, vcc                         // 000000002690: 00340D02
	v_cndmask_b32_e32 v27, v4, v5, vcc                         // 000000002694: 00360B04
	v_mov_b32_e32 v2, 0                                        // 000000002698: 7E040280
	s_cbranch_scc1 BB0_22                                      // 00000000269C: BF8500C0
	v_mov_b32_e32 v2, 0                                        // 0000000026A0: 7E040280
	s_lshl_b64 s[0:1], s[10:11], 2                             // 0000000026A4: 8E80820A
	v_add_u32_e32 v36, vcc, 2, v25                             // 0000000026A8: 32483282
	s_movk_i32 s5, 0x200                                       // 0000000026AC: B0050200
	s_movk_i32 s8, 0x3ff                                       // 0000000026B0: B00803FF
	s_movk_i32 s9, 0x100                                       // 0000000026B4: B0090100
	s_mov_b32 s10, s4                                          // 0000000026B8: BE8A0004
	v_mov_b32_e32 v3, v2                                       // 0000000026BC: 7E060302
	v_mov_b32_e32 v4, v2                                       // 0000000026C0: 7E080302
	v_mov_b32_e32 v5, v2                                       // 0000000026C4: 7E0A0302
	v_mov_b32_e32 v6, v2                                       // 0000000026C8: 7E0C0302
	v_mov_b32_e32 v7, v2                                       // 0000000026CC: 7E0E0302
	v_mov_b32_e32 v8, v2                                       // 0000000026D0: 7E100302
	v_mov_b32_e32 v9, v2                                       // 0000000026D4: 7E120302
	v_mov_b32_e32 v10, v2                                      // 0000000026D8: 7E140302
	v_mov_b32_e32 v13, v2                                      // 0000000026DC: 7E1A0302
	v_mov_b32_e32 v15, v2                                      // 0000000026E0: 7E1E0302
	v_mov_b32_e32 v22, v2                                      // 0000000026E4: 7E2C0302
	v_mov_b32_e32 v21, v2                                      // 0000000026E8: 7E2A0302
	v_mov_b32_e32 v20, v2                                      // 0000000026EC: 7E280302
	v_mov_b32_e32 v23, v2                                      // 0000000026F0: 7E2E0302
	v_mov_b32_e32 v31, v11                                     // 0000000026F4: 7E3E030B
	v_mov_b32_e32 v24, v2                                      // 0000000026F8: 7E300302

00000000000026fc BB0_20:
	flat_load_dword v47, v[26:27]                              // 0000000026FC: DC500000 2F00001A
	flat_load_dword v48, v[28:29]                              // 000000002704: DC500000 3000001C
	ds_read2_b32 v[45:46], v35 offset1:16                      // 00000000270C: D86E1000 2D000023
	s_waitcnt lgkmcnt(4)                                       // 000000002714: BF8C047F
	v_mac_f32_e32 v24, v37, v39                                // 000000002718: 2C304F25
	v_mac_f32_e32 v23, v38, v39                                // 00000000271C: 2C2E4F26
	v_mac_f32_e32 v20, v41, v39                                // 000000002720: 2C284F29
	v_mac_f32_e32 v21, v42, v39                                // 000000002724: 2C2A4F2A
	v_mac_f32_e32 v22, v37, v40                                // 000000002728: 2C2C5125
	v_mac_f32_e32 v15, v38, v40                                // 00000000272C: 2C1E5126
	v_mac_f32_e32 v13, v41, v40                                // 000000002730: 2C1A5129
	v_mac_f32_e32 v10, v42, v40                                // 000000002734: 2C14512A
	ds_read2_b32 v[39:40], v32 offset1:16                      // 000000002738: D86E1000 27000020
	s_waitcnt lgkmcnt(4)                                       // 000000002740: BF8C047F
	v_mac_f32_e32 v9, v37, v43                                 // 000000002744: 2C125725
	v_mac_f32_e32 v8, v38, v43                                 // 000000002748: 2C105726
	v_mac_f32_e32 v7, v41, v43                                 // 00000000274C: 2C0E5729
	v_mac_f32_e32 v6, v42, v43                                 // 000000002750: 2C0C572A
	v_mac_f32_e32 v5, v37, v44                                 // 000000002754: 2C0A5925
	v_mac_f32_e32 v4, v38, v44                                 // 000000002758: 2C085926
	ds_read2_b32 v[37:38], v35 offset0:32 offset1:48           // 00000000275C: D86E3020 25000023
	v_mac_f32_e32 v3, v41, v44                                 // 000000002764: 2C065929
	v_mac_f32_e32 v2, v42, v44                                 // 000000002768: 2C04592A
	ds_read2_b32 v[41:42], v32 offset0:32 offset1:48           // 00000000276C: D86E3020 29000020
	ds_read2_b32 v[43:44], v35 offset0:64 offset1:80           // 000000002774: D86E5040 2B000023
	s_waitcnt lgkmcnt(3)                                       // 00000000277C: BF8C037F
	v_mac_f32_e32 v24, v45, v39                                // 000000002780: 2C304F2D
	v_mac_f32_e32 v23, v46, v39                                // 000000002784: 2C2E4F2E
	s_waitcnt lgkmcnt(2)                                       // 000000002788: BF8C027F
	v_mac_f32_e32 v20, v37, v39                                // 00000000278C: 2C284F25
	v_mac_f32_e32 v21, v38, v39                                // 000000002790: 2C2A4F26
	v_mac_f32_e32 v22, v45, v40                                // 000000002794: 2C2C512D
	v_mac_f32_e32 v15, v46, v40                                // 000000002798: 2C1E512E
	v_mac_f32_e32 v13, v37, v40                                // 00000000279C: 2C1A5125
	v_mac_f32_e32 v10, v38, v40                                // 0000000027A0: 2C145126
	ds_read2_b32 v[39:40], v32 offset0:64 offset1:80           // 0000000027A4: D86E5040 27000020
	s_waitcnt lgkmcnt(2)                                       // 0000000027AC: BF8C027F
	v_mac_f32_e32 v9, v45, v41                                 // 0000000027B0: 2C12532D
	v_mac_f32_e32 v8, v46, v41                                 // 0000000027B4: 2C10532E
	v_mac_f32_e32 v5, v45, v42                                 // 0000000027B8: 2C0A552D
	v_mac_f32_e32 v4, v46, v42                                 // 0000000027BC: 2C08552E
	ds_read2_b32 v[45:46], v35 offset0:96 offset1:112          // 0000000027C0: D86E7060 2D000023
	v_mac_f32_e32 v7, v37, v41                                 // 0000000027C8: 2C0E5325
	v_mac_f32_e32 v6, v38, v41                                 // 0000000027CC: 2C0C5326
	v_mac_f32_e32 v3, v37, v42                                 // 0000000027D0: 2C065525
	v_mac_f32_e32 v2, v38, v42                                 // 0000000027D4: 2C045526
	ds_read2_b32 v[37:38], v32 offset0:96 offset1:112          // 0000000027D8: D86E7060 25000020
	v_lshlrev_b32_e32 v49, 2, v0                               // 0000000027E0: 24620082
	v_lshlrev_b32_e32 v50, 2, v30                              // 0000000027E4: 24643C82
	ds_read2_b32 v[41:42], v35 offset0:128 offset1:144         // 0000000027E8: D86E9080 29000023
	s_waitcnt lgkmcnt(3)                                       // 0000000027F0: BF8C037F
	v_mac_f32_e32 v24, v43, v39                                // 0000000027F4: 2C304F2B
	v_mac_f32_e32 v23, v44, v39                                // 0000000027F8: 2C2E4F2C
	s_waitcnt lgkmcnt(2)                                       // 0000000027FC: BF8C027F
	v_mac_f32_e32 v20, v45, v39                                // 000000002800: 2C284F2D
	v_mac_f32_e32 v21, v46, v39                                // 000000002804: 2C2A4F2E
	v_mac_f32_e32 v22, v43, v40                                // 000000002808: 2C2C512B
	v_mac_f32_e32 v15, v44, v40                                // 00000000280C: 2C1E512C
	v_mac_f32_e32 v13, v45, v40                                // 000000002810: 2C1A512D
	v_mac_f32_e32 v10, v46, v40                                // 000000002814: 2C14512E
	s_waitcnt lgkmcnt(1)                                       // 000000002818: BF8C017F
	v_mac_f32_e32 v9, v43, v37                                 // 00000000281C: 2C124B2B
	v_mac_f32_e32 v8, v44, v37                                 // 000000002820: 2C104B2C
	v_mac_f32_e32 v5, v43, v38                                 // 000000002824: 2C0A4D2B
	v_mac_f32_e32 v4, v44, v38                                 // 000000002828: 2C084D2C
	ds_read2_b32 v[39:40], v32 offset0:128 offset1:144         // 00000000282C: D86E9080 27000020
	ds_read2_b32 v[43:44], v35 offset0:160 offset1:176         // 000000002834: D86EB0A0 2B000023
	v_mac_f32_e32 v7, v45, v37                                 // 00000000283C: 2C0E4B2D
	v_mac_f32_e32 v6, v46, v37                                 // 000000002840: 2C0C4B2E
	v_mac_f32_e32 v3, v45, v38                                 // 000000002844: 2C064D2D
	v_mac_f32_e32 v2, v46, v38                                 // 000000002848: 2C044D2E
	ds_read2_b32 v[37:38], v32 offset0:160 offset1:176         // 00000000284C: D86EB0A0 25000020
	v_add_u32_e32 v31, vcc, s5, v31                            // 000000002854: 323E3E05
	v_add_u32_e32 v14, vcc, s5, v14                            // 000000002858: 321C1C05
	v_add_u32_e32 v26, vcc, 16, v26                            // 00000000285C: 32343490
	v_addc_u32_e32 v27, vcc, 0, v27, vcc                       // 000000002860: 38363680
	v_mov_b32_e32 v51, s7                                      // 000000002864: 7E660207
	v_add_u32_e32 v28, vcc, s6, v28                            // 000000002868: 32383806
	v_lshlrev_b64 v[45:46], 2, v[33:34]                        // 00000000286C: D28F002D 00024282
	v_addc_u32_e32 v29, vcc, v29, v51, vcc                     // 000000002874: 383A671D
	v_add_u32_e32 v0, vcc, s5, v0                              // 000000002878: 32000005
	v_add_u32_e32 v30, vcc, s5, v30                            // 00000000287C: 323C3C05
	v_add_u32_e32 v35, vcc, v28, v45                           // 000000002880: 32465B1C
	v_addc_u32_e32 v45, vcc, v29, v46, vcc                     // 000000002884: 385A5D1D
	v_mov_b32_e32 v32, s1                                      // 000000002888: 7E400201
	v_add_u32_e32 v46, vcc, s0, v26                            // 00000000288C: 325C3400
	v_addc_u32_e32 v32, vcc, v27, v32, vcc                     // 000000002890: 3840411B
	v_cmp_eq_u32_e32 vcc, s10, v36                             // 000000002894: 7D94480A
	v_and_b32_e32 v14, s8, v14                                 // 000000002898: 261C1C08
	s_waitcnt vmcnt(0)                                         // 00000000289C: BF8C0F70
	ds_write_b32 v49, v48                                      // 0000000028A0: D81A0000 00003031
	ds_write_b32 v50, v47                                      // 0000000028A8: D81A0000 00002F32
	s_waitcnt lgkmcnt(0)                                       // 0000000028B0: BF8C007F
	s_barrier                                                  // 0000000028B4: BF8A0000
	v_and_b32_e32 v31, s8, v31                                 // 0000000028B8: 263E3E08
	v_cndmask_b32_e32 v29, v29, v45, vcc                       // 0000000028BC: 003A5B1D
	v_lshlrev_b32_e32 v45, 2, v31                              // 0000000028C0: 245A3E82
	v_lshlrev_b32_e32 v51, 2, v14                              // 0000000028C4: 24661C82
	v_mac_f32_e32 v24, v41, v39                                // 0000000028C8: 2C304F29
	v_mac_f32_e32 v23, v42, v39                                // 0000000028CC: 2C2E4F2A
	v_mac_f32_e32 v20, v43, v39                                // 0000000028D0: 2C284F2B
	v_mac_f32_e32 v21, v44, v39                                // 0000000028D4: 2C2A4F2C
	v_mac_f32_e32 v22, v41, v40                                // 0000000028D8: 2C2C5129
	v_mac_f32_e32 v15, v42, v40                                // 0000000028DC: 2C1E512A
	v_mac_f32_e32 v13, v43, v40                                // 0000000028E0: 2C1A512B
	v_mac_f32_e32 v10, v44, v40                                // 0000000028E4: 2C14512C
	v_mac_f32_e32 v9, v41, v37                                 // 0000000028E8: 2C124B29
	v_mac_f32_e32 v8, v42, v37                                 // 0000000028EC: 2C104B2A
	v_mac_f32_e32 v5, v41, v38                                 // 0000000028F0: 2C0A4D29
	v_mac_f32_e32 v4, v42, v38                                 // 0000000028F4: 2C084D2A
	v_mac_f32_e32 v7, v43, v37                                 // 0000000028F8: 2C0E4B2B
	v_mac_f32_e32 v6, v44, v37                                 // 0000000028FC: 2C0C4B2C
	v_mac_f32_e32 v3, v43, v38                                 // 000000002900: 2C064D2B
	v_mac_f32_e32 v2, v44, v38                                 // 000000002904: 2C044D2C
	s_waitcnt lgkmcnt(0)                                       // 000000002908: BF8C007F
	ds_read2_b32 v[37:38], v45 offset1:16                      // 00000000290C: D86E1000 2500002D
	ds_read2_b32 v[41:42], v45 offset0:32 offset1:48           // 000000002914: D86E3020 2900002D
	ds_read2_b32 v[39:40], v51 offset1:16                      // 00000000291C: D86E1000 27000033
	ds_read2_b32 v[43:44], v51 offset0:32 offset1:48           // 000000002924: D86E3020 2B000033
	s_add_i32 s11, s10, -1                                     // 00000000292C: 810BC10A
	v_and_b32_e32 v0, s8, v0                                   // 000000002930: 26000008
	v_and_b32_e32 v30, s8, v30                                 // 000000002934: 263C3C08
	s_mov_b32 s10, s11                                         // 000000002938: BE8A000B
	v_cndmask_b32_e32 v28, v28, v35, vcc                       // 00000000293C: 0038471C
	v_cndmask_b32_e32 v27, v27, v32, vcc                       // 000000002940: 0036411B
	v_cndmask_b32_e32 v26, v26, v46, vcc                       // 000000002944: 00345D1A
	v_add_u32_e32 v35, vcc, s9, v45                            // 000000002948: 32465A09
	v_add_u32_e32 v32, vcc, s9, v51                            // 00000000294C: 32406609
	s_cmp_gt_u32 s11, 1                                        // 000000002950: BF08810B
	s_cbranch_scc1 BB0_20                                      // 000000002954: BF85FF69
	s_branch BB0_23                                            // 000000002958: BF820021

000000000000295c BB0_21:
	v_mov_b32_e32 v31, v11                                     // 00000000295C: 7E3E030B
	v_mov_b32_e32 v23, v24                                     // 000000002960: 7E2E0318
	v_mov_b32_e32 v20, v24                                     // 000000002964: 7E280318
	v_mov_b32_e32 v21, v24                                     // 000000002968: 7E2A0318
	v_mov_b32_e32 v22, v24                                     // 00000000296C: 7E2C0318
	v_mov_b32_e32 v15, v24                                     // 000000002970: 7E1E0318
	v_mov_b32_e32 v13, v24                                     // 000000002974: 7E1A0318
	v_mov_b32_e32 v10, v24                                     // 000000002978: 7E140318
	v_mov_b32_e32 v9, v24                                      // 00000000297C: 7E120318
	v_mov_b32_e32 v8, v24                                      // 000000002980: 7E100318
	v_mov_b32_e32 v7, v24                                      // 000000002984: 7E0E0318
	v_mov_b32_e32 v6, v24                                      // 000000002988: 7E0C0318
	v_mov_b32_e32 v5, v24                                      // 00000000298C: 7E0A0318
	v_mov_b32_e32 v4, v24                                      // 000000002990: 7E080318
	v_mov_b32_e32 v3, v24                                      // 000000002994: 7E060318
	v_mov_b32_e32 v2, v24                                      // 000000002998: 7E040318
	s_branch BB0_24                                            // 00000000299C: BF820073

00000000000029a0 BB0_22:
	v_mov_b32_e32 v3, v2                                       // 0000000029A0: 7E060302
	v_mov_b32_e32 v4, v2                                       // 0000000029A4: 7E080302
	v_mov_b32_e32 v5, v2                                       // 0000000029A8: 7E0A0302
	v_mov_b32_e32 v6, v2                                       // 0000000029AC: 7E0C0302
	v_mov_b32_e32 v7, v2                                       // 0000000029B0: 7E0E0302
	v_mov_b32_e32 v8, v2                                       // 0000000029B4: 7E100302
	v_mov_b32_e32 v9, v2                                       // 0000000029B8: 7E120302
	v_mov_b32_e32 v10, v2                                      // 0000000029BC: 7E140302
	v_mov_b32_e32 v13, v2                                      // 0000000029C0: 7E1A0302
	v_mov_b32_e32 v15, v2                                      // 0000000029C4: 7E1E0302
	v_mov_b32_e32 v22, v2                                      // 0000000029C8: 7E2C0302
	v_mov_b32_e32 v21, v2                                      // 0000000029CC: 7E2A0302
	v_mov_b32_e32 v20, v2                                      // 0000000029D0: 7E280302
	v_mov_b32_e32 v23, v2                                      // 0000000029D4: 7E2E0302
	v_mov_b32_e32 v24, v2                                      // 0000000029D8: 7E300302
	v_mov_b32_e32 v31, v11                                     // 0000000029DC: 7E3E030B

00000000000029e0 BB0_23:
	s_waitcnt lgkmcnt(1)                                       // 0000000029E0: BF8C017F
	v_mac_f32_e32 v24, v37, v39                                // 0000000029E4: 2C304F25
	v_mac_f32_e32 v23, v38, v39                                // 0000000029E8: 2C2E4F26
	v_mac_f32_e32 v20, v41, v39                                // 0000000029EC: 2C284F29
	v_mac_f32_e32 v21, v42, v39                                // 0000000029F0: 2C2A4F2A
	v_mac_f32_e32 v22, v37, v40                                // 0000000029F4: 2C2C5125
	v_mac_f32_e32 v15, v38, v40                                // 0000000029F8: 2C1E5126
	s_waitcnt lgkmcnt(0)                                       // 0000000029FC: BF8C007F
	v_mac_f32_e32 v9, v37, v43                                 // 000000002A00: 2C125725
	v_mac_f32_e32 v5, v37, v44                                 // 000000002A04: 2C0A5925
	ds_read2_b32 v[33:34], v35 offset1:16                      // 000000002A08: D86E1000 21000023
	ds_read2_b32 v[36:37], v32 offset1:16                      // 000000002A10: D86E1000 24000020
	v_mac_f32_e32 v8, v38, v43                                 // 000000002A18: 2C105726
	v_mac_f32_e32 v4, v38, v44                                 // 000000002A1C: 2C085926
	ds_read2_b32 v[38:39], v35 offset0:32 offset1:48           // 000000002A20: D86E3020 26000023
	v_mac_f32_e32 v13, v41, v40                                // 000000002A28: 2C1A5129
	v_mac_f32_e32 v10, v42, v40                                // 000000002A2C: 2C14512A
	s_waitcnt lgkmcnt(1)                                       // 000000002A30: BF8C017F
	v_mac_f32_e32 v24, v33, v36                                // 000000002A34: 2C304921
	v_mac_f32_e32 v23, v34, v36                                // 000000002A38: 2C2E4922
	s_waitcnt lgkmcnt(0)                                       // 000000002A3C: BF8C007F
	v_mac_f32_e32 v20, v38, v36                                // 000000002A40: 2C284926
	v_mac_f32_e32 v21, v39, v36                                // 000000002A44: 2C2A4927
	v_mac_f32_e32 v22, v33, v37                                // 000000002A48: 2C2C4B21
	v_mac_f32_e32 v15, v34, v37                                // 000000002A4C: 2C1E4B22
	v_mac_f32_e32 v13, v38, v37                                // 000000002A50: 2C1A4B26
	v_mac_f32_e32 v10, v39, v37                                // 000000002A54: 2C144B27
	ds_read2_b32 v[36:37], v32 offset0:32 offset1:48           // 000000002A58: D86E3020 24000020
	v_mac_f32_e32 v7, v41, v43                                 // 000000002A60: 2C0E5729
	v_mac_f32_e32 v6, v42, v43                                 // 000000002A64: 2C0C572A
	v_mac_f32_e32 v3, v41, v44                                 // 000000002A68: 2C065929
	v_mac_f32_e32 v2, v42, v44                                 // 000000002A6C: 2C04592A
	s_waitcnt lgkmcnt(0)                                       // 000000002A70: BF8C007F
	v_mac_f32_e32 v9, v33, v36                                 // 000000002A74: 2C124921
	v_mac_f32_e32 v8, v34, v36                                 // 000000002A78: 2C104922
	v_mac_f32_e32 v5, v33, v37                                 // 000000002A7C: 2C0A4B21
	v_mac_f32_e32 v4, v34, v37                                 // 000000002A80: 2C084B22
	v_mac_f32_e32 v7, v38, v36                                 // 000000002A84: 2C0E4926
	v_mac_f32_e32 v6, v39, v36                                 // 000000002A88: 2C0C4927
	v_mac_f32_e32 v3, v38, v37                                 // 000000002A8C: 2C064B26
	v_mac_f32_e32 v2, v39, v37                                 // 000000002A90: 2C044B27
	ds_read2_b32 v[33:34], v35 offset0:64 offset1:80           // 000000002A94: D86E5040 21000023
	ds_read2_b32 v[36:37], v32 offset0:64 offset1:80           // 000000002A9C: D86E5040 24000020
	ds_read2_b32 v[38:39], v35 offset0:96 offset1:112          // 000000002AA4: D86E7060 26000023
	s_waitcnt lgkmcnt(1)                                       // 000000002AAC: BF8C017F
	v_mac_f32_e32 v24, v33, v36                                // 000000002AB0: 2C304921
	v_mac_f32_e32 v23, v34, v36                                // 000000002AB4: 2C2E4922
	s_waitcnt lgkmcnt(0)                                       // 000000002AB8: BF8C007F
	v_mac_f32_e32 v20, v38, v36                                // 000000002ABC: 2C284926
	v_mac_f32_e32 v21, v39, v36                                // 000000002AC0: 2C2A4927
	v_mac_f32_e32 v22, v33, v37                                // 000000002AC4: 2C2C4B21
	v_mac_f32_e32 v15, v34, v37                                // 000000002AC8: 2C1E4B22
	v_mac_f32_e32 v13, v38, v37                                // 000000002ACC: 2C1A4B26
	v_mac_f32_e32 v10, v39, v37                                // 000000002AD0: 2C144B27
	ds_read2_b32 v[36:37], v32 offset0:96 offset1:112          // 000000002AD4: D86E7060 24000020
	s_waitcnt lgkmcnt(0)                                       // 000000002ADC: BF8C007F
	v_mac_f32_e32 v9, v33, v36                                 // 000000002AE0: 2C124921
	v_mac_f32_e32 v8, v34, v36                                 // 000000002AE4: 2C104922
	v_mac_f32_e32 v5, v33, v37                                 // 000000002AE8: 2C0A4B21
	v_mac_f32_e32 v4, v34, v37                                 // 000000002AEC: 2C084B22
	v_mac_f32_e32 v7, v38, v36                                 // 000000002AF0: 2C0E4926
	v_mac_f32_e32 v6, v39, v36                                 // 000000002AF4: 2C0C4927
	v_mac_f32_e32 v3, v38, v37                                 // 000000002AF8: 2C064B26
	v_mac_f32_e32 v2, v39, v37                                 // 000000002AFC: 2C044B27
	ds_read2_b32 v[33:34], v35 offset0:128 offset1:144         // 000000002B00: D86E9080 21000023
	ds_read2_b32 v[36:37], v32 offset0:128 offset1:144         // 000000002B08: D86E9080 24000020
	ds_read2_b32 v[38:39], v35 offset0:160 offset1:176         // 000000002B10: D86EB0A0 26000023
	s_waitcnt lgkmcnt(1)                                       // 000000002B18: BF8C017F
	v_mac_f32_e32 v24, v33, v36                                // 000000002B1C: 2C304921
	v_mac_f32_e32 v23, v34, v36                                // 000000002B20: 2C2E4922
	s_waitcnt lgkmcnt(0)                                       // 000000002B24: BF8C007F
	v_mac_f32_e32 v20, v38, v36                                // 000000002B28: 2C284926
	v_mac_f32_e32 v21, v39, v36                                // 000000002B2C: 2C2A4927
	ds_read2_b32 v[35:36], v32 offset0:160 offset1:176         // 000000002B30: D86EB0A0 23000020
	v_mac_f32_e32 v22, v33, v37                                // 000000002B38: 2C2C4B21
	v_mac_f32_e32 v15, v34, v37                                // 000000002B3C: 2C1E4B22
	v_mac_f32_e32 v13, v38, v37                                // 000000002B40: 2C1A4B26
	v_mac_f32_e32 v10, v39, v37                                // 000000002B44: 2C144B27
	s_waitcnt lgkmcnt(0)                                       // 000000002B48: BF8C007F
	v_mac_f32_e32 v9, v33, v35                                 // 000000002B4C: 2C124721
	v_mac_f32_e32 v8, v34, v35                                 // 000000002B50: 2C104722
	v_mac_f32_e32 v5, v33, v36                                 // 000000002B54: 2C0A4921
	v_mac_f32_e32 v4, v34, v36                                 // 000000002B58: 2C084922
	v_mac_f32_e32 v7, v38, v35                                 // 000000002B5C: 2C0E4726
	v_mac_f32_e32 v6, v39, v35                                 // 000000002B60: 2C0C4727
	v_mac_f32_e32 v3, v38, v36                                 // 000000002B64: 2C064926
	v_mac_f32_e32 v2, v39, v36                                 // 000000002B68: 2C044927

0000000000002b6c BB0_24:
	s_and_b32 s0, s29, 3                                       // 000000002B6C: 8600831D
	v_sub_u32_e32 v32, vcc, s4, v25                            // 000000002B70: 34403204
	v_mov_b32_e32 v33, 0                                       // 000000002B74: 7E420280
	v_cmp_gt_u32_e32 vcc, s0, v19                              // 000000002B78: 7D982600
	v_mov_b32_e32 v19, v33                                     // 000000002B7C: 7E260321
	s_and_saveexec_b64 s[4:5], vcc                             // 000000002B80: BE84206A
	s_cbranch_execz BB0_26                                     // 000000002B84: BF88000D

0000000000002b88 BB0_25:
	v_mul_lo_u32 v19, s3, v32                                  // 000000002B88: D2850013 00024003
	v_mul_hi_u32 v25, s2, v32                                  // 000000002B90: D2860019 00024002
	v_mul_lo_u32 v34, s2, v32                                  // 000000002B98: D2850022 00024002
	v_add_u32_e32 v35, vcc, v25, v19                           // 000000002BA0: 32462719
	v_lshlrev_b64 v[34:35], 2, v[34:35]                        // 000000002BA4: D28F0022 00024482
	v_add_u32_e32 v28, vcc, v28, v34                           // 000000002BAC: 3238451C
	v_addc_u32_e32 v29, vcc, v29, v35, vcc                     // 000000002BB0: 383A471D
	flat_load_dword v19, v[28:29]                              // 000000002BB4: DC500000 1300001C

0000000000002bbc BB0_26:
	s_or_b64 exec, exec, s[4:5]                                // 000000002BBC: 87FE047E
	v_cmp_gt_u32_e32 vcc, s0, v18                              // 000000002BC0: 7D982400
	v_mov_b32_e32 v18, 0                                       // 000000002BC4: 7E240280
	s_and_saveexec_b64 s[2:3], vcc                             // 000000002BC8: BE82206A
	s_cbranch_execz BB0_28                                     // 000000002BCC: BF880006

0000000000002bd0 BB0_27:
	v_lshlrev_b64 v[28:29], 4, v[32:33]                        // 000000002BD0: D28F001C 00024084
	v_add_u32_e32 v25, vcc, v26, v28                           // 000000002BD8: 3232391A
	v_addc_u32_e32 v26, vcc, v27, v29, vcc                     // 000000002BDC: 38343B1B
	flat_load_dword v18, v[25:26]                              // 000000002BE0: DC500000 12000019

0000000000002be8 BB0_28:
	s_or_b64 exec, exec, s[2:3]                                // 000000002BE8: 87FE027E
	s_movk_i32 s1, 0x1ff                                       // 000000002BEC: B00101FF
	v_and_b32_e32 v0, s1, v0                                   // 000000002BF0: 26000001
	v_and_b32_e32 v25, s1, v30                                 // 000000002BF4: 26323C01
	v_lshlrev_b32_e32 v0, 2, v0                                // 000000002BF8: 24000082
	v_lshlrev_b32_e32 v25, 2, v25                              // 000000002BFC: 24323282
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002C00: BF8C0070
	s_barrier                                                  // 000000002C04: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002C08: BF8C007F
	ds_write_b32 v0, v19                                       // 000000002C0C: D81A0000 00001300
	ds_write_b32 v25, v18                                      // 000000002C14: D81A0000 00001219
	s_waitcnt lgkmcnt(0)                                       // 000000002C1C: BF8C007F
	s_barrier                                                  // 000000002C20: BF8A0000
	s_cmp_eq_u32 s0, 0                                         // 000000002C24: BF068000
	s_waitcnt lgkmcnt(0)                                       // 000000002C28: BF8C007F
	s_cbranch_scc1 BB0_31                                      // 000000002C2C: BF850025
	v_and_b32_e32 v0, s1, v14                                  // 000000002C30: 26001C01
	v_and_b32_e32 v14, s1, v31                                 // 000000002C34: 261C3E01
	v_mov_b32_e32 v18, s0                                      // 000000002C38: 7E240200
	v_lshlrev_b32_e32 v0, 2, v0                                // 000000002C3C: 24000082
	v_lshlrev_b32_e32 v14, 2, v14                              // 000000002C40: 241C1C82
	s_movk_i32 s0, 0x100                                       // 000000002C44: B0000100

0000000000002c48 BB0_30:
	ds_read2_b32 v[27:28], v0 offset1:16                       // 000000002C48: D86E1000 1B000000
	ds_read2_b32 v[29:30], v14 offset0:32 offset1:48           // 000000002C50: D86E3020 1D00000E
	ds_read2_b32 v[31:32], v0 offset0:32 offset1:48            // 000000002C58: D86E3020 1F000000
	ds_read2_b32 v[25:26], v14 offset1:16                      // 000000002C60: D86E1000 1900000E
	v_add_u32_e32 v18, vcc, -1, v18                            // 000000002C68: 322424C1
	v_add_u32_e32 v14, vcc, s0, v14                            // 000000002C6C: 321C1C00
	v_add_u32_e32 v0, vcc, s0, v0                              // 000000002C70: 32000000
	v_cmp_ne_u32_e32 vcc, 0, v18                               // 000000002C74: 7D9A2480
	s_and_b64 vcc, exec, vcc                                   // 000000002C78: 86EA6A7E
	s_waitcnt lgkmcnt(0)                                       // 000000002C7C: BF8C007F
	v_mac_f32_e32 v24, v25, v27                                // 000000002C80: 2C303719
	v_mac_f32_e32 v23, v26, v27                                // 000000002C84: 2C2E371A
	v_mac_f32_e32 v20, v29, v27                                // 000000002C88: 2C28371D
	v_mac_f32_e32 v21, v30, v27                                // 000000002C8C: 2C2A371E
	v_mac_f32_e32 v22, v25, v28                                // 000000002C90: 2C2C3919
	v_mac_f32_e32 v15, v26, v28                                // 000000002C94: 2C1E391A
	v_mac_f32_e32 v13, v29, v28                                // 000000002C98: 2C1A391D
	v_mac_f32_e32 v10, v30, v28                                // 000000002C9C: 2C14391E
	v_mac_f32_e32 v9, v25, v31                                 // 000000002CA0: 2C123F19
	v_mac_f32_e32 v8, v26, v31                                 // 000000002CA4: 2C103F1A
	v_mac_f32_e32 v5, v25, v32                                 // 000000002CA8: 2C0A4119
	v_mac_f32_e32 v4, v26, v32                                 // 000000002CAC: 2C08411A
	v_mac_f32_e32 v7, v29, v31                                 // 000000002CB0: 2C0E3F1D
	v_mac_f32_e32 v6, v30, v31                                 // 000000002CB4: 2C0C3F1E
	v_mac_f32_e32 v3, v29, v32                                 // 000000002CB8: 2C06411D
	v_mac_f32_e32 v2, v30, v32                                 // 000000002CBC: 2C04411E
	s_cbranch_vccnz BB0_30                                     // 000000002CC0: BF87FFE1

0000000000002cc4 BB0_31:
	v_or_b32_e32 v18, v16, v11                                 // 000000002CC4: 28241710
	v_or_b32_e32 v0, v17, v12                                  // 000000002CC8: 28001911
	v_cmp_gt_u32_e64 s[4:5], s26, v18                          // 000000002CCC: D0CC0004 0002241A
	v_cmp_gt_u32_e64 s[8:9], s27, v0                           // 000000002CD4: D0CC0008 0002001B
	s_and_b64 s[2:3], s[4:5], s[8:9]                           // 000000002CDC: 86820804
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002CE0: BE802002
	s_cbranch_execz BB0_35                                     // 000000002CE4: BF88001E

0000000000002ce8 BB0_32:
	v_cmp_neq_f32_e64 s[2:3], s17, 0                           // 000000002CE8: D04D0002 00010011
	v_mul_f32_e32 v11, s16, v24                                // 000000002CF0: 0A163010
	v_mov_b32_e32 v19, 0                                       // 000000002CF4: 7E260280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002CF8: 86EA027E
	s_cbranch_vccz BB0_34                                      // 000000002CFC: BF86000D
	v_mad_u64_u32 v[16:17], s[2:3], v1, s21, v[18:19]          // 000000002D00: D1E80210 04482B01
	v_mov_b32_e32 v12, s15                                     // 000000002D08: 7E18020F
	v_mad_u64_u32 v[16:17], s[2:3], v0, s20, v[16:17]          // 000000002D0C: D1E80210 04402900
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002D14: D28F0010 00022082
	v_add_u32_e32 v16, vcc, s14, v16                           // 000000002D1C: 3220200E
	v_addc_u32_e32 v17, vcc, v12, v17, vcc                     // 000000002D20: 3822230C
	flat_load_dword v12, v[16:17]                              // 000000002D24: DC500000 0C000010
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002D2C: BF8C0070
	v_mac_f32_e32 v11, s17, v12                                // 000000002D30: 2C161811

0000000000002d34 BB0_34:
	v_mad_u64_u32 v[16:17], s[2:3], v1, s19, v[18:19]          // 000000002D34: D1E80210 04482701
	v_mov_b32_e32 v12, s13                                     // 000000002D3C: 7E18020D
	v_mad_u64_u32 v[16:17], s[2:3], v0, s18, v[16:17]          // 000000002D40: D1E80210 04402500
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002D48: D28F0010 00022082
	v_add_u32_e32 v16, vcc, s12, v16                           // 000000002D50: 3220200C
	v_addc_u32_e32 v17, vcc, v12, v17, vcc                     // 000000002D54: 3822230C
	flat_store_dword v[16:17], v11                             // 000000002D58: DC700000 00000B10

0000000000002d60 BB0_35:
	s_or_b64 exec, exec, s[0:1]                                // 000000002D60: 87FE007E
	v_or_b32_e32 v11, 16, v18                                  // 000000002D64: 28162490
	v_cmp_gt_u32_e64 s[0:1], s26, v11                          // 000000002D68: D0CC0000 0002161A
	s_and_b64 s[6:7], s[0:1], s[8:9]                           // 000000002D70: 86860800
	s_and_saveexec_b64 s[2:3], s[6:7]                          // 000000002D74: BE822006
	s_cbranch_execz BB0_39                                     // 000000002D78: BF88001E

0000000000002d7c BB0_36:
	v_cmp_neq_f32_e64 s[6:7], s17, 0                           // 000000002D7C: D04D0006 00010011
	v_mul_f32_e32 v14, s16, v23                                // 000000002D84: 0A1C2E10
	v_mov_b32_e32 v12, 0                                       // 000000002D88: 7E180280
	s_and_b64 vcc, exec, s[6:7]                                // 000000002D8C: 86EA067E
	s_cbranch_vccz BB0_38                                      // 000000002D90: BF86000D
	v_mad_u64_u32 v[16:17], s[6:7], v1, s21, v[11:12]          // 000000002D94: D1E80610 042C2B01
	v_mov_b32_e32 v19, s15                                     // 000000002D9C: 7E26020F
	v_mad_u64_u32 v[16:17], s[6:7], v0, s20, v[16:17]          // 000000002DA0: D1E80610 04402900
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002DA8: D28F0010 00022082
	v_add_u32_e32 v16, vcc, s14, v16                           // 000000002DB0: 3220200E
	v_addc_u32_e32 v17, vcc, v19, v17, vcc                     // 000000002DB4: 38222313
	flat_load_dword v16, v[16:17]                              // 000000002DB8: DC500000 10000010
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002DC0: BF8C0070
	v_mac_f32_e32 v14, s17, v16                                // 000000002DC4: 2C1C2011

0000000000002dc8 BB0_38:
	v_mad_u64_u32 v[16:17], s[6:7], v1, s19, v[11:12]          // 000000002DC8: D1E80610 042C2701
	v_mov_b32_e32 v12, s13                                     // 000000002DD0: 7E18020D
	v_mad_u64_u32 v[16:17], s[6:7], v0, s18, v[16:17]          // 000000002DD4: D1E80610 04402500
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002DDC: D28F0010 00022082
	v_add_u32_e32 v16, vcc, s12, v16                           // 000000002DE4: 3220200C
	v_addc_u32_e32 v17, vcc, v12, v17, vcc                     // 000000002DE8: 3822230C
	flat_store_dword v[16:17], v14                             // 000000002DEC: DC700000 00000E10

0000000000002df4 BB0_39:
	s_or_b64 exec, exec, s[2:3]                                // 000000002DF4: 87FE027E
	v_or_b32_e32 v16, 32, v18                                  // 000000002DF8: 282024A0
	v_cmp_gt_u32_e64 s[2:3], s26, v16                          // 000000002DFC: D0CC0002 0002201A
	s_and_b64 s[10:11], s[2:3], s[8:9]                         // 000000002E04: 868A0802
	s_and_saveexec_b64 s[6:7], s[10:11]                        // 000000002E08: BE86200A
	s_cbranch_execz BB0_43                                     // 000000002E0C: BF88001E

0000000000002e10 BB0_40:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000002E10: D04D000A 00010011
	v_mul_f32_e32 v12, s16, v20                                // 000000002E18: 0A182810
	v_mov_b32_e32 v17, 0                                       // 000000002E1C: 7E220280
	s_and_b64 vcc, exec, s[10:11]                              // 000000002E20: 86EA0A7E
	s_cbranch_vccz BB0_42                                      // 000000002E24: BF86000D
	v_mad_u64_u32 v[19:20], s[10:11], v1, s21, v[16:17]        // 000000002E28: D1E80A13 04402B01
	v_mov_b32_e32 v14, s15                                     // 000000002E30: 7E1C020F
	v_mad_u64_u32 v[19:20], s[10:11], v0, s20, v[19:20]        // 000000002E34: D1E80A13 044C2900
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002E3C: D28F0013 00022682
	v_add_u32_e32 v19, vcc, s14, v19                           // 000000002E44: 3226260E
	v_addc_u32_e32 v20, vcc, v14, v20, vcc                     // 000000002E48: 3828290E
	flat_load_dword v14, v[19:20]                              // 000000002E4C: DC500000 0E000013
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002E54: BF8C0070
	v_mac_f32_e32 v12, s17, v14                                // 000000002E58: 2C181C11

0000000000002e5c BB0_42:
	v_mad_u64_u32 v[19:20], s[10:11], v1, s19, v[16:17]        // 000000002E5C: D1E80A13 04402701
	v_mov_b32_e32 v14, s13                                     // 000000002E64: 7E1C020D
	v_mad_u64_u32 v[19:20], s[10:11], v0, s18, v[19:20]        // 000000002E68: D1E80A13 044C2500
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002E70: D28F0013 00022682
	v_add_u32_e32 v19, vcc, s12, v19                           // 000000002E78: 3226260C
	v_addc_u32_e32 v20, vcc, v14, v20, vcc                     // 000000002E7C: 3828290E
	flat_store_dword v[19:20], v12                             // 000000002E80: DC700000 00000C13

0000000000002e88 BB0_43:
	s_or_b64 exec, exec, s[6:7]                                // 000000002E88: 87FE067E
	v_or_b32_e32 v20, 48, v18                                  // 000000002E8C: 282824B0
	v_cmp_gt_u32_e64 s[6:7], s26, v20                          // 000000002E90: D0CC0006 0002281A
	s_and_b64 s[10:11], s[6:7], s[8:9]                         // 000000002E98: 868A0806
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 000000002E9C: BE88200A
	s_cbranch_execz BB0_47                                     // 000000002EA0: BF88001E

0000000000002ea4 BB0_44:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000002EA4: D04D000A 00010011
	v_mul_f32_e32 v12, s16, v21                                // 000000002EAC: 0A182A10
	v_mov_b32_e32 v21, 0                                       // 000000002EB0: 7E2A0280
	s_and_b64 vcc, exec, s[10:11]                              // 000000002EB4: 86EA0A7E
	s_cbranch_vccz BB0_46                                      // 000000002EB8: BF86000D
	v_mad_u64_u32 v[23:24], s[10:11], v1, s21, v[20:21]        // 000000002EBC: D1E80A17 04502B01
	v_mov_b32_e32 v14, s15                                     // 000000002EC4: 7E1C020F
	v_mad_u64_u32 v[23:24], s[10:11], v0, s20, v[23:24]        // 000000002EC8: D1E80A17 045C2900
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002ED0: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s14, v23                           // 000000002ED8: 322E2E0E
	v_addc_u32_e32 v24, vcc, v14, v24, vcc                     // 000000002EDC: 3830310E
	flat_load_dword v14, v[23:24]                              // 000000002EE0: DC500000 0E000017
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002EE8: BF8C0070
	v_mac_f32_e32 v12, s17, v14                                // 000000002EEC: 2C181C11

0000000000002ef0 BB0_46:
	v_mad_u64_u32 v[23:24], s[10:11], v1, s19, v[20:21]        // 000000002EF0: D1E80A17 04502701
	v_mov_b32_e32 v14, s13                                     // 000000002EF8: 7E1C020D
	v_mad_u64_u32 v[23:24], s[10:11], v0, s18, v[23:24]        // 000000002EFC: D1E80A17 045C2500
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002F04: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s12, v23                           // 000000002F0C: 322E2E0C
	v_addc_u32_e32 v24, vcc, v14, v24, vcc                     // 000000002F10: 3830310E
	flat_store_dword v[23:24], v12                             // 000000002F14: DC700000 00000C17

0000000000002f1c BB0_47:
	s_or_b64 exec, exec, s[8:9]                                // 000000002F1C: 87FE087E
	v_add_u32_e32 v12, vcc, 16, v0                             // 000000002F20: 32180090
	v_cmp_gt_u32_e64 s[8:9], s27, v12                          // 000000002F24: D0CC0008 0002181B
	s_and_b64 s[22:23], s[4:5], s[8:9]                         // 000000002F2C: 86960804
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000002F30: BE8A2016
	s_cbranch_execz BB0_51                                     // 000000002F34: BF88001F

0000000000002f38 BB0_48:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000002F38: D04D0016 00010011
	v_mul_f32_e32 v14, s16, v22                                // 000000002F40: 0A1C2C10
	v_mov_b32_e32 v22, 0                                       // 000000002F44: 7E2C0280
	v_mov_b32_e32 v21, v18                                     // 000000002F48: 7E2A0312
	s_and_b64 vcc, exec, s[22:23]                              // 000000002F4C: 86EA167E
	s_cbranch_vccz BB0_50                                      // 000000002F50: BF86000D
	v_mad_u64_u32 v[23:24], s[22:23], v1, s21, v[21:22]        // 000000002F54: D1E81617 04542B01
	v_mov_b32_e32 v17, s15                                     // 000000002F5C: 7E22020F
	v_mad_u64_u32 v[23:24], s[22:23], v12, s20, v[23:24]       // 000000002F60: D1E81617 045C290C
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002F68: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s14, v23                           // 000000002F70: 322E2E0E
	v_addc_u32_e32 v24, vcc, v17, v24, vcc                     // 000000002F74: 38303111
	flat_load_dword v17, v[23:24]                              // 000000002F78: DC500000 11000017
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002F80: BF8C0070
	v_mac_f32_e32 v14, s17, v17                                // 000000002F84: 2C1C2211

0000000000002f88 BB0_50:
	v_mad_u64_u32 v[21:22], s[22:23], v1, s19, v[21:22]        // 000000002F88: D1E81615 04542701
	v_mov_b32_e32 v17, s13                                     // 000000002F90: 7E22020D
	v_mad_u64_u32 v[21:22], s[22:23], v12, s18, v[21:22]       // 000000002F94: D1E81615 0454250C
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002F9C: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s12, v21                           // 000000002FA4: 322A2A0C
	v_addc_u32_e32 v22, vcc, v17, v22, vcc                     // 000000002FA8: 382C2D11
	flat_store_dword v[21:22], v14                             // 000000002FAC: DC700000 00000E15

0000000000002fb4 BB0_51:
	s_or_b64 exec, exec, s[10:11]                              // 000000002FB4: 87FE0A7E
	s_and_b64 s[22:23], s[0:1], s[8:9]                         // 000000002FB8: 86960800
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000002FBC: BE8A2016
	s_cbranch_execz BB0_55                                     // 000000002FC0: BF88001F

0000000000002fc4 BB0_52:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000002FC4: D04D0016 00010011
	v_mul_f32_e32 v14, s16, v15                                // 000000002FCC: 0A1C1E10
	v_mov_b32_e32 v22, 0                                       // 000000002FD0: 7E2C0280
	v_mov_b32_e32 v21, v11                                     // 000000002FD4: 7E2A030B
	s_and_b64 vcc, exec, s[22:23]                              // 000000002FD8: 86EA167E
	s_cbranch_vccz BB0_54                                      // 000000002FDC: BF86000D
	v_mad_u64_u32 v[23:24], s[22:23], v1, s21, v[21:22]        // 000000002FE0: D1E81617 04542B01
	v_mov_b32_e32 v15, s15                                     // 000000002FE8: 7E1E020F
	v_mad_u64_u32 v[23:24], s[22:23], v12, s20, v[23:24]       // 000000002FEC: D1E81617 045C290C
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002FF4: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s14, v23                           // 000000002FFC: 322E2E0E
	v_addc_u32_e32 v24, vcc, v15, v24, vcc                     // 000000003000: 3830310F
	flat_load_dword v15, v[23:24]                              // 000000003004: DC500000 0F000017
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000300C: BF8C0070
	v_mac_f32_e32 v14, s17, v15                                // 000000003010: 2C1C1E11

0000000000003014 BB0_54:
	v_mad_u64_u32 v[21:22], s[22:23], v1, s19, v[21:22]        // 000000003014: D1E81615 04542701
	v_mov_b32_e32 v15, s13                                     // 00000000301C: 7E1E020D
	v_mad_u64_u32 v[21:22], s[22:23], v12, s18, v[21:22]       // 000000003020: D1E81615 0454250C
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000003028: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s12, v21                           // 000000003030: 322A2A0C
	v_addc_u32_e32 v22, vcc, v15, v22, vcc                     // 000000003034: 382C2D0F
	flat_store_dword v[21:22], v14                             // 000000003038: DC700000 00000E15

0000000000003040 BB0_55:
	s_or_b64 exec, exec, s[10:11]                              // 000000003040: 87FE0A7E
	s_and_b64 s[22:23], s[2:3], s[8:9]                         // 000000003044: 86960802
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000003048: BE8A2016
	s_cbranch_execz BB0_59                                     // 00000000304C: BF88001F

0000000000003050 BB0_56:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000003050: D04D0016 00010011
	v_mul_f32_e32 v13, s16, v13                                // 000000003058: 0A1A1A10
	v_mov_b32_e32 v15, 0                                       // 00000000305C: 7E1E0280
	v_mov_b32_e32 v14, v16                                     // 000000003060: 7E1C0310
	s_and_b64 vcc, exec, s[22:23]                              // 000000003064: 86EA167E
	s_cbranch_vccz BB0_58                                      // 000000003068: BF86000D
	v_mad_u64_u32 v[21:22], s[22:23], v1, s21, v[14:15]        // 00000000306C: D1E81615 04382B01
	v_mov_b32_e32 v17, s15                                     // 000000003074: 7E22020F
	v_mad_u64_u32 v[21:22], s[22:23], v12, s20, v[21:22]       // 000000003078: D1E81615 0454290C
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000003080: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s14, v21                           // 000000003088: 322A2A0E
	v_addc_u32_e32 v22, vcc, v17, v22, vcc                     // 00000000308C: 382C2D11
	flat_load_dword v17, v[21:22]                              // 000000003090: DC500000 11000015
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003098: BF8C0070
	v_mac_f32_e32 v13, s17, v17                                // 00000000309C: 2C1A2211

00000000000030a0 BB0_58:
	v_mad_u64_u32 v[14:15], s[22:23], v1, s19, v[14:15]        // 0000000030A0: D1E8160E 04382701
	v_mov_b32_e32 v17, s13                                     // 0000000030A8: 7E22020D
	v_mad_u64_u32 v[14:15], s[22:23], v12, s18, v[14:15]       // 0000000030AC: D1E8160E 0438250C
	v_lshlrev_b64 v[14:15], 2, v[14:15]                        // 0000000030B4: D28F000E 00021C82
	v_add_u32_e32 v14, vcc, s12, v14                           // 0000000030BC: 321C1C0C
	v_addc_u32_e32 v15, vcc, v17, v15, vcc                     // 0000000030C0: 381E1F11
	flat_store_dword v[14:15], v13                             // 0000000030C4: DC700000 00000D0E

00000000000030cc BB0_59:
	s_or_b64 exec, exec, s[10:11]                              // 0000000030CC: 87FE0A7E
	s_and_b64 s[10:11], s[6:7], s[8:9]                         // 0000000030D0: 868A0806
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 0000000030D4: BE88200A
	s_cbranch_execz BB0_63                                     // 0000000030D8: BF88001F

00000000000030dc BB0_60:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 0000000030DC: D04D000A 00010011
	v_mul_f32_e32 v10, s16, v10                                // 0000000030E4: 0A141410
	v_mov_b32_e32 v14, 0                                       // 0000000030E8: 7E1C0280
	v_mov_b32_e32 v13, v20                                     // 0000000030EC: 7E1A0314
	s_and_b64 vcc, exec, s[10:11]                              // 0000000030F0: 86EA0A7E
	s_cbranch_vccz BB0_62                                      // 0000000030F4: BF86000D
	v_mad_u64_u32 v[21:22], s[10:11], v1, s21, v[13:14]        // 0000000030F8: D1E80A15 04342B01
	v_mov_b32_e32 v15, s15                                     // 000000003100: 7E1E020F
	v_mad_u64_u32 v[21:22], s[10:11], v12, s20, v[21:22]       // 000000003104: D1E80A15 0454290C
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 00000000310C: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s14, v21                           // 000000003114: 322A2A0E
	v_addc_u32_e32 v22, vcc, v15, v22, vcc                     // 000000003118: 382C2D0F
	flat_load_dword v15, v[21:22]                              // 00000000311C: DC500000 0F000015
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003124: BF8C0070
	v_mac_f32_e32 v10, s17, v15                                // 000000003128: 2C141E11

000000000000312c BB0_62:
	v_mad_u64_u32 v[13:14], s[10:11], v1, s19, v[13:14]        // 00000000312C: D1E80A0D 04342701
	v_mad_u64_u32 v[12:13], s[10:11], v12, s18, v[13:14]       // 000000003134: D1E80A0C 0434250C
	v_mov_b32_e32 v14, s13                                     // 00000000313C: 7E1C020D
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 000000003140: D28F000C 00021882
	v_add_u32_e32 v12, vcc, s12, v12                           // 000000003148: 3218180C
	v_addc_u32_e32 v13, vcc, v14, v13, vcc                     // 00000000314C: 381A1B0E
	flat_store_dword v[12:13], v10                             // 000000003150: DC700000 00000A0C

0000000000003158 BB0_63:
	s_or_b64 exec, exec, s[8:9]                                // 000000003158: 87FE087E
	v_add_u32_e32 v10, vcc, 32, v0                             // 00000000315C: 321400A0
	v_cmp_gt_u32_e64 s[8:9], s27, v10                          // 000000003160: D0CC0008 0002141B
	s_and_b64 s[22:23], s[4:5], s[8:9]                         // 000000003168: 86960804
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 00000000316C: BE8A2016
	s_cbranch_execz BB0_67                                     // 000000003170: BF88001F

0000000000003174 BB0_64:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000003174: D04D0016 00010011
	v_mul_f32_e32 v9, s16, v9                                  // 00000000317C: 0A121210
	v_mov_b32_e32 v13, 0                                       // 000000003180: 7E1A0280
	v_mov_b32_e32 v12, v18                                     // 000000003184: 7E180312
	s_and_b64 vcc, exec, s[22:23]                              // 000000003188: 86EA167E
	s_cbranch_vccz BB0_66                                      // 00000000318C: BF86000D
	v_mad_u64_u32 v[14:15], s[22:23], v1, s21, v[12:13]        // 000000003190: D1E8160E 04302B01
	v_mov_b32_e32 v17, s15                                     // 000000003198: 7E22020F
	v_mad_u64_u32 v[14:15], s[22:23], v10, s20, v[14:15]       // 00000000319C: D1E8160E 0438290A
	v_lshlrev_b64 v[14:15], 2, v[14:15]                        // 0000000031A4: D28F000E 00021C82
	v_add_u32_e32 v14, vcc, s14, v14                           // 0000000031AC: 321C1C0E
	v_addc_u32_e32 v15, vcc, v17, v15, vcc                     // 0000000031B0: 381E1F11
	flat_load_dword v14, v[14:15]                              // 0000000031B4: DC500000 0E00000E
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000031BC: BF8C0070
	v_mac_f32_e32 v9, s17, v14                                 // 0000000031C0: 2C121C11

00000000000031c4 BB0_66:
	v_mad_u64_u32 v[12:13], s[22:23], v1, s19, v[12:13]        // 0000000031C4: D1E8160C 04302701
	v_mov_b32_e32 v14, s13                                     // 0000000031CC: 7E1C020D
	v_mad_u64_u32 v[12:13], s[22:23], v10, s18, v[12:13]       // 0000000031D0: D1E8160C 0430250A
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 0000000031D8: D28F000C 00021882
	v_add_u32_e32 v12, vcc, s12, v12                           // 0000000031E0: 3218180C
	v_addc_u32_e32 v13, vcc, v14, v13, vcc                     // 0000000031E4: 381A1B0E
	flat_store_dword v[12:13], v9                              // 0000000031E8: DC700000 0000090C

00000000000031f0 BB0_67:
	s_or_b64 exec, exec, s[10:11]                              // 0000000031F0: 87FE0A7E
	s_and_b64 s[22:23], s[0:1], s[8:9]                         // 0000000031F4: 86960800
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 0000000031F8: BE8A2016
	s_cbranch_execz BB0_71                                     // 0000000031FC: BF88001F

0000000000003200 BB0_68:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000003200: D04D0016 00010011
	v_mul_f32_e32 v8, s16, v8                                  // 000000003208: 0A101010
	v_mov_b32_e32 v13, 0                                       // 00000000320C: 7E1A0280
	v_mov_b32_e32 v12, v11                                     // 000000003210: 7E18030B
	s_and_b64 vcc, exec, s[22:23]                              // 000000003214: 86EA167E
	s_cbranch_vccz BB0_70                                      // 000000003218: BF86000D
	v_mad_u64_u32 v[14:15], s[22:23], v1, s21, v[12:13]        // 00000000321C: D1E8160E 04302B01
	v_mov_b32_e32 v9, s15                                      // 000000003224: 7E12020F
	v_mad_u64_u32 v[14:15], s[22:23], v10, s20, v[14:15]       // 000000003228: D1E8160E 0438290A
	v_lshlrev_b64 v[14:15], 2, v[14:15]                        // 000000003230: D28F000E 00021C82
	v_add_u32_e32 v14, vcc, s14, v14                           // 000000003238: 321C1C0E
	v_addc_u32_e32 v15, vcc, v9, v15, vcc                      // 00000000323C: 381E1F09
	flat_load_dword v9, v[14:15]                               // 000000003240: DC500000 0900000E
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003248: BF8C0070
	v_mac_f32_e32 v8, s17, v9                                  // 00000000324C: 2C101211

0000000000003250 BB0_70:
	v_mad_u64_u32 v[12:13], s[22:23], v1, s19, v[12:13]        // 000000003250: D1E8160C 04302701
	v_mov_b32_e32 v9, s13                                      // 000000003258: 7E12020D
	v_mad_u64_u32 v[12:13], s[22:23], v10, s18, v[12:13]       // 00000000325C: D1E8160C 0430250A
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 000000003264: D28F000C 00021882
	v_add_u32_e32 v12, vcc, s12, v12                           // 00000000326C: 3218180C
	v_addc_u32_e32 v13, vcc, v9, v13, vcc                      // 000000003270: 381A1B09
	flat_store_dword v[12:13], v8                              // 000000003274: DC700000 0000080C

000000000000327c BB0_71:
	s_or_b64 exec, exec, s[10:11]                              // 00000000327C: 87FE0A7E
	s_and_b64 s[22:23], s[2:3], s[8:9]                         // 000000003280: 86960802
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000003284: BE8A2016
	s_cbranch_execz BB0_75                                     // 000000003288: BF88001F

000000000000328c BB0_72:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 00000000328C: D04D0016 00010011
	v_mul_f32_e32 v7, s16, v7                                  // 000000003294: 0A0E0E10
	v_mov_b32_e32 v9, 0                                        // 000000003298: 7E120280
	v_mov_b32_e32 v8, v16                                      // 00000000329C: 7E100310
	s_and_b64 vcc, exec, s[22:23]                              // 0000000032A0: 86EA167E
	s_cbranch_vccz BB0_74                                      // 0000000032A4: BF86000D
	v_mad_u64_u32 v[12:13], s[22:23], v1, s21, v[8:9]          // 0000000032A8: D1E8160C 04202B01
	v_mov_b32_e32 v14, s15                                     // 0000000032B0: 7E1C020F
	v_mad_u64_u32 v[12:13], s[22:23], v10, s20, v[12:13]       // 0000000032B4: D1E8160C 0430290A
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 0000000032BC: D28F000C 00021882
	v_add_u32_e32 v12, vcc, s14, v12                           // 0000000032C4: 3218180E
	v_addc_u32_e32 v13, vcc, v14, v13, vcc                     // 0000000032C8: 381A1B0E
	flat_load_dword v12, v[12:13]                              // 0000000032CC: DC500000 0C00000C
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000032D4: BF8C0070
	v_mac_f32_e32 v7, s17, v12                                 // 0000000032D8: 2C0E1811

00000000000032dc BB0_74:
	v_mad_u64_u32 v[8:9], s[22:23], v1, s19, v[8:9]            // 0000000032DC: D1E81608 04202701
	v_mov_b32_e32 v12, s13                                     // 0000000032E4: 7E18020D
	v_mad_u64_u32 v[8:9], s[22:23], v10, s18, v[8:9]           // 0000000032E8: D1E81608 0420250A
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 0000000032F0: D28F0008 00021082
	v_add_u32_e32 v8, vcc, s12, v8                             // 0000000032F8: 3210100C
	v_addc_u32_e32 v9, vcc, v12, v9, vcc                       // 0000000032FC: 3812130C
	flat_store_dword v[8:9], v7                                // 000000003300: DC700000 00000708

0000000000003308 BB0_75:
	s_or_b64 exec, exec, s[10:11]                              // 000000003308: 87FE0A7E
	s_and_b64 s[10:11], s[6:7], s[8:9]                         // 00000000330C: 868A0806
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 000000003310: BE88200A
	s_cbranch_execz BB0_79                                     // 000000003314: BF88001F

0000000000003318 BB0_76:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000003318: D04D000A 00010011
	v_mul_f32_e32 v6, s16, v6                                  // 000000003320: 0A0C0C10
	v_mov_b32_e32 v8, 0                                        // 000000003324: 7E100280
	v_mov_b32_e32 v7, v20                                      // 000000003328: 7E0E0314
	s_and_b64 vcc, exec, s[10:11]                              // 00000000332C: 86EA0A7E
	s_cbranch_vccz BB0_78                                      // 000000003330: BF86000D
	v_mad_u64_u32 v[12:13], s[10:11], v1, s21, v[7:8]          // 000000003334: D1E80A0C 041C2B01
	v_mov_b32_e32 v9, s15                                      // 00000000333C: 7E12020F
	v_mad_u64_u32 v[12:13], s[10:11], v10, s20, v[12:13]       // 000000003340: D1E80A0C 0430290A
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 000000003348: D28F000C 00021882
	v_add_u32_e32 v12, vcc, s14, v12                           // 000000003350: 3218180E
	v_addc_u32_e32 v13, vcc, v9, v13, vcc                      // 000000003354: 381A1B09
	flat_load_dword v9, v[12:13]                               // 000000003358: DC500000 0900000C
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003360: BF8C0070
	v_mac_f32_e32 v6, s17, v9                                  // 000000003364: 2C0C1211

0000000000003368 BB0_78:
	v_mad_u64_u32 v[7:8], s[10:11], v1, s19, v[7:8]            // 000000003368: D1E80A07 041C2701
	v_mov_b32_e32 v9, s13                                      // 000000003370: 7E12020D
	v_mad_u64_u32 v[7:8], s[10:11], v10, s18, v[7:8]           // 000000003374: D1E80A07 041C250A
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 00000000337C: D28F0007 00020E82
	v_add_u32_e32 v7, vcc, s12, v7                             // 000000003384: 320E0E0C
	v_addc_u32_e32 v8, vcc, v9, v8, vcc                        // 000000003388: 38101109
	flat_store_dword v[7:8], v6                                // 00000000338C: DC700000 00000607

0000000000003394 BB0_79:
	s_or_b64 exec, exec, s[8:9]                                // 000000003394: 87FE087E
	v_add_u32_e32 v0, vcc, 48, v0                              // 000000003398: 320000B0
	v_cmp_gt_u32_e64 s[8:9], s27, v0                           // 00000000339C: D0CC0008 0002001B
	s_and_b64 s[10:11], s[4:5], s[8:9]                         // 0000000033A4: 868A0804
	s_and_saveexec_b64 s[4:5], s[10:11]                        // 0000000033A8: BE84200A
	s_cbranch_execz BB0_83                                     // 0000000033AC: BF88001E

00000000000033b0 BB0_80:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 0000000033B0: D04D000A 00010011
	v_mul_f32_e32 v5, s16, v5                                  // 0000000033B8: 0A0A0A10
	v_mov_b32_e32 v19, 0                                       // 0000000033BC: 7E260280
	s_and_b64 vcc, exec, s[10:11]                              // 0000000033C0: 86EA0A7E
	s_cbranch_vccz BB0_82                                      // 0000000033C4: BF86000D
	v_mad_u64_u32 v[6:7], s[10:11], v1, s21, v[18:19]          // 0000000033C8: D1E80A06 04482B01
	v_mov_b32_e32 v8, s15                                      // 0000000033D0: 7E10020F
	v_mad_u64_u32 v[6:7], s[10:11], v0, s20, v[6:7]            // 0000000033D4: D1E80A06 04182900
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 0000000033DC: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s14, v6                             // 0000000033E4: 320C0C0E
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 0000000033E8: 380E0F08
	flat_load_dword v6, v[6:7]                                 // 0000000033EC: DC500000 06000006
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000033F4: BF8C0070
	v_mac_f32_e32 v5, s17, v6                                  // 0000000033F8: 2C0A0C11

00000000000033fc BB0_82:
	v_mad_u64_u32 v[6:7], s[10:11], v1, s19, v[18:19]          // 0000000033FC: D1E80A06 04482701
	v_mov_b32_e32 v8, s13                                      // 000000003404: 7E10020D
	v_mad_u64_u32 v[6:7], s[10:11], v0, s18, v[6:7]            // 000000003408: D1E80A06 04182500
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000003410: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s12, v6                             // 000000003418: 320C0C0C
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 00000000341C: 380E0F08
	flat_store_dword v[6:7], v5                                // 000000003420: DC700000 00000506

0000000000003428 BB0_83:
	s_or_b64 exec, exec, s[4:5]                                // 000000003428: 87FE047E
	s_and_b64 s[4:5], s[0:1], s[8:9]                           // 00000000342C: 86840800
	s_and_saveexec_b64 s[0:1], s[4:5]                          // 000000003430: BE802004
	s_cbranch_execz BB0_87                                     // 000000003434: BF88001E

0000000000003438 BB0_84:
	v_cmp_neq_f32_e64 s[4:5], s17, 0                           // 000000003438: D04D0004 00010011
	v_mul_f32_e32 v4, s16, v4                                  // 000000003440: 0A080810
	v_mov_b32_e32 v12, 0                                       // 000000003444: 7E180280
	s_and_b64 vcc, exec, s[4:5]                                // 000000003448: 86EA047E
	s_cbranch_vccz BB0_86                                      // 00000000344C: BF86000D
	v_mad_u64_u32 v[5:6], s[4:5], v1, s21, v[11:12]            // 000000003450: D1E80405 042C2B01
	v_mov_b32_e32 v7, s15                                      // 000000003458: 7E0E020F
	v_mad_u64_u32 v[5:6], s[4:5], v0, s20, v[5:6]              // 00000000345C: D1E80405 04142900
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 000000003464: D28F0005 00020A82
	v_add_u32_e32 v5, vcc, s14, v5                             // 00000000346C: 320A0A0E
	v_addc_u32_e32 v6, vcc, v7, v6, vcc                        // 000000003470: 380C0D07
	flat_load_dword v5, v[5:6]                                 // 000000003474: DC500000 05000005
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000347C: BF8C0070
	v_mac_f32_e32 v4, s17, v5                                  // 000000003480: 2C080A11

0000000000003484 BB0_86:
	v_mad_u64_u32 v[5:6], s[4:5], v1, s19, v[11:12]            // 000000003484: D1E80405 042C2701
	v_mov_b32_e32 v7, s13                                      // 00000000348C: 7E0E020D
	v_mad_u64_u32 v[5:6], s[4:5], v0, s18, v[5:6]              // 000000003490: D1E80405 04142500
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 000000003498: D28F0005 00020A82
	v_add_u32_e32 v5, vcc, s12, v5                             // 0000000034A0: 320A0A0C
	v_addc_u32_e32 v6, vcc, v7, v6, vcc                        // 0000000034A4: 380C0D07
	flat_store_dword v[5:6], v4                                // 0000000034A8: DC700000 00000405

00000000000034b0 BB0_87:
	s_or_b64 exec, exec, s[0:1]                                // 0000000034B0: 87FE007E
	s_and_b64 s[2:3], s[2:3], s[8:9]                           // 0000000034B4: 86820802
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 0000000034B8: BE802002
	s_cbranch_execz BB0_91                                     // 0000000034BC: BF88001E

00000000000034c0 BB0_88:
	v_cmp_neq_f32_e64 s[2:3], s17, 0                           // 0000000034C0: D04D0002 00010011
	v_mul_f32_e32 v3, s16, v3                                  // 0000000034C8: 0A060610
	v_mov_b32_e32 v17, 0                                       // 0000000034CC: 7E220280
	s_and_b64 vcc, exec, s[2:3]                                // 0000000034D0: 86EA027E
	s_cbranch_vccz BB0_90                                      // 0000000034D4: BF86000D
	v_mad_u64_u32 v[4:5], s[2:3], v1, s21, v[16:17]            // 0000000034D8: D1E80204 04402B01
	v_mov_b32_e32 v6, s15                                      // 0000000034E0: 7E0C020F
	v_mad_u64_u32 v[4:5], s[2:3], v0, s20, v[4:5]              // 0000000034E4: D1E80204 04102900
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 0000000034EC: D28F0004 00020882
	v_add_u32_e32 v4, vcc, s14, v4                             // 0000000034F4: 3208080E
	v_addc_u32_e32 v5, vcc, v6, v5, vcc                        // 0000000034F8: 380A0B06
	flat_load_dword v4, v[4:5]                                 // 0000000034FC: DC500000 04000004
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003504: BF8C0070
	v_mac_f32_e32 v3, s17, v4                                  // 000000003508: 2C060811

000000000000350c BB0_90:
	v_mad_u64_u32 v[4:5], s[2:3], v1, s19, v[16:17]            // 00000000350C: D1E80204 04402701
	v_mov_b32_e32 v6, s13                                      // 000000003514: 7E0C020D
	v_mad_u64_u32 v[4:5], s[2:3], v0, s18, v[4:5]              // 000000003518: D1E80204 04102500
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000003520: D28F0004 00020882
	v_add_u32_e32 v4, vcc, s12, v4                             // 000000003528: 3208080C
	v_addc_u32_e32 v5, vcc, v6, v5, vcc                        // 00000000352C: 380A0B06
	flat_store_dword v[4:5], v3                                // 000000003530: DC700000 00000304

0000000000003538 BB0_91:
	s_or_b64 exec, exec, s[0:1]                                // 000000003538: 87FE007E
	s_and_b64 s[0:1], s[6:7], s[8:9]                           // 00000000353C: 86800806
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000003540: BE822000
	s_cbranch_execz BB0_95                                     // 000000003544: BF88001E

0000000000003548 BB0_92:
	v_cmp_neq_f32_e64 s[0:1], s17, 0                           // 000000003548: D04D0000 00010011
	v_mul_f32_e32 v2, s16, v2                                  // 000000003550: 0A040410
	v_mov_b32_e32 v21, 0                                       // 000000003554: 7E2A0280
	s_and_b64 vcc, exec, s[0:1]                                // 000000003558: 86EA007E
	s_cbranch_vccz BB0_94                                      // 00000000355C: BF86000D
	v_mad_u64_u32 v[3:4], s[0:1], v1, s21, v[20:21]            // 000000003560: D1E80003 04502B01
	v_mov_b32_e32 v5, s15                                      // 000000003568: 7E0A020F
	v_mad_u64_u32 v[3:4], s[0:1], v0, s20, v[3:4]              // 00000000356C: D1E80003 040C2900
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 000000003574: D28F0003 00020682
	v_add_u32_e32 v3, vcc, s14, v3                             // 00000000357C: 3206060E
	v_addc_u32_e32 v4, vcc, v5, v4, vcc                        // 000000003580: 38080905
	flat_load_dword v3, v[3:4]                                 // 000000003584: DC500000 03000003
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000358C: BF8C0070
	v_mac_f32_e32 v2, s17, v3                                  // 000000003590: 2C040611

0000000000003594 BB0_94:
	v_mad_u64_u32 v[3:4], s[0:1], v1, s19, v[20:21]            // 000000003594: D1E80003 04502701
	v_mad_u64_u32 v[0:1], s[0:1], v0, s18, v[3:4]              // 00000000359C: D1E80000 040C2500
	v_mov_b32_e32 v3, s13                                      // 0000000035A4: 7E06020D
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 0000000035A8: D28F0000 00020082
	v_add_u32_e32 v0, vcc, s12, v0                             // 0000000035B0: 3200000C
	v_addc_u32_e32 v1, vcc, v3, v1, vcc                        // 0000000035B4: 38020303
	flat_store_dword v[0:1], v2                                // 0000000035B8: DC700000 00000200

00000000000035c0 BB0_95:
	s_endpgm                                                   // 0000000035C0: BF810000
