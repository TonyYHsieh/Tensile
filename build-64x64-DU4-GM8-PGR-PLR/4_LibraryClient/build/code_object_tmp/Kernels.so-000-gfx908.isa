
Kernels.so-000-gfx908.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000002100 Cijk_Ailk_Bljk_SB_MT64x64x4_SE_K1:
	v_mov_b32_e32 v1, s4                                       // 000000002100: 7E020204
	v_mov_b32_e32 v2, s5                                       // 000000002104: 7E040205
	s_load_dword s0, s[4:5], 0x4                               // 000000002108: C0020002 00000004
	global_load_ushort v1, v[1:2], off offset:6                // 000000002110: DC488006 017F0001
	s_load_dwordx2 s[36:37], s[4:5], 0xc                       // 000000002118: C0060902 0000000C
	s_load_dwordx2 s[12:13], s[6:7], 0x0                       // 000000002120: C0060303 00000000
	s_mov_b32 s1, 0x4f800000                                   // 000000002128: BE8100FF 4F800000
	s_waitcnt lgkmcnt(0)                                       // 000000002130: BF8CC07F
	s_and_b32 s0, s0, 0xffff                                   // 000000002134: 8600FF00 0000FFFF
	v_cvt_f32_u32_e32 v2, s0                                   // 00000000213C: 7E040C00
	s_load_dwordx2 s[14:15], s[6:7], 0x8                       // 000000002140: C0060383 00000008
	s_load_dwordx2 s[34:35], s[6:7], 0x10                      // 000000002148: C0060883 00000010
	s_load_dwordx8 s[16:23], s[6:7], 0x20                      // 000000002150: C00E0403 00000020
	v_rcp_iflag_f32_e32 v2, v2                                 // 000000002158: 7E044702
	s_load_dwordx4 s[24:27], s[6:7], 0x40                      // 00000000215C: C00A0603 00000040
	s_load_dwordx2 s[4:5], s[6:7], 0x18                        // 000000002164: C0060103 00000018
	s_load_dwordx4 s[28:31], s[6:7], 0x50                      // 00000000216C: C00A0703 00000050
	v_mul_f32_e32 v2, s1, v2                                   // 000000002174: 0A040401
	v_cvt_u32_f32_e32 v2, v2                                   // 000000002178: 7E040F02
	s_and_b32 s6, s9, 7                                        // 00000000217C: 86068709
	v_lshrrev_b32_e32 v11, 4, v0                               // 000000002180: 20160084
	s_mov_b32 s33, s11                                         // 000000002184: BEA1000B
	v_mul_lo_u32 v3, v2, s0                                    // 000000002188: D2850003 00000102
	v_mul_hi_u32 v4, v2, s0                                    // 000000002190: D2860004 00000102
	v_and_b32_e32 v10, 15, v0                                  // 000000002198: 2614008F
	v_or_b32_e32 v14, 0x100, v11                               // 00000000219C: 281C16FF 00000100
	v_sub_u32_e32 v5, 0, v3                                    // 0000000021A4: 6A0A0680
	v_cmp_eq_u32_e32 vcc, 0, v4                                // 0000000021A8: 7D940880
	v_cndmask_b32_e32 v3, v3, v5, vcc                          // 0000000021AC: 00060B03
	v_mul_hi_u32 v3, v3, v2                                    // 0000000021B0: D2860003 00020503
	s_mov_b32 s32, s33                                         // 0000000021B8: BEA00021
	v_add_u32_e32 v4, v2, v3                                   // 0000000021BC: 68080702
	v_sub_u32_e32 v2, v2, v3                                   // 0000000021C0: 6A040702
	v_cndmask_b32_e32 v2, v2, v4, vcc                          // 0000000021C4: 00040902
	v_mul_hi_u32 v2, v2, s36                                   // 0000000021C8: D2860002 00004902
	v_mul_lo_u32 v4, v2, s0                                    // 0000000021D0: D2850004 00000102
	v_add_u32_e32 v6, -1, v2                                   // 0000000021D8: 680C04C1
	v_sub_u32_e32 v7, s36, v4                                  // 0000000021DC: 6A0E0824
	v_cmp_ge_u32_e32 vcc, s36, v4                              // 0000000021E0: 7D9C0824
	s_waitcnt vmcnt(0)                                         // 0000000021E4: BF8C0F70
	v_cvt_f32_u32_e32 v5, v1                                   // 0000000021E8: 7E0A0D01
	v_rcp_iflag_f32_e32 v3, v5                                 // 0000000021EC: 7E064705
	v_add_u32_e32 v5, 1, v2                                    // 0000000021F0: 680A0481
	v_mul_f32_e32 v3, s1, v3                                   // 0000000021F4: 0A060601
	v_cvt_u32_f32_e32 v3, v3                                   // 0000000021F8: 7E060F03
	v_cmp_le_u32_e64 s[0:1], s0, v7                            // 0000000021FC: D0CB0000 00020E00
	s_and_b64 s[0:1], s[0:1], vcc                              // 000000002204: 86806A00
	v_cndmask_b32_e64 v2, v2, v5, s[0:1]                       // 000000002208: D1000002 00020B02
	v_mul_lo_u32 v8, v3, v1                                    // 000000002210: D2850008 00020303
	v_mul_hi_u32 v9, v3, v1                                    // 000000002218: D2860009 00020303
	v_cndmask_b32_e32 v2, v6, v2, vcc                          // 000000002220: 00040506
	v_mul_lo_u32 v2, v2, s6                                    // 000000002224: D2850002 00000D02
	v_sub_u32_e32 v4, 0, v8                                    // 00000000222C: 6A081080
	v_cmp_eq_u32_e64 s[2:3], 0, v9                             // 000000002230: D0CA0002 00021280
	v_cndmask_b32_e64 v4, v8, v4, s[2:3]                       // 000000002238: D1000004 000A0908
	v_mul_hi_u32 v4, v4, v3                                    // 000000002240: D2860004 00020704
	v_add_u32_e32 v2, s8, v2                                   // 000000002248: 68040408
	v_add_u32_e32 v5, v3, v4                                   // 00000000224C: 680A0903
	v_sub_u32_e32 v3, v3, v4                                   // 000000002250: 6A060903
	v_cndmask_b32_e64 v3, v3, v5, s[2:3]                       // 000000002254: D1000003 000A0B03
	v_mul_hi_u32 v3, v3, s37                                   // 00000000225C: D2860003 00004B03
	s_and_b32 s2, s9, -8                                       // 000000002264: 8602C809
	v_mul_lo_u32 v4, v3, v1                                    // 000000002268: D2850004 00020303
	v_add_u32_e32 v5, 1, v3                                    // 000000002270: 680A0681
	v_add_u32_e32 v6, -1, v3                                   // 000000002274: 680C06C1
	v_sub_u32_e32 v7, s37, v4                                  // 000000002278: 6A0E0825
	v_cmp_ge_u32_e32 vcc, s37, v4                              // 00000000227C: 7D9C0825
	v_cmp_ge_u32_e64 s[0:1], v7, v1                            // 000000002280: D0CE0000 00020307
	s_and_b64 s[0:1], s[0:1], vcc                              // 000000002288: 86806A00
	v_cndmask_b32_e64 v1, v3, v5, s[0:1]                       // 00000000228C: D1000001 00020B03
	v_cndmask_b32_e32 v1, v6, v1, vcc                          // 000000002294: 00020306
	v_and_b32_e32 v3, 7, v1                                    // 000000002298: 26060287
	v_sub_u32_e32 v1, v1, v3                                   // 00000000229C: 6A020701
	v_cmp_ge_u32_e32 vcc, s9, v1                               // 0000000022A0: 7D9C0209
	v_cndmask_b32_e32 v1, 0, v3, vcc                           // 0000000022A4: 00020680
	v_cmp_gt_i32_e32 vcc, 3, v1                                // 0000000022A8: 7D880283
	s_and_b64 vcc, exec, vcc                                   // 0000000022AC: 86EA6A7E
	s_cbranch_vccz BB0_4                                       // 0000000022B0: BF860008
	v_cmp_gt_i32_e32 vcc, 1, v1                                // 0000000022B4: 7D880281
	s_and_b64 vcc, exec, vcc                                   // 0000000022B8: 86EA6A7E
	s_cbranch_vccnz BB0_9                                      // 0000000022BC: BF87001E
	v_cmp_gt_i32_e32 vcc, 2, v1                                // 0000000022C0: 7D880282
	s_and_b64 vcc, exec, vcc                                   // 0000000022C4: 86EA6A7E
	s_cbranch_vccz BB0_10                                      // 0000000022C8: BF86001E
	v_mov_b32_e32 v1, s2                                       // 0000000022CC: 7E020202
	s_branch BB0_17                                            // 0000000022D0: BF82003A

00000000000022d4 BB0_4:
	v_cmp_gt_i32_e32 vcc, 5, v1                                // 0000000022D4: 7D880285
	s_and_b64 vcc, exec, vcc                                   // 0000000022D8: 86EA6A7E
	s_cbranch_vccz BB0_7                                       // 0000000022DC: BF86000B
	v_cmp_gt_i32_e32 vcc, 4, v1                                // 0000000022E0: 7D880284
	s_and_b64 vcc, exec, vcc                                   // 0000000022E4: 86EA6A7E
	s_cbranch_vccz BB0_11                                      // 0000000022E8: BF860019
	s_mov_b32 s0, 0xaaaaaaab                                   // 0000000022EC: BE8000FF AAAAAAAB
	v_mul_hi_u32 v1, v2, s0                                    // 0000000022F4: D2860001 00000102
	v_lshrrev_b32_e32 v3, 1, v1                                // 0000000022FC: 20060281
	v_mul_lo_u32 v1, v3, -3                                    // 000000002300: D2850001 00018703
	s_branch BB0_15                                            // 000000002308: BF820029

000000000000230c BB0_7:
	v_cmp_gt_i32_e32 vcc, 6, v1                                // 00000000230C: 7D880286
	s_and_b64 vcc, exec, vcc                                   // 000000002310: 86EA6A7E
	s_cbranch_vccz BB0_12                                      // 000000002314: BF860011
	s_mov_b32 s0, 0xcccccccd                                   // 000000002318: BE8000FF CCCCCCCD
	v_mul_hi_u32 v1, v2, s0                                    // 000000002320: D2860001 00000102
	v_lshrrev_b32_e32 v3, 2, v1                                // 000000002328: 20060282
	v_mul_lo_u32 v1, v3, -5                                    // 00000000232C: D2850001 00018B03
	s_branch BB0_15                                            // 000000002334: BF82001E

0000000000002338 BB0_9:
	v_lshrrev_b32_e32 v3, 3, v2                                // 000000002338: 20060483
	v_and_b32_e32 v1, 7, v2                                    // 00000000233C: 26020487
	s_branch BB0_16                                            // 000000002340: BF82001C

0000000000002344 BB0_10:
	v_lshrrev_b32_e32 v3, 1, v2                                // 000000002344: 20060481
	v_and_b32_e32 v1, 1, v2                                    // 000000002348: 26020481
	s_branch BB0_16                                            // 00000000234C: BF820019

0000000000002350 BB0_11:
	v_lshrrev_b32_e32 v3, 2, v2                                // 000000002350: 20060482
	v_and_b32_e32 v1, 3, v2                                    // 000000002354: 26020483
	s_branch BB0_16                                            // 000000002358: BF820016

000000000000235c BB0_12:
	v_cmp_eq_u32_e32 vcc, 6, v1                                // 00000000235C: 7D940286
	s_and_b64 vcc, exec, vcc                                   // 000000002360: 86EA6A7E
	s_cbranch_vccz BB0_14                                      // 000000002364: BF860008
	s_mov_b32 s0, 0xaaaaaaab                                   // 000000002368: BE8000FF AAAAAAAB
	v_mul_hi_u32 v1, v2, s0                                    // 000000002370: D2860001 00000102
	v_lshrrev_b32_e32 v3, 2, v1                                // 000000002378: 20060282
	v_mul_lo_u32 v1, v3, -6                                    // 00000000237C: D2850001 00018D03
	s_branch BB0_15                                            // 000000002384: BF82000A

0000000000002388 BB0_14:
	s_mov_b32 s0, 0x24924925                                   // 000000002388: BE8000FF 24924925
	v_mul_hi_u32 v1, v2, s0                                    // 000000002390: D2860001 00000102
	v_sub_u32_e32 v3, v2, v1                                   // 000000002398: 6A060302
	v_lshrrev_b32_e32 v3, 1, v3                                // 00000000239C: 20060681
	v_add_u32_e32 v1, v3, v1                                   // 0000000023A0: 68020303
	v_lshrrev_b32_e32 v3, 2, v1                                // 0000000023A4: 20060282
	v_mul_lo_u32 v1, v3, -7                                    // 0000000023A8: D2850001 00018F03

00000000000023b0 BB0_15:
	v_add_u32_e32 v1, v1, v2                                   // 0000000023B0: 68020501

00000000000023b4 BB0_16:
	v_or_b32_e32 v1, s2, v1                                    // 0000000023B4: 28020202
	v_mov_b32_e32 v2, v3                                       // 0000000023B8: 7E040303

00000000000023bc BB0_17:
	s_waitcnt lgkmcnt(0)                                       // 0000000023BC: BF8CC07F
	v_cvt_f32_u32_e32 v3, s28                                  // 0000000023C0: 7E060C1C
	v_lshlrev_b32_e32 v16, 6, v1                               // 0000000023C4: 24200286
	v_lshrrev_b32_e32 v8, 2, v0                                // 0000000023C8: 20100082
	s_add_i32 s0, s27, -1                                      // 0000000023CC: 8100C11B
	v_rcp_iflag_f32_e32 v3, v3                                 // 0000000023D0: 7E064703
	v_lshrrev_b32_e32 v22, 6, v0                               // 0000000023D4: 202C0086
	v_lshlrev_b32_e32 v15, 6, v2                               // 0000000023D8: 241E0486
	v_and_b32_e32 v2, s30, v2                                  // 0000000023DC: 2604041E
	v_mul_f32_e32 v3, 0x4f800000, v3                           // 0000000023E0: 0A0606FF 4F800000
	v_cvt_u32_f32_e32 v3, v3                                   // 0000000023E8: 7E060F03
	s_mov_b32 s9, 0                                            // 0000000023EC: BE890080
	s_add_i32 s2, s26, -1                                      // 0000000023F0: 8102C11A
	v_and_or_b32 v7, v0, 63, v15                               // 0000000023F4: D2010007 043D7F00
	v_mul_lo_u32 v4, v3, s28                                   // 0000000023FC: D2850004 00003903
	v_mul_hi_u32 v5, v3, s28                                   // 000000002404: D2860005 00003903
	s_mov_b32 s8, s22                                          // 00000000240C: BE880016
	v_min_u32_e32 v7, s2, v7                                   // 000000002410: 1C0E0E02
	v_sub_u32_e32 v1, 0, v4                                    // 000000002414: 6A020880
	v_cmp_eq_u32_e32 vcc, 0, v5                                // 000000002418: 7D940A80
	v_cndmask_b32_e32 v1, v4, v1, vcc                          // 00000000241C: 00020304
	v_mul_hi_u32 v1, v1, v3                                    // 000000002420: D2860001 00020701
	v_lshlrev_b32_e32 v25, 4, v2                               // 000000002428: 24320484
	s_lshl_b64 s[2:3], s[8:9], 2                               // 00000000242C: 8E828208
	v_alignbit_b32 v2, 0, s22, 30                              // 000000002430: D1CE0002 02782C80
	v_add_u32_e32 v4, v3, v1                                   // 000000002438: 68080303
	v_sub_u32_e32 v1, v3, v1                                   // 00000000243C: 6A020303
	v_cndmask_b32_e32 v1, v1, v4, vcc                          // 000000002440: 00020901
	v_mul_hi_u32 v1, v1, s10                                   // 000000002444: D2860001 00001501
	v_or_b32_e32 v3, v16, v8                                   // 00000000244C: 28061110
	v_min_u32_e32 v3, s0, v3                                   // 000000002450: 1C060600
	v_mul_lo_u32 v4, v22, s22                                  // 000000002454: D2850004 00002D16
	v_mul_lo_u32 v1, v1, s28                                   // 00000000245C: D2850001 00003901
	v_mul_lo_u32 v9, v2, v25                                   // 000000002464: D2850009 00023302
	v_mul_hi_u32 v12, s2, v25                                  // 00000000246C: D286000C 00023202
	v_and_b32_e32 v18, 3, v0                                   // 000000002474: 26240083
	v_sub_u32_e32 v5, s10, v1                                  // 000000002478: 6A0A020A
	v_cmp_ge_u32_e64 s[0:1], s10, v1                           // 00000000247C: D0CE0000 0002020A
	v_cmp_le_u32_e32 vcc, s28, v5                              // 000000002484: 7D960A1C
	v_subrev_u32_e32 v1, s28, v5                               // 000000002488: 6C020A1C
	s_and_b64 vcc, vcc, s[0:1]                                 // 00000000248C: 86EA006A
	v_add_u32_e32 v6, s28, v5                                  // 000000002490: 680C0A1C
	v_cndmask_b32_e32 v1, v5, v1, vcc                          // 000000002494: 00020305
	v_cndmask_b32_e64 v1, v6, v1, s[0:1]                       // 000000002498: D1000001 00020306
	v_mul_lo_u32 v5, v1, s23                                   // 0000000024A0: D2850005 00002F01
	v_mul_lo_u32 v3, v3, s24                                   // 0000000024A8: D2850003 00003103
	v_mul_lo_u32 v6, v1, s25                                   // 0000000024B0: D2850006 00003301
	v_lshl_or_b32 v2, v18, 6, v8                               // 0000000024B8: D2000002 04210D12
	v_add3_u32 v23, v5, v4, v7                                 // 0000000024C0: D1FF0017 041E0905
	v_mul_lo_u32 v7, s2, v25                                   // 0000000024C8: D2850007 00023202
	v_add_u32_e32 v8, v12, v9                                  // 0000000024D0: 6810130C
	v_mov_b32_e32 v24, 0                                       // 0000000024D4: 7E300280
	v_add3_u32 v3, v6, v18, v3                                 // 0000000024D8: D1FF0003 040E2506
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 0000000024E0: D28F0007 00020E82
	v_lshlrev_b64 v[5:6], 2, v[23:24]                          // 0000000024E8: D28F0005 00022E82
	v_mov_b32_e32 v9, s35                                      // 0000000024F0: 7E120223
	v_add_co_u32_e32 v7, vcc, s34, v7                          // 0000000024F4: 320E0E22
	v_addc_co_u32_e32 v8, vcc, v8, v9, vcc                     // 0000000024F8: 38101308
	v_add_co_u32_e32 v27, vcc, v7, v5                          // 0000000024FC: 32360B07
	v_mov_b32_e32 v26, v24                                     // 000000002500: 7E340318
	v_addc_co_u32_e32 v28, vcc, v8, v6, vcc                    // 000000002504: 38380D08
	v_lshlrev_b64 v[5:6], 4, v[25:26]                          // 000000002508: D28F0005 00023284
	v_mov_b32_e32 v4, v24                                      // 000000002510: 7E080318
	v_add_co_u32_e32 v5, vcc, s4, v5                           // 000000002514: 320A0A04
	v_mov_b32_e32 v7, s5                                       // 000000002518: 7E0E0205
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 00000000251C: D28F0003 00020682
	v_addc_co_u32_e32 v6, vcc, v6, v7, vcc                     // 000000002524: 380C0F06
	v_add_co_u32_e32 v29, vcc, v5, v3                          // 000000002528: 323A0705
	s_lshr_b32 s4, s29, 2                                      // 00000000252C: 8F04821D
	v_or_b32_e32 v26, 0x100, v2                                // 000000002530: 283404FF 00000100
	s_cmp_lt_u32 s29, 4                                        // 000000002538: BF0A841D
	v_addc_co_u32_e32 v30, vcc, v6, v4, vcc                    // 00000000253C: 383C0906
	s_cbranch_scc1 BB0_21                                      // 000000002540: BF8500FB
	s_nop 0                                                    // 000000002544: BF800000
	global_load_dword v4, v[29:30], off                        // 000000002548: DC508000 047F001D
	global_load_dword v3, v[27:28], off                        // 000000002550: DC508000 037F001B
	v_lshlrev_b32_e32 v6, 2, v0                                // 000000002558: 240C0082
	v_lshlrev_b32_e32 v5, 2, v2                                // 00000000255C: 240A0482
	v_lshlrev_b32_e32 v8, 2, v11                               // 000000002560: 24101682
	s_mul_i32 s0, s3, s4                                       // 000000002564: 92000403
	s_mul_i32 s1, s2, s4                                       // 000000002568: 92010402
	v_lshlrev_b32_e32 v9, 2, v10                               // 00000000256C: 24121482
	s_lshl_b64 s[6:7], s[2:3], 2                               // 000000002570: 8E868202
	v_mov_b32_e32 v13, s7                                      // 000000002574: 7E1A0207
	s_and_b32 s8, s29, -4                                      // 000000002578: 8608C41D
	v_add_u32_e32 v12, 0x480, v8                               // 00000000257C: 681810FF 00000480
	s_sub_u32 s10, 0, s8                                       // 000000002584: 808A0880
	v_or_b32_e32 v7, 1, v25                                    // 000000002588: 280E3281
	s_subb_u32 s11, 0, 0                                       // 00000000258C: 828B8080
	s_lshl_b64 s[8:9], s[8:9], 2                               // 000000002590: 8E888208
	v_or_b32_e32 v26, 0x300, v2                                // 000000002594: 283404FF 00000300
	v_or_b32_e32 v0, 0x200, v0                                 // 00000000259C: 280000FF 00000200
	v_or_b32_e32 v35, 0x100, v9                                // 0000000025A4: 284612FF 00000100
	v_or_b32_e32 v32, 0x500, v8                                // 0000000025AC: 284010FF 00000500
	s_cmp_lt_u32 s29, 8                                        // 0000000025B4: BF0A881D
	v_mov_b32_e32 v2, 0                                        // 0000000025B8: 7E040280
	s_waitcnt vmcnt(0)                                         // 0000000025BC: BF8C0F70
	ds_write_b32 v6, v3                                        // 0000000025C0: D81A0000 00000306
	ds_write_b32 v5, v4 offset:1024                            // 0000000025C8: D81A0400 00000405
	s_waitcnt lgkmcnt(0)                                       // 0000000025D0: BF8CC07F
	s_barrier                                                  // 0000000025D4: BF8A0000
	v_mov_b32_e32 v3, s4                                       // 0000000025D8: 7E060204
	v_mul_hi_u32 v3, s2, v3                                    // 0000000025DC: D2860003 00020602
	v_add_u32_e32 v5, 0x400, v8                                // 0000000025E4: 680A10FF 00000400
	s_waitcnt lgkmcnt(0)                                       // 0000000025EC: BF8CC07F
	ds_read2_b32 v[39:40], v9 offset1:16                       // 0000000025F0: D86E1000 27000009
	v_add_u32_e32 v4, s0, v3                                   // 0000000025F8: 68080600
	v_mov_b32_e32 v3, s1                                       // 0000000025FC: 7E060201
	ds_read2_b32 v[41:42], v5 offset1:16                       // 000000002600: D86E1000 29000005
	ds_read2_b32 v[37:38], v9 offset0:32 offset1:48            // 000000002608: D86E3020 25000009
	v_lshlrev_b64 v[5:6], 2, v[3:4]                            // 000000002610: D28F0005 00020682
	v_add_co_u32_e32 v3, vcc, s6, v27                          // 000000002618: 32063606
	v_addc_co_u32_e32 v13, vcc, v28, v13, vcc                  // 00000000261C: 381A1B1C
	v_add_co_u32_e32 v17, vcc, 16, v29                         // 000000002620: 32223A90
	v_addc_co_u32_e32 v19, vcc, 0, v30, vcc                    // 000000002624: 38263C80
	v_sub_co_u32_e32 v5, vcc, v3, v5                           // 000000002628: 340A0B03
	v_subb_co_u32_e32 v6, vcc, v13, v6, vcc                    // 00000000262C: 3A0C0D0D
	v_sub_co_u32_e64 v33, s[0:1], 0, s1                        // 000000002630: D11A0021 00000280
	ds_read2_b32 v[43:44], v12 offset1:16                      // 000000002638: D86E1000 2B00000C
	v_subb_co_u32_e64 v34, s[0:1], 0, v4, s[0:1]               // 000000002640: D11D0022 00020880
	v_cmp_eq_u32_e32 vcc, s4, v7                               // 000000002648: 7D940E04
	v_cndmask_b32_e32 v27, v3, v5, vcc                         // 00000000264C: 00360B03
	v_subrev_co_u32_e64 v4, s[0:1], s8, v17                    // 000000002650: D11B0004 00022208
	v_mov_b32_e32 v3, s9                                       // 000000002658: 7E060209
	v_subb_co_u32_e64 v3, s[0:1], v19, v3, s[0:1]              // 00000000265C: D11D0003 00020713
	v_cndmask_b32_e32 v28, v13, v6, vcc                        // 000000002664: 00380D0D
	v_cndmask_b32_e32 v30, v19, v3, vcc                        // 000000002668: 003C0713
	v_cndmask_b32_e32 v29, v17, v4, vcc                        // 00000000266C: 003A0911
	s_cbranch_scc1 BB0_22                                      // 000000002670: BF8500C0
	v_mov_b32_e32 v2, 0                                        // 000000002674: 7E040280
	s_lshl_b64 s[0:1], s[10:11], 2                             // 000000002678: 8E80820A
	v_add_u32_e32 v36, 2, v25                                  // 00000000267C: 68483282
	s_movk_i32 s5, 0x200                                       // 000000002680: B0050200
	s_movk_i32 s8, 0x3ff                                       // 000000002684: B00803FF
	s_movk_i32 s9, 0x100                                       // 000000002688: B0090100
	s_mov_b32 s10, s4                                          // 00000000268C: BE8A0004
	v_mov_b32_e32 v3, v2                                       // 000000002690: 7E060302
	v_mov_b32_e32 v4, v2                                       // 000000002694: 7E080302
	v_mov_b32_e32 v5, v2                                       // 000000002698: 7E0A0302
	v_mov_b32_e32 v6, v2                                       // 00000000269C: 7E0C0302
	v_mov_b32_e32 v7, v2                                       // 0000000026A0: 7E0E0302
	v_mov_b32_e32 v8, v2                                       // 0000000026A4: 7E100302
	v_mov_b32_e32 v9, v2                                       // 0000000026A8: 7E120302
	v_mov_b32_e32 v12, v2                                      // 0000000026AC: 7E180302
	v_mov_b32_e32 v13, v2                                      // 0000000026B0: 7E1A0302
	v_mov_b32_e32 v20, v2                                      // 0000000026B4: 7E280302
	v_mov_b32_e32 v21, v2                                      // 0000000026B8: 7E2A0302
	v_mov_b32_e32 v19, v2                                      // 0000000026BC: 7E260302
	v_mov_b32_e32 v17, v2                                      // 0000000026C0: 7E220302
	v_mov_b32_e32 v23, v2                                      // 0000000026C4: 7E2E0302
	v_mov_b32_e32 v31, v10                                     // 0000000026C8: 7E3E030A
	v_mov_b32_e32 v24, v2                                      // 0000000026CC: 7E300302

00000000000026d0 BB0_20:
	global_load_dword v48, v[29:30], off                       // 0000000026D0: DC508000 307F001D
	global_load_dword v47, v[27:28], off                       // 0000000026D8: DC508000 2F7F001B
	ds_read2_b32 v[45:46], v35 offset1:16                      // 0000000026E0: D86E1000 2D000023
	s_waitcnt lgkmcnt(2)                                       // 0000000026E8: BF8CC27F
	v_mac_f32_e32 v24, v39, v41                                // 0000000026EC: 2C305327
	v_mac_f32_e32 v23, v40, v41                                // 0000000026F0: 2C2E5328
	v_mac_f32_e32 v17, v37, v41                                // 0000000026F4: 2C225325
	v_mac_f32_e32 v19, v38, v41                                // 0000000026F8: 2C265326
	v_mac_f32_e32 v21, v39, v42                                // 0000000026FC: 2C2A5527
	v_mac_f32_e32 v20, v40, v42                                // 000000002700: 2C285528
	v_mac_f32_e32 v13, v37, v42                                // 000000002704: 2C1A5525
	v_mac_f32_e32 v12, v38, v42                                // 000000002708: 2C185526
	ds_read2_b32 v[41:42], v32 offset1:16                      // 00000000270C: D86E1000 29000020
	s_waitcnt lgkmcnt(2)                                       // 000000002714: BF8CC27F
	v_mac_f32_e32 v9, v39, v43                                 // 000000002718: 2C125727
	v_mac_f32_e32 v8, v40, v43                                 // 00000000271C: 2C105728
	v_mac_f32_e32 v7, v37, v43                                 // 000000002720: 2C0E5725
	v_mac_f32_e32 v6, v38, v43                                 // 000000002724: 2C0C5726
	v_mac_f32_e32 v5, v39, v44                                 // 000000002728: 2C0A5927
	v_mac_f32_e32 v4, v40, v44                                 // 00000000272C: 2C085928
	ds_read2_b32 v[39:40], v35 offset0:32 offset1:48           // 000000002730: D86E3020 27000023
	v_mac_f32_e32 v3, v37, v44                                 // 000000002738: 2C065925
	v_mac_f32_e32 v2, v38, v44                                 // 00000000273C: 2C045926
	ds_read2_b32 v[37:38], v32 offset0:32 offset1:48           // 000000002740: D86E3020 25000020
	ds_read2_b32 v[43:44], v35 offset0:64 offset1:80           // 000000002748: D86E5040 2B000023
	s_waitcnt lgkmcnt(3)                                       // 000000002750: BF8CC37F
	v_mac_f32_e32 v24, v45, v41                                // 000000002754: 2C30532D
	v_mac_f32_e32 v23, v46, v41                                // 000000002758: 2C2E532E
	s_waitcnt lgkmcnt(2)                                       // 00000000275C: BF8CC27F
	v_mac_f32_e32 v17, v39, v41                                // 000000002760: 2C225327
	v_mac_f32_e32 v19, v40, v41                                // 000000002764: 2C265328
	v_mac_f32_e32 v21, v45, v42                                // 000000002768: 2C2A552D
	v_mac_f32_e32 v20, v46, v42                                // 00000000276C: 2C28552E
	v_mac_f32_e32 v13, v39, v42                                // 000000002770: 2C1A5527
	v_mac_f32_e32 v12, v40, v42                                // 000000002774: 2C185528
	ds_read2_b32 v[41:42], v32 offset0:64 offset1:80           // 000000002778: D86E5040 29000020
	s_waitcnt lgkmcnt(2)                                       // 000000002780: BF8CC27F
	v_mac_f32_e32 v9, v45, v37                                 // 000000002784: 2C124B2D
	v_mac_f32_e32 v8, v46, v37                                 // 000000002788: 2C104B2E
	v_mac_f32_e32 v5, v45, v38                                 // 00000000278C: 2C0A4D2D
	v_mac_f32_e32 v4, v46, v38                                 // 000000002790: 2C084D2E
	ds_read2_b32 v[45:46], v35 offset0:96 offset1:112          // 000000002794: D86E7060 2D000023
	v_mac_f32_e32 v7, v39, v37                                 // 00000000279C: 2C0E4B27
	v_mac_f32_e32 v6, v40, v37                                 // 0000000027A0: 2C0C4B28
	v_mac_f32_e32 v3, v39, v38                                 // 0000000027A4: 2C064D27
	v_mac_f32_e32 v2, v40, v38                                 // 0000000027A8: 2C044D28
	ds_read2_b32 v[37:38], v32 offset0:96 offset1:112          // 0000000027AC: D86E7060 25000020
	v_lshlrev_b32_e32 v49, 2, v0                               // 0000000027B4: 24620082
	v_lshlrev_b32_e32 v50, 2, v26                              // 0000000027B8: 24643482
	ds_read2_b32 v[39:40], v35 offset0:128 offset1:144         // 0000000027BC: D86E9080 27000023
	s_waitcnt lgkmcnt(3)                                       // 0000000027C4: BF8CC37F
	v_mac_f32_e32 v24, v43, v41                                // 0000000027C8: 2C30532B
	v_mac_f32_e32 v23, v44, v41                                // 0000000027CC: 2C2E532C
	s_waitcnt lgkmcnt(2)                                       // 0000000027D0: BF8CC27F
	v_mac_f32_e32 v17, v45, v41                                // 0000000027D4: 2C22532D
	v_mac_f32_e32 v19, v46, v41                                // 0000000027D8: 2C26532E
	v_mac_f32_e32 v21, v43, v42                                // 0000000027DC: 2C2A552B
	v_mac_f32_e32 v20, v44, v42                                // 0000000027E0: 2C28552C
	v_mac_f32_e32 v13, v45, v42                                // 0000000027E4: 2C1A552D
	v_mac_f32_e32 v12, v46, v42                                // 0000000027E8: 2C18552E
	s_waitcnt lgkmcnt(1)                                       // 0000000027EC: BF8CC17F
	v_mac_f32_e32 v9, v43, v37                                 // 0000000027F0: 2C124B2B
	v_mac_f32_e32 v8, v44, v37                                 // 0000000027F4: 2C104B2C
	v_mac_f32_e32 v5, v43, v38                                 // 0000000027F8: 2C0A4D2B
	v_mac_f32_e32 v4, v44, v38                                 // 0000000027FC: 2C084D2C
	ds_read2_b32 v[41:42], v32 offset0:128 offset1:144         // 000000002800: D86E9080 29000020
	ds_read2_b32 v[43:44], v35 offset0:160 offset1:176         // 000000002808: D86EB0A0 2B000023
	v_mac_f32_e32 v7, v45, v37                                 // 000000002810: 2C0E4B2D
	v_mac_f32_e32 v6, v46, v37                                 // 000000002814: 2C0C4B2E
	v_mac_f32_e32 v3, v45, v38                                 // 000000002818: 2C064D2D
	v_mac_f32_e32 v2, v46, v38                                 // 00000000281C: 2C044D2E
	ds_read2_b32 v[37:38], v32 offset0:160 offset1:176         // 000000002820: D86EB0A0 25000020
	v_add_co_u32_e32 v29, vcc, 16, v29                         // 000000002828: 323A3A90
	v_addc_co_u32_e32 v30, vcc, 0, v30, vcc                    // 00000000282C: 383C3C80
	v_mov_b32_e32 v51, s7                                      // 000000002830: 7E660207
	v_add_co_u32_e32 v27, vcc, s6, v27                         // 000000002834: 32363606
	v_lshlrev_b64 v[45:46], 2, v[33:34]                        // 000000002838: D28F002D 00024282
	v_addc_co_u32_e32 v28, vcc, v28, v51, vcc                  // 000000002840: 3838671C
	v_add_co_u32_e32 v35, vcc, v27, v45                        // 000000002844: 32465B1B
	v_addc_co_u32_e32 v45, vcc, v28, v46, vcc                  // 000000002848: 385A5D1C
	v_mov_b32_e32 v32, s1                                      // 00000000284C: 7E400201
	v_add_co_u32_e32 v46, vcc, s0, v29                         // 000000002850: 325C3A00
	v_add_u32_e32 v31, s5, v31                                 // 000000002854: 683E3E05
	v_add_u32_e32 v14, s5, v14                                 // 000000002858: 681C1C05
	v_addc_co_u32_e32 v32, vcc, v30, v32, vcc                  // 00000000285C: 3840411E
	v_cmp_eq_u32_e32 vcc, s10, v36                             // 000000002860: 7D94480A
	v_and_b32_e32 v14, s8, v14                                 // 000000002864: 261C1C08
	v_and_b32_e32 v31, s8, v31                                 // 000000002868: 263E3E08
	v_cndmask_b32_e32 v28, v28, v45, vcc                       // 00000000286C: 00385B1C
	s_waitcnt vmcnt(0)                                         // 000000002870: BF8C0F70
	ds_write_b32 v49, v47                                      // 000000002874: D81A0000 00002F31
	ds_write_b32 v50, v48                                      // 00000000287C: D81A0000 00003032
	s_waitcnt lgkmcnt(0)                                       // 000000002884: BF8CC07F
	s_barrier                                                  // 000000002888: BF8A0000
	v_lshlrev_b32_e32 v45, 2, v31                              // 00000000288C: 245A3E82
	v_lshlrev_b32_e32 v51, 2, v14                              // 000000002890: 24661C82
	v_mac_f32_e32 v24, v39, v41                                // 000000002894: 2C305327
	v_mac_f32_e32 v23, v40, v41                                // 000000002898: 2C2E5328
	v_mac_f32_e32 v17, v43, v41                                // 00000000289C: 2C22532B
	v_mac_f32_e32 v19, v44, v41                                // 0000000028A0: 2C26532C
	v_mac_f32_e32 v21, v39, v42                                // 0000000028A4: 2C2A5527
	v_mac_f32_e32 v20, v40, v42                                // 0000000028A8: 2C285528
	v_mac_f32_e32 v13, v43, v42                                // 0000000028AC: 2C1A552B
	v_mac_f32_e32 v12, v44, v42                                // 0000000028B0: 2C18552C
	v_mac_f32_e32 v9, v39, v37                                 // 0000000028B4: 2C124B27
	v_mac_f32_e32 v8, v40, v37                                 // 0000000028B8: 2C104B28
	v_mac_f32_e32 v5, v39, v38                                 // 0000000028BC: 2C0A4D27
	v_mac_f32_e32 v4, v40, v38                                 // 0000000028C0: 2C084D28
	v_mac_f32_e32 v7, v43, v37                                 // 0000000028C4: 2C0E4B2B
	v_mac_f32_e32 v6, v44, v37                                 // 0000000028C8: 2C0C4B2C
	v_mac_f32_e32 v3, v43, v38                                 // 0000000028CC: 2C064D2B
	v_mac_f32_e32 v2, v44, v38                                 // 0000000028D0: 2C044D2C
	s_waitcnt lgkmcnt(0)                                       // 0000000028D4: BF8CC07F
	ds_read2_b32 v[39:40], v45 offset1:16                      // 0000000028D8: D86E1000 2700002D
	ds_read2_b32 v[37:38], v45 offset0:32 offset1:48           // 0000000028E0: D86E3020 2500002D
	ds_read2_b32 v[41:42], v51 offset1:16                      // 0000000028E8: D86E1000 29000033
	ds_read2_b32 v[43:44], v51 offset0:32 offset1:48           // 0000000028F0: D86E3020 2B000033
	s_add_i32 s11, s10, -1                                     // 0000000028F8: 810BC10A
	v_add_u32_e32 v0, s5, v0                                   // 0000000028FC: 68000005
	v_add_u32_e32 v26, s5, v26                                 // 000000002900: 68343405
	v_cndmask_b32_e32 v27, v27, v35, vcc                       // 000000002904: 0036471B
	v_cndmask_b32_e32 v30, v30, v32, vcc                       // 000000002908: 003C411E
	v_and_b32_e32 v0, s8, v0                                   // 00000000290C: 26000008
	v_and_b32_e32 v26, s8, v26                                 // 000000002910: 26343408
	s_mov_b32 s10, s11                                         // 000000002914: BE8A000B
	v_cndmask_b32_e32 v29, v29, v46, vcc                       // 000000002918: 003A5D1D
	v_add_u32_e32 v35, s9, v45                                 // 00000000291C: 68465A09
	v_add_u32_e32 v32, s9, v51                                 // 000000002920: 68406609
	s_cmp_gt_u32 s11, 1                                        // 000000002924: BF08810B
	s_cbranch_scc1 BB0_20                                      // 000000002928: BF85FF69
	s_branch BB0_23                                            // 00000000292C: BF820021

0000000000002930 BB0_21:
	v_mov_b32_e32 v31, v10                                     // 000000002930: 7E3E030A
	v_mov_b32_e32 v23, v24                                     // 000000002934: 7E2E0318
	v_mov_b32_e32 v17, v24                                     // 000000002938: 7E220318
	v_mov_b32_e32 v19, v24                                     // 00000000293C: 7E260318
	v_mov_b32_e32 v21, v24                                     // 000000002940: 7E2A0318
	v_mov_b32_e32 v20, v24                                     // 000000002944: 7E280318
	v_mov_b32_e32 v13, v24                                     // 000000002948: 7E1A0318
	v_mov_b32_e32 v12, v24                                     // 00000000294C: 7E180318
	v_mov_b32_e32 v9, v24                                      // 000000002950: 7E120318
	v_mov_b32_e32 v8, v24                                      // 000000002954: 7E100318
	v_mov_b32_e32 v7, v24                                      // 000000002958: 7E0E0318
	v_mov_b32_e32 v6, v24                                      // 00000000295C: 7E0C0318
	v_mov_b32_e32 v5, v24                                      // 000000002960: 7E0A0318
	v_mov_b32_e32 v4, v24                                      // 000000002964: 7E080318
	v_mov_b32_e32 v3, v24                                      // 000000002968: 7E060318
	v_mov_b32_e32 v2, v24                                      // 00000000296C: 7E040318
	s_branch BB0_24                                            // 000000002970: BF820073

0000000000002974 BB0_22:
	v_mov_b32_e32 v3, v2                                       // 000000002974: 7E060302
	v_mov_b32_e32 v4, v2                                       // 000000002978: 7E080302
	v_mov_b32_e32 v5, v2                                       // 00000000297C: 7E0A0302
	v_mov_b32_e32 v6, v2                                       // 000000002980: 7E0C0302
	v_mov_b32_e32 v7, v2                                       // 000000002984: 7E0E0302
	v_mov_b32_e32 v8, v2                                       // 000000002988: 7E100302
	v_mov_b32_e32 v9, v2                                       // 00000000298C: 7E120302
	v_mov_b32_e32 v12, v2                                      // 000000002990: 7E180302
	v_mov_b32_e32 v13, v2                                      // 000000002994: 7E1A0302
	v_mov_b32_e32 v20, v2                                      // 000000002998: 7E280302
	v_mov_b32_e32 v21, v2                                      // 00000000299C: 7E2A0302
	v_mov_b32_e32 v19, v2                                      // 0000000029A0: 7E260302
	v_mov_b32_e32 v17, v2                                      // 0000000029A4: 7E220302
	v_mov_b32_e32 v23, v2                                      // 0000000029A8: 7E2E0302
	v_mov_b32_e32 v24, v2                                      // 0000000029AC: 7E300302
	v_mov_b32_e32 v31, v10                                     // 0000000029B0: 7E3E030A

00000000000029b4 BB0_23:
	s_waitcnt lgkmcnt(1)                                       // 0000000029B4: BF8CC17F
	v_mac_f32_e32 v24, v39, v41                                // 0000000029B8: 2C305327
	v_mac_f32_e32 v17, v37, v41                                // 0000000029BC: 2C225325
	v_mac_f32_e32 v19, v38, v41                                // 0000000029C0: 2C265326
	v_mac_f32_e32 v21, v39, v42                                // 0000000029C4: 2C2A5527
	v_mac_f32_e32 v13, v37, v42                                // 0000000029C8: 2C1A5525
	v_mac_f32_e32 v12, v38, v42                                // 0000000029CC: 2C185526
	s_waitcnt lgkmcnt(0)                                       // 0000000029D0: BF8CC07F
	v_mac_f32_e32 v9, v39, v43                                 // 0000000029D4: 2C125727
	v_mac_f32_e32 v5, v39, v44                                 // 0000000029D8: 2C0A5927
	v_mac_f32_e32 v7, v37, v43                                 // 0000000029DC: 2C0E5725
	v_mac_f32_e32 v3, v37, v44                                 // 0000000029E0: 2C065925
	ds_read2_b32 v[33:34], v35 offset1:16                      // 0000000029E4: D86E1000 21000023
	ds_read2_b32 v[36:37], v32 offset1:16                      // 0000000029EC: D86E1000 24000020
	v_mac_f32_e32 v6, v38, v43                                 // 0000000029F4: 2C0C5726
	v_mac_f32_e32 v2, v38, v44                                 // 0000000029F8: 2C045926
	ds_read2_b32 v[38:39], v35 offset0:32 offset1:48           // 0000000029FC: D86E3020 26000023
	v_mac_f32_e32 v23, v40, v41                                // 000000002A04: 2C2E5328
	v_mac_f32_e32 v20, v40, v42                                // 000000002A08: 2C285528
	s_waitcnt lgkmcnt(1)                                       // 000000002A0C: BF8CC17F
	v_mac_f32_e32 v24, v33, v36                                // 000000002A10: 2C304921
	v_mac_f32_e32 v23, v34, v36                                // 000000002A14: 2C2E4922
	s_waitcnt lgkmcnt(0)                                       // 000000002A18: BF8CC07F
	v_mac_f32_e32 v17, v38, v36                                // 000000002A1C: 2C224926
	v_mac_f32_e32 v19, v39, v36                                // 000000002A20: 2C264927
	v_mac_f32_e32 v21, v33, v37                                // 000000002A24: 2C2A4B21
	v_mac_f32_e32 v20, v34, v37                                // 000000002A28: 2C284B22
	v_mac_f32_e32 v13, v38, v37                                // 000000002A2C: 2C1A4B26
	v_mac_f32_e32 v12, v39, v37                                // 000000002A30: 2C184B27
	ds_read2_b32 v[36:37], v32 offset0:32 offset1:48           // 000000002A34: D86E3020 24000020
	v_mac_f32_e32 v8, v40, v43                                 // 000000002A3C: 2C105728
	v_mac_f32_e32 v4, v40, v44                                 // 000000002A40: 2C085928
	s_waitcnt lgkmcnt(0)                                       // 000000002A44: BF8CC07F
	v_mac_f32_e32 v9, v33, v36                                 // 000000002A48: 2C124921
	v_mac_f32_e32 v8, v34, v36                                 // 000000002A4C: 2C104922
	v_mac_f32_e32 v5, v33, v37                                 // 000000002A50: 2C0A4B21
	v_mac_f32_e32 v4, v34, v37                                 // 000000002A54: 2C084B22
	v_mac_f32_e32 v7, v38, v36                                 // 000000002A58: 2C0E4926
	v_mac_f32_e32 v6, v39, v36                                 // 000000002A5C: 2C0C4927
	v_mac_f32_e32 v3, v38, v37                                 // 000000002A60: 2C064B26
	v_mac_f32_e32 v2, v39, v37                                 // 000000002A64: 2C044B27
	ds_read2_b32 v[33:34], v35 offset0:64 offset1:80           // 000000002A68: D86E5040 21000023
	ds_read2_b32 v[36:37], v32 offset0:64 offset1:80           // 000000002A70: D86E5040 24000020
	ds_read2_b32 v[38:39], v35 offset0:96 offset1:112          // 000000002A78: D86E7060 26000023
	s_waitcnt lgkmcnt(1)                                       // 000000002A80: BF8CC17F
	v_mac_f32_e32 v24, v33, v36                                // 000000002A84: 2C304921
	v_mac_f32_e32 v23, v34, v36                                // 000000002A88: 2C2E4922
	s_waitcnt lgkmcnt(0)                                       // 000000002A8C: BF8CC07F
	v_mac_f32_e32 v17, v38, v36                                // 000000002A90: 2C224926
	v_mac_f32_e32 v19, v39, v36                                // 000000002A94: 2C264927
	v_mac_f32_e32 v21, v33, v37                                // 000000002A98: 2C2A4B21
	v_mac_f32_e32 v20, v34, v37                                // 000000002A9C: 2C284B22
	v_mac_f32_e32 v13, v38, v37                                // 000000002AA0: 2C1A4B26
	v_mac_f32_e32 v12, v39, v37                                // 000000002AA4: 2C184B27
	ds_read2_b32 v[36:37], v32 offset0:96 offset1:112          // 000000002AA8: D86E7060 24000020
	s_waitcnt lgkmcnt(0)                                       // 000000002AB0: BF8CC07F
	v_mac_f32_e32 v9, v33, v36                                 // 000000002AB4: 2C124921
	v_mac_f32_e32 v8, v34, v36                                 // 000000002AB8: 2C104922
	v_mac_f32_e32 v5, v33, v37                                 // 000000002ABC: 2C0A4B21
	v_mac_f32_e32 v4, v34, v37                                 // 000000002AC0: 2C084B22
	v_mac_f32_e32 v7, v38, v36                                 // 000000002AC4: 2C0E4926
	v_mac_f32_e32 v6, v39, v36                                 // 000000002AC8: 2C0C4927
	v_mac_f32_e32 v3, v38, v37                                 // 000000002ACC: 2C064B26
	v_mac_f32_e32 v2, v39, v37                                 // 000000002AD0: 2C044B27
	ds_read2_b32 v[33:34], v35 offset0:128 offset1:144         // 000000002AD4: D86E9080 21000023
	ds_read2_b32 v[36:37], v32 offset0:128 offset1:144         // 000000002ADC: D86E9080 24000020
	ds_read2_b32 v[38:39], v35 offset0:160 offset1:176         // 000000002AE4: D86EB0A0 26000023
	s_waitcnt lgkmcnt(1)                                       // 000000002AEC: BF8CC17F
	v_mac_f32_e32 v24, v33, v36                                // 000000002AF0: 2C304921
	v_mac_f32_e32 v23, v34, v36                                // 000000002AF4: 2C2E4922
	s_waitcnt lgkmcnt(0)                                       // 000000002AF8: BF8CC07F
	v_mac_f32_e32 v17, v38, v36                                // 000000002AFC: 2C224926
	v_mac_f32_e32 v19, v39, v36                                // 000000002B00: 2C264927
	ds_read2_b32 v[35:36], v32 offset0:160 offset1:176         // 000000002B04: D86EB0A0 23000020
	v_mac_f32_e32 v21, v33, v37                                // 000000002B0C: 2C2A4B21
	v_mac_f32_e32 v20, v34, v37                                // 000000002B10: 2C284B22
	v_mac_f32_e32 v13, v38, v37                                // 000000002B14: 2C1A4B26
	v_mac_f32_e32 v12, v39, v37                                // 000000002B18: 2C184B27
	s_waitcnt lgkmcnt(0)                                       // 000000002B1C: BF8CC07F
	v_mac_f32_e32 v9, v33, v35                                 // 000000002B20: 2C124721
	v_mac_f32_e32 v8, v34, v35                                 // 000000002B24: 2C104722
	v_mac_f32_e32 v5, v33, v36                                 // 000000002B28: 2C0A4921
	v_mac_f32_e32 v4, v34, v36                                 // 000000002B2C: 2C084922
	v_mac_f32_e32 v7, v38, v35                                 // 000000002B30: 2C0E4726
	v_mac_f32_e32 v6, v39, v35                                 // 000000002B34: 2C0C4727
	v_mac_f32_e32 v3, v38, v36                                 // 000000002B38: 2C064926
	v_mac_f32_e32 v2, v39, v36                                 // 000000002B3C: 2C044927

0000000000002b40 BB0_24:
	s_and_b32 s0, s29, 3                                       // 000000002B40: 8600831D
	v_mov_b32_e32 v33, 0                                       // 000000002B44: 7E420280
	v_cmp_gt_u32_e32 vcc, s0, v22                              // 000000002B48: 7D982C00
	v_sub_u32_e32 v32, s4, v25                                 // 000000002B4C: 6A403204
	v_mov_b32_e32 v22, v33                                     // 000000002B50: 7E2C0321
	s_and_saveexec_b64 s[4:5], vcc                             // 000000002B54: BE84206A
	s_cbranch_execz BB0_26                                     // 000000002B58: BF88000F

0000000000002b5c BB0_25:
	v_mul_lo_u32 v22, s3, v32                                  // 000000002B5C: D2850016 00024003
	v_mul_hi_u32 v25, s2, v32                                  // 000000002B64: D2860019 00024002
	v_mul_lo_u32 v34, s2, v32                                  // 000000002B6C: D2850022 00024002
	v_add_u32_e32 v35, v25, v22                                // 000000002B74: 68462D19
	v_lshlrev_b64 v[34:35], 2, v[34:35]                        // 000000002B78: D28F0022 00024482
	v_add_co_u32_e32 v27, vcc, v27, v34                        // 000000002B80: 3236451B
	v_addc_co_u32_e32 v28, vcc, v28, v35, vcc                  // 000000002B84: 3838471C
	s_nop 0                                                    // 000000002B88: BF800000
	s_nop 0                                                    // 000000002B8C: BF800000
	global_load_dword v22, v[27:28], off                       // 000000002B90: DC508000 167F001B

0000000000002b98 BB0_26:
	s_or_b64 exec, exec, s[4:5]                                // 000000002B98: 87FE047E
	v_cmp_gt_u32_e32 vcc, s0, v18                              // 000000002B9C: 7D982400
	v_mov_b32_e32 v18, 0                                       // 000000002BA0: 7E240280
	s_and_saveexec_b64 s[2:3], vcc                             // 000000002BA4: BE82206A
	s_cbranch_execz BB0_28                                     // 000000002BA8: BF880008

0000000000002bac BB0_27:
	v_lshlrev_b64 v[27:28], 4, v[32:33]                        // 000000002BAC: D28F001B 00024084
	v_add_co_u32_e32 v27, vcc, v29, v27                        // 000000002BB4: 3236371D
	v_addc_co_u32_e32 v28, vcc, v30, v28, vcc                  // 000000002BB8: 3838391E
	s_nop 0                                                    // 000000002BBC: BF800000
	s_nop 0                                                    // 000000002BC0: BF800000
	global_load_dword v18, v[27:28], off                       // 000000002BC4: DC508000 127F001B

0000000000002bcc BB0_28:
	s_or_b64 exec, exec, s[2:3]                                // 000000002BCC: 87FE027E
	s_movk_i32 s1, 0x1ff                                       // 000000002BD0: B00101FF
	v_and_b32_e32 v0, s1, v0                                   // 000000002BD4: 26000001
	v_and_b32_e32 v25, s1, v26                                 // 000000002BD8: 26323401
	v_lshlrev_b32_e32 v0, 2, v0                                // 000000002BDC: 24000082
	v_lshlrev_b32_e32 v25, 2, v25                              // 000000002BE0: 24323282
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002BE4: BF8C0070
	s_barrier                                                  // 000000002BE8: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002BEC: BF8CC07F
	ds_write_b32 v0, v22                                       // 000000002BF0: D81A0000 00001600
	ds_write_b32 v25, v18                                      // 000000002BF8: D81A0000 00001219
	s_waitcnt lgkmcnt(0)                                       // 000000002C00: BF8CC07F
	s_barrier                                                  // 000000002C04: BF8A0000
	s_cmp_eq_u32 s0, 0                                         // 000000002C08: BF068000
	s_waitcnt lgkmcnt(0)                                       // 000000002C0C: BF8CC07F
	s_cbranch_scc1 BB0_31                                      // 000000002C10: BF850025
	v_and_b32_e32 v0, s1, v14                                  // 000000002C14: 26001C01
	v_and_b32_e32 v14, s1, v31                                 // 000000002C18: 261C3E01
	v_mov_b32_e32 v18, s0                                      // 000000002C1C: 7E240200
	v_lshlrev_b32_e32 v0, 2, v0                                // 000000002C20: 24000082
	v_lshlrev_b32_e32 v14, 2, v14                              // 000000002C24: 241C1C82
	s_movk_i32 s0, 0x100                                       // 000000002C28: B0000100

0000000000002c2c BB0_30:
	ds_read2_b32 v[27:28], v0 offset1:16                       // 000000002C2C: D86E1000 1B000000
	ds_read2_b32 v[29:30], v14 offset0:32 offset1:48           // 000000002C34: D86E3020 1D00000E
	ds_read2_b32 v[31:32], v0 offset0:32 offset1:48            // 000000002C3C: D86E3020 1F000000
	ds_read2_b32 v[25:26], v14 offset1:16                      // 000000002C44: D86E1000 1900000E
	v_add_u32_e32 v18, -1, v18                                 // 000000002C4C: 682424C1
	v_cmp_ne_u32_e32 vcc, 0, v18                               // 000000002C50: 7D9A2480
	v_add_u32_e32 v14, s0, v14                                 // 000000002C54: 681C1C00
	v_add_u32_e32 v0, s0, v0                                   // 000000002C58: 68000000
	s_and_b64 vcc, exec, vcc                                   // 000000002C5C: 86EA6A7E
	s_waitcnt lgkmcnt(0)                                       // 000000002C60: BF8CC07F
	v_mac_f32_e32 v24, v25, v27                                // 000000002C64: 2C303719
	v_mac_f32_e32 v23, v26, v27                                // 000000002C68: 2C2E371A
	v_mac_f32_e32 v17, v29, v27                                // 000000002C6C: 2C22371D
	v_mac_f32_e32 v19, v30, v27                                // 000000002C70: 2C26371E
	v_mac_f32_e32 v21, v25, v28                                // 000000002C74: 2C2A3919
	v_mac_f32_e32 v20, v26, v28                                // 000000002C78: 2C28391A
	v_mac_f32_e32 v13, v29, v28                                // 000000002C7C: 2C1A391D
	v_mac_f32_e32 v12, v30, v28                                // 000000002C80: 2C18391E
	v_mac_f32_e32 v9, v25, v31                                 // 000000002C84: 2C123F19
	v_mac_f32_e32 v8, v26, v31                                 // 000000002C88: 2C103F1A
	v_mac_f32_e32 v5, v25, v32                                 // 000000002C8C: 2C0A4119
	v_mac_f32_e32 v4, v26, v32                                 // 000000002C90: 2C08411A
	v_mac_f32_e32 v7, v29, v31                                 // 000000002C94: 2C0E3F1D
	v_mac_f32_e32 v6, v30, v31                                 // 000000002C98: 2C0C3F1E
	v_mac_f32_e32 v3, v29, v32                                 // 000000002C9C: 2C06411D
	v_mac_f32_e32 v2, v30, v32                                 // 000000002CA0: 2C04411E
	s_cbranch_vccnz BB0_30                                     // 000000002CA4: BF87FFE1

0000000000002ca8 BB0_31:
	v_or_b32_e32 v10, v15, v10                                 // 000000002CA8: 2814150F
	v_or_b32_e32 v0, v16, v11                                  // 000000002CAC: 28001710
	v_cmp_gt_u32_e64 s[6:7], s26, v10                          // 000000002CB0: D0CC0006 0002141A
	v_cmp_gt_u32_e64 s[8:9], s27, v0                           // 000000002CB8: D0CC0008 0002001B
	s_and_b64 s[2:3], s[6:7], s[8:9]                           // 000000002CC0: 86820806
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002CC4: BE802002
	s_cbranch_execz BB0_35                                     // 000000002CC8: BF880022

0000000000002ccc BB0_32:
	v_cmp_neq_f32_e64 s[2:3], s17, 0                           // 000000002CCC: D04D0002 00010011
	v_mul_f32_e32 v14, s16, v24                                // 000000002CD4: 0A1C3010
	v_mov_b32_e32 v11, 0                                       // 000000002CD8: 7E160280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002CDC: 86EA027E
	s_cbranch_vccz BB0_34                                      // 000000002CE0: BF86000F
	v_mad_u64_u32 v[15:16], s[2:3], v1, s21, v[10:11]          // 000000002CE4: D1E8020F 04282B01
	v_mov_b32_e32 v18, s15                                     // 000000002CEC: 7E24020F
	v_mad_u64_u32 v[15:16], s[2:3], v0, s20, v[15:16]          // 000000002CF0: D1E8020F 043C2900
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002CF8: D28F000F 00021E82
	v_add_co_u32_e32 v15, vcc, s14, v15                        // 000000002D00: 321E1E0E
	v_addc_co_u32_e32 v16, vcc, v18, v16, vcc                  // 000000002D04: 38202112
	s_nop 0                                                    // 000000002D08: BF800000
	s_nop 0                                                    // 000000002D0C: BF800000
	global_load_dword v15, v[15:16], off                       // 000000002D10: DC508000 0F7F000F
	s_waitcnt vmcnt(0)                                         // 000000002D18: BF8C0F70
	v_mac_f32_e32 v14, s17, v15                                // 000000002D1C: 2C1C1E11

0000000000002d20 BB0_34:
	v_mad_u64_u32 v[15:16], s[2:3], v1, s19, v[10:11]          // 000000002D20: D1E8020F 04282701
	v_mov_b32_e32 v11, s13                                     // 000000002D28: 7E16020D
	v_mad_u64_u32 v[15:16], s[2:3], v0, s18, v[15:16]          // 000000002D2C: D1E8020F 043C2500
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002D34: D28F000F 00021E82
	v_add_co_u32_e32 v15, vcc, s12, v15                        // 000000002D3C: 321E1E0C
	v_addc_co_u32_e32 v16, vcc, v11, v16, vcc                  // 000000002D40: 3820210B
	s_nop 0                                                    // 000000002D44: BF800000
	s_nop 0                                                    // 000000002D48: BF800000
	global_store_dword v[15:16], v14, off                      // 000000002D4C: DC708000 007F0E0F

0000000000002d54 BB0_35:
	s_or_b64 exec, exec, s[0:1]                                // 000000002D54: 87FE007E
	v_or_b32_e32 v14, 16, v10                                  // 000000002D58: 281C1490
	v_cmp_gt_u32_e64 s[0:1], s26, v14                          // 000000002D5C: D0CC0000 00021C1A
	s_and_b64 s[4:5], s[0:1], s[8:9]                           // 000000002D64: 86840800
	s_and_saveexec_b64 s[2:3], s[4:5]                          // 000000002D68: BE822004
	s_cbranch_execz BB0_39                                     // 000000002D6C: BF880024

0000000000002d70 BB0_36:
	v_cmp_neq_f32_e64 s[4:5], s17, 0                           // 000000002D70: D04D0004 00010011
	v_mul_f32_e32 v11, s16, v23                                // 000000002D78: 0A162E10
	v_mov_b32_e32 v15, 0                                       // 000000002D7C: 7E1E0280
	s_and_b64 vcc, exec, s[4:5]                                // 000000002D80: 86EA047E
	s_cbranch_vccz BB0_38                                      // 000000002D84: BF860011
	v_mov_b32_e32 v22, v10                                     // 000000002D88: 7E2C030A
	v_mov_b32_e32 v23, v15                                     // 000000002D8C: 7E2E030F
	v_mad_u64_u32 v[22:23], s[4:5], v1, s21, v[22:23]          // 000000002D90: D1E80416 04582B01
	v_mov_b32_e32 v16, s15                                     // 000000002D98: 7E20020F
	v_mad_u64_u32 v[22:23], s[4:5], v0, s20, v[22:23]          // 000000002D9C: D1E80416 04582900
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002DA4: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s14, v22                        // 000000002DAC: 322C2C0E
	v_addc_co_u32_e32 v23, vcc, v16, v23, vcc                  // 000000002DB0: 382E2F10
	s_nop 0                                                    // 000000002DB4: BF800000
	s_nop 0                                                    // 000000002DB8: BF800000
	global_load_dword v16, v[22:23], off offset:64             // 000000002DBC: DC508040 107F0016
	s_waitcnt vmcnt(0)                                         // 000000002DC4: BF8C0F70
	v_mac_f32_e32 v11, s17, v16                                // 000000002DC8: 2C162011

0000000000002dcc BB0_38:
	v_mad_u64_u32 v[15:16], s[4:5], v1, s19, v[14:15]          // 000000002DCC: D1E8040F 04382701
	v_mov_b32_e32 v18, s13                                     // 000000002DD4: 7E24020D
	v_mad_u64_u32 v[15:16], s[4:5], v0, s18, v[15:16]          // 000000002DD8: D1E8040F 043C2500
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002DE0: D28F000F 00021E82
	v_add_co_u32_e32 v15, vcc, s12, v15                        // 000000002DE8: 321E1E0C
	v_addc_co_u32_e32 v16, vcc, v18, v16, vcc                  // 000000002DEC: 38202112
	s_nop 0                                                    // 000000002DF0: BF800000
	s_nop 0                                                    // 000000002DF4: BF800000
	global_store_dword v[15:16], v11, off                      // 000000002DF8: DC708000 007F0B0F

0000000000002e00 BB0_39:
	s_or_b64 exec, exec, s[2:3]                                // 000000002E00: 87FE027E
	v_or_b32_e32 v16, 32, v10                                  // 000000002E04: 282014A0
	v_cmp_gt_u32_e64 s[2:3], s26, v16                          // 000000002E08: D0CC0002 0002201A
	s_and_b64 s[10:11], s[2:3], s[8:9]                         // 000000002E10: 868A0802
	s_and_saveexec_b64 s[4:5], s[10:11]                        // 000000002E14: BE84200A
	s_cbranch_execz BB0_43                                     // 000000002E18: BF880024

0000000000002e1c BB0_40:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000002E1C: D04D000A 00010011
	v_mul_f32_e32 v11, s16, v17                                // 000000002E24: 0A162210
	v_mov_b32_e32 v17, 0                                       // 000000002E28: 7E220280
	s_and_b64 vcc, exec, s[10:11]                              // 000000002E2C: 86EA0A7E
	s_cbranch_vccz BB0_42                                      // 000000002E30: BF860011
	v_mov_b32_e32 v22, v10                                     // 000000002E34: 7E2C030A
	v_mov_b32_e32 v23, v17                                     // 000000002E38: 7E2E0311
	v_mad_u64_u32 v[22:23], s[10:11], v1, s21, v[22:23]        // 000000002E3C: D1E80A16 04582B01
	v_mov_b32_e32 v15, s15                                     // 000000002E44: 7E1E020F
	v_mad_u64_u32 v[22:23], s[10:11], v0, s20, v[22:23]        // 000000002E48: D1E80A16 04582900
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002E50: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s14, v22                        // 000000002E58: 322C2C0E
	v_addc_co_u32_e32 v23, vcc, v15, v23, vcc                  // 000000002E5C: 382E2F0F
	s_nop 0                                                    // 000000002E60: BF800000
	s_nop 0                                                    // 000000002E64: BF800000
	global_load_dword v15, v[22:23], off offset:128            // 000000002E68: DC508080 0F7F0016
	s_waitcnt vmcnt(0)                                         // 000000002E70: BF8C0F70
	v_mac_f32_e32 v11, s17, v15                                // 000000002E74: 2C161E11

0000000000002e78 BB0_42:
	v_mad_u64_u32 v[17:18], s[10:11], v1, s19, v[16:17]        // 000000002E78: D1E80A11 04402701
	v_mov_b32_e32 v15, s13                                     // 000000002E80: 7E1E020D
	v_mad_u64_u32 v[17:18], s[10:11], v0, s18, v[17:18]        // 000000002E84: D1E80A11 04442500
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002E8C: D28F0011 00022282
	v_add_co_u32_e32 v17, vcc, s12, v17                        // 000000002E94: 3222220C
	v_addc_co_u32_e32 v18, vcc, v15, v18, vcc                  // 000000002E98: 3824250F
	s_nop 0                                                    // 000000002E9C: BF800000
	s_nop 0                                                    // 000000002EA0: BF800000
	global_store_dword v[17:18], v11, off                      // 000000002EA4: DC708000 007F0B11

0000000000002eac BB0_43:
	s_or_b64 exec, exec, s[4:5]                                // 000000002EAC: 87FE047E
	v_or_b32_e32 v18, 48, v10                                  // 000000002EB0: 282414B0
	v_cmp_gt_u32_e64 s[4:5], s26, v18                          // 000000002EB4: D0CC0004 0002241A
	s_and_b64 s[10:11], s[4:5], s[8:9]                         // 000000002EBC: 868A0804
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 000000002EC0: BE88200A
	s_cbranch_execz BB0_47                                     // 000000002EC4: BF880024

0000000000002ec8 BB0_44:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000002EC8: D04D000A 00010011
	v_mul_f32_e32 v11, s16, v19                                // 000000002ED0: 0A162610
	v_mov_b32_e32 v19, 0                                       // 000000002ED4: 7E260280
	s_and_b64 vcc, exec, s[10:11]                              // 000000002ED8: 86EA0A7E
	s_cbranch_vccz BB0_46                                      // 000000002EDC: BF860011
	v_mov_b32_e32 v22, v10                                     // 000000002EE0: 7E2C030A
	v_mov_b32_e32 v23, v19                                     // 000000002EE4: 7E2E0313
	v_mad_u64_u32 v[22:23], s[10:11], v1, s21, v[22:23]        // 000000002EE8: D1E80A16 04582B01
	v_mov_b32_e32 v15, s15                                     // 000000002EF0: 7E1E020F
	v_mad_u64_u32 v[22:23], s[10:11], v0, s20, v[22:23]        // 000000002EF4: D1E80A16 04582900
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002EFC: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s14, v22                        // 000000002F04: 322C2C0E
	v_addc_co_u32_e32 v23, vcc, v15, v23, vcc                  // 000000002F08: 382E2F0F
	s_nop 0                                                    // 000000002F0C: BF800000
	s_nop 0                                                    // 000000002F10: BF800000
	global_load_dword v15, v[22:23], off offset:192            // 000000002F14: DC5080C0 0F7F0016
	s_waitcnt vmcnt(0)                                         // 000000002F1C: BF8C0F70
	v_mac_f32_e32 v11, s17, v15                                // 000000002F20: 2C161E11

0000000000002f24 BB0_46:
	v_mad_u64_u32 v[22:23], s[10:11], v1, s19, v[18:19]        // 000000002F24: D1E80A16 04482701
	v_mov_b32_e32 v15, s13                                     // 000000002F2C: 7E1E020D
	v_mad_u64_u32 v[22:23], s[10:11], v0, s18, v[22:23]        // 000000002F30: D1E80A16 04582500
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002F38: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s12, v22                        // 000000002F40: 322C2C0C
	v_addc_co_u32_e32 v23, vcc, v15, v23, vcc                  // 000000002F44: 382E2F0F
	s_nop 0                                                    // 000000002F48: BF800000
	s_nop 0                                                    // 000000002F4C: BF800000
	global_store_dword v[22:23], v11, off                      // 000000002F50: DC708000 007F0B16

0000000000002f58 BB0_47:
	s_or_b64 exec, exec, s[8:9]                                // 000000002F58: 87FE087E
	v_add_u32_e32 v11, 16, v0                                  // 000000002F5C: 68160090
	v_cmp_gt_u32_e64 s[8:9], s27, v11                          // 000000002F60: D0CC0008 0002161B
	s_and_b64 s[22:23], s[6:7], s[8:9]                         // 000000002F68: 86960806
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000002F6C: BE8A2016
	s_cbranch_execz BB0_51                                     // 000000002F70: BF880023

0000000000002f74 BB0_48:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000002F74: D04D0016 00010011
	v_mul_f32_e32 v15, s16, v21                                // 000000002F7C: 0A1E2A10
	v_mov_b32_e32 v22, 0                                       // 000000002F80: 7E2C0280
	v_mov_b32_e32 v21, v10                                     // 000000002F84: 7E2A030A
	s_and_b64 vcc, exec, s[22:23]                              // 000000002F88: 86EA167E
	s_cbranch_vccz BB0_50                                      // 000000002F8C: BF86000F
	v_mad_u64_u32 v[23:24], s[22:23], v1, s21, v[21:22]        // 000000002F90: D1E81617 04542B01
	v_mov_b32_e32 v17, s15                                     // 000000002F98: 7E22020F
	v_mad_u64_u32 v[23:24], s[22:23], v11, s20, v[23:24]       // 000000002F9C: D1E81617 045C290B
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002FA4: D28F0017 00022E82
	v_add_co_u32_e32 v23, vcc, s14, v23                        // 000000002FAC: 322E2E0E
	v_addc_co_u32_e32 v24, vcc, v17, v24, vcc                  // 000000002FB0: 38303111
	s_nop 0                                                    // 000000002FB4: BF800000
	s_nop 0                                                    // 000000002FB8: BF800000
	global_load_dword v17, v[23:24], off                       // 000000002FBC: DC508000 117F0017
	s_waitcnt vmcnt(0)                                         // 000000002FC4: BF8C0F70
	v_mac_f32_e32 v15, s17, v17                                // 000000002FC8: 2C1E2211

0000000000002fcc BB0_50:
	v_mad_u64_u32 v[21:22], s[22:23], v1, s19, v[21:22]        // 000000002FCC: D1E81615 04542701
	v_mov_b32_e32 v17, s13                                     // 000000002FD4: 7E22020D
	v_mad_u64_u32 v[21:22], s[22:23], v11, s18, v[21:22]       // 000000002FD8: D1E81615 0454250B
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002FE0: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s12, v21                        // 000000002FE8: 322A2A0C
	v_addc_co_u32_e32 v22, vcc, v17, v22, vcc                  // 000000002FEC: 382C2D11
	s_nop 0                                                    // 000000002FF0: BF800000
	s_nop 0                                                    // 000000002FF4: BF800000
	global_store_dword v[21:22], v15, off                      // 000000002FF8: DC708000 007F0F15

0000000000003000 BB0_51:
	s_or_b64 exec, exec, s[10:11]                              // 000000003000: 87FE0A7E
	s_and_b64 s[22:23], s[0:1], s[8:9]                         // 000000003004: 86960800
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000003008: BE8A2016
	s_cbranch_execz BB0_56                                     // 00000000300C: BF880027

0000000000003010 BB0_52:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000003010: D04D0016 00010011
	v_mul_f32_e32 v15, s16, v20                                // 000000003018: 0A1E2810
	v_mov_b32_e32 v20, 0                                       // 00000000301C: 7E280280
	s_and_b64 vcc, exec, s[22:23]                              // 000000003020: 86EA167E
	s_cbranch_vccz BB0_54                                      // 000000003024: BF860013
	v_mov_b32_e32 v21, v10                                     // 000000003028: 7E2A030A
	v_mov_b32_e32 v22, v20                                     // 00000000302C: 7E2C0314
	v_mad_u64_u32 v[21:22], s[22:23], v1, s21, v[21:22]        // 000000003030: D1E81615 04542B01
	v_mov_b32_e32 v17, s15                                     // 000000003038: 7E22020F
	v_mov_b32_e32 v19, v14                                     // 00000000303C: 7E26030E
	v_mad_u64_u32 v[21:22], s[22:23], v11, s20, v[21:22]       // 000000003040: D1E81615 0454290B
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000003048: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s14, v21                        // 000000003050: 322A2A0E
	v_addc_co_u32_e32 v22, vcc, v17, v22, vcc                  // 000000003054: 382C2D11
	s_nop 0                                                    // 000000003058: BF800000
	s_nop 0                                                    // 00000000305C: BF800000
	global_load_dword v17, v[21:22], off offset:64             // 000000003060: DC508040 117F0015
	s_waitcnt vmcnt(0)                                         // 000000003068: BF8C0F70
	v_mac_f32_e32 v15, s17, v17                                // 00000000306C: 2C1E2211
	s_branch BB0_55                                            // 000000003070: BF820001

0000000000003074 BB0_54:
	v_mov_b32_e32 v19, v14                                     // 000000003074: 7E26030E

0000000000003078 BB0_55:
	v_mad_u64_u32 v[19:20], s[22:23], v1, s19, v[19:20]        // 000000003078: D1E81613 044C2701
	v_mov_b32_e32 v17, s13                                     // 000000003080: 7E22020D
	v_mad_u64_u32 v[19:20], s[22:23], v11, s18, v[19:20]       // 000000003084: D1E81613 044C250B
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 00000000308C: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s12, v19                        // 000000003094: 3226260C
	v_addc_co_u32_e32 v20, vcc, v17, v20, vcc                  // 000000003098: 38282911
	s_nop 0                                                    // 00000000309C: BF800000
	s_nop 0                                                    // 0000000030A0: BF800000
	global_store_dword v[19:20], v15, off                      // 0000000030A4: DC708000 007F0F13

00000000000030ac BB0_56:
	s_or_b64 exec, exec, s[10:11]                              // 0000000030AC: 87FE0A7E
	s_and_b64 s[22:23], s[2:3], s[8:9]                         // 0000000030B0: 86960802
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 0000000030B4: BE8A2016
	s_cbranch_execz BB0_61                                     // 0000000030B8: BF880027

00000000000030bc BB0_57:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 0000000030BC: D04D0016 00010011
	v_mul_f32_e32 v13, s16, v13                                // 0000000030C4: 0A1A1A10
	v_mov_b32_e32 v20, 0                                       // 0000000030C8: 7E280280
	s_and_b64 vcc, exec, s[22:23]                              // 0000000030CC: 86EA167E
	s_cbranch_vccz BB0_59                                      // 0000000030D0: BF860013
	v_mov_b32_e32 v21, v10                                     // 0000000030D4: 7E2A030A
	v_mov_b32_e32 v22, v20                                     // 0000000030D8: 7E2C0314
	v_mad_u64_u32 v[21:22], s[22:23], v1, s21, v[21:22]        // 0000000030DC: D1E81615 04542B01
	v_mov_b32_e32 v15, s15                                     // 0000000030E4: 7E1E020F
	v_mov_b32_e32 v19, v16                                     // 0000000030E8: 7E260310
	v_mad_u64_u32 v[21:22], s[22:23], v11, s20, v[21:22]       // 0000000030EC: D1E81615 0454290B
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 0000000030F4: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s14, v21                        // 0000000030FC: 322A2A0E
	v_addc_co_u32_e32 v22, vcc, v15, v22, vcc                  // 000000003100: 382C2D0F
	s_nop 0                                                    // 000000003104: BF800000
	s_nop 0                                                    // 000000003108: BF800000
	global_load_dword v15, v[21:22], off offset:128            // 00000000310C: DC508080 0F7F0015
	s_waitcnt vmcnt(0)                                         // 000000003114: BF8C0F70
	v_mac_f32_e32 v13, s17, v15                                // 000000003118: 2C1A1E11
	s_branch BB0_60                                            // 00000000311C: BF820001

0000000000003120 BB0_59:
	v_mov_b32_e32 v19, v16                                     // 000000003120: 7E260310

0000000000003124 BB0_60:
	v_mad_u64_u32 v[19:20], s[22:23], v1, s19, v[19:20]        // 000000003124: D1E81613 044C2701
	v_mov_b32_e32 v15, s13                                     // 00000000312C: 7E1E020D
	v_mad_u64_u32 v[19:20], s[22:23], v11, s18, v[19:20]       // 000000003130: D1E81613 044C250B
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000003138: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s12, v19                        // 000000003140: 3226260C
	v_addc_co_u32_e32 v20, vcc, v15, v20, vcc                  // 000000003144: 3828290F
	s_nop 0                                                    // 000000003148: BF800000
	s_nop 0                                                    // 00000000314C: BF800000
	global_store_dword v[19:20], v13, off                      // 000000003150: DC708000 007F0D13

0000000000003158 BB0_61:
	s_or_b64 exec, exec, s[10:11]                              // 000000003158: 87FE0A7E
	s_and_b64 s[10:11], s[4:5], s[8:9]                         // 00000000315C: 868A0804
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 000000003160: BE88200A
	s_cbranch_execz BB0_66                                     // 000000003164: BF880027

0000000000003168 BB0_62:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000003168: D04D000A 00010011
	v_mul_f32_e32 v12, s16, v12                                // 000000003170: 0A181810
	v_mov_b32_e32 v20, 0                                       // 000000003174: 7E280280
	s_and_b64 vcc, exec, s[10:11]                              // 000000003178: 86EA0A7E
	s_cbranch_vccz BB0_64                                      // 00000000317C: BF860013
	v_mov_b32_e32 v21, v10                                     // 000000003180: 7E2A030A
	v_mov_b32_e32 v22, v20                                     // 000000003184: 7E2C0314
	v_mad_u64_u32 v[21:22], s[10:11], v1, s21, v[21:22]        // 000000003188: D1E80A15 04542B01
	v_mov_b32_e32 v13, s15                                     // 000000003190: 7E1A020F
	v_mov_b32_e32 v19, v18                                     // 000000003194: 7E260312
	v_mad_u64_u32 v[21:22], s[10:11], v11, s20, v[21:22]       // 000000003198: D1E80A15 0454290B
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 0000000031A0: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s14, v21                        // 0000000031A8: 322A2A0E
	v_addc_co_u32_e32 v22, vcc, v13, v22, vcc                  // 0000000031AC: 382C2D0D
	s_nop 0                                                    // 0000000031B0: BF800000
	s_nop 0                                                    // 0000000031B4: BF800000
	global_load_dword v13, v[21:22], off offset:192            // 0000000031B8: DC5080C0 0D7F0015
	s_waitcnt vmcnt(0)                                         // 0000000031C0: BF8C0F70
	v_mac_f32_e32 v12, s17, v13                                // 0000000031C4: 2C181A11
	s_branch BB0_65                                            // 0000000031C8: BF820001

00000000000031cc BB0_64:
	v_mov_b32_e32 v19, v18                                     // 0000000031CC: 7E260312

00000000000031d0 BB0_65:
	v_mad_u64_u32 v[19:20], s[10:11], v1, s19, v[19:20]        // 0000000031D0: D1E80A13 044C2701
	v_mad_u64_u32 v[19:20], s[10:11], v11, s18, v[19:20]       // 0000000031D8: D1E80A13 044C250B
	v_mov_b32_e32 v11, s13                                     // 0000000031E0: 7E16020D
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 0000000031E4: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s12, v19                        // 0000000031EC: 3226260C
	v_addc_co_u32_e32 v20, vcc, v11, v20, vcc                  // 0000000031F0: 3828290B
	s_nop 0                                                    // 0000000031F4: BF800000
	s_nop 0                                                    // 0000000031F8: BF800000
	global_store_dword v[19:20], v12, off                      // 0000000031FC: DC708000 007F0C13

0000000000003204 BB0_66:
	s_or_b64 exec, exec, s[8:9]                                // 000000003204: 87FE087E
	v_add_u32_e32 v11, 32, v0                                  // 000000003208: 681600A0
	v_cmp_gt_u32_e64 s[8:9], s27, v11                          // 00000000320C: D0CC0008 0002161B
	s_and_b64 s[22:23], s[6:7], s[8:9]                         // 000000003214: 86960806
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000003218: BE8A2016
	s_cbranch_execz BB0_70                                     // 00000000321C: BF880023

0000000000003220 BB0_67:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000003220: D04D0016 00010011
	v_mul_f32_e32 v9, s16, v9                                  // 000000003228: 0A121210
	v_mov_b32_e32 v13, 0                                       // 00000000322C: 7E1A0280
	v_mov_b32_e32 v12, v10                                     // 000000003230: 7E18030A
	s_and_b64 vcc, exec, s[22:23]                              // 000000003234: 86EA167E
	s_cbranch_vccz BB0_69                                      // 000000003238: BF86000F
	v_mad_u64_u32 v[19:20], s[22:23], v1, s21, v[12:13]        // 00000000323C: D1E81613 04302B01
	v_mov_b32_e32 v15, s15                                     // 000000003244: 7E1E020F
	v_mad_u64_u32 v[19:20], s[22:23], v11, s20, v[19:20]       // 000000003248: D1E81613 044C290B
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000003250: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s14, v19                        // 000000003258: 3226260E
	v_addc_co_u32_e32 v20, vcc, v15, v20, vcc                  // 00000000325C: 3828290F
	s_nop 0                                                    // 000000003260: BF800000
	s_nop 0                                                    // 000000003264: BF800000
	global_load_dword v15, v[19:20], off                       // 000000003268: DC508000 0F7F0013
	s_waitcnt vmcnt(0)                                         // 000000003270: BF8C0F70
	v_mac_f32_e32 v9, s17, v15                                 // 000000003274: 2C121E11

0000000000003278 BB0_69:
	v_mad_u64_u32 v[12:13], s[22:23], v1, s19, v[12:13]        // 000000003278: D1E8160C 04302701
	v_mov_b32_e32 v15, s13                                     // 000000003280: 7E1E020D
	v_mad_u64_u32 v[12:13], s[22:23], v11, s18, v[12:13]       // 000000003284: D1E8160C 0430250B
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 00000000328C: D28F000C 00021882
	v_add_co_u32_e32 v12, vcc, s12, v12                        // 000000003294: 3218180C
	v_addc_co_u32_e32 v13, vcc, v15, v13, vcc                  // 000000003298: 381A1B0F
	s_nop 0                                                    // 00000000329C: BF800000
	s_nop 0                                                    // 0000000032A0: BF800000
	global_store_dword v[12:13], v9, off                       // 0000000032A4: DC708000 007F090C

00000000000032ac BB0_70:
	s_or_b64 exec, exec, s[10:11]                              // 0000000032AC: 87FE0A7E
	s_and_b64 s[22:23], s[0:1], s[8:9]                         // 0000000032B0: 86960800
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 0000000032B4: BE8A2016
	s_cbranch_execz BB0_75                                     // 0000000032B8: BF880027

00000000000032bc BB0_71:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 0000000032BC: D04D0016 00010011
	v_mul_f32_e32 v8, s16, v8                                  // 0000000032C4: 0A101010
	v_mov_b32_e32 v13, 0                                       // 0000000032C8: 7E1A0280
	s_and_b64 vcc, exec, s[22:23]                              // 0000000032CC: 86EA167E
	s_cbranch_vccz BB0_73                                      // 0000000032D0: BF860013
	v_mov_b32_e32 v19, v10                                     // 0000000032D4: 7E26030A
	v_mov_b32_e32 v20, v13                                     // 0000000032D8: 7E28030D
	v_mad_u64_u32 v[19:20], s[22:23], v1, s21, v[19:20]        // 0000000032DC: D1E81613 044C2B01
	v_mov_b32_e32 v9, s15                                      // 0000000032E4: 7E12020F
	v_mov_b32_e32 v12, v14                                     // 0000000032E8: 7E18030E
	v_mad_u64_u32 v[19:20], s[22:23], v11, s20, v[19:20]       // 0000000032EC: D1E81613 044C290B
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 0000000032F4: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s14, v19                        // 0000000032FC: 3226260E
	v_addc_co_u32_e32 v20, vcc, v9, v20, vcc                   // 000000003300: 38282909
	s_nop 0                                                    // 000000003304: BF800000
	s_nop 0                                                    // 000000003308: BF800000
	global_load_dword v9, v[19:20], off offset:64              // 00000000330C: DC508040 097F0013
	s_waitcnt vmcnt(0)                                         // 000000003314: BF8C0F70
	v_mac_f32_e32 v8, s17, v9                                  // 000000003318: 2C101211
	s_branch BB0_74                                            // 00000000331C: BF820001

0000000000003320 BB0_73:
	v_mov_b32_e32 v12, v14                                     // 000000003320: 7E18030E

0000000000003324 BB0_74:
	v_mad_u64_u32 v[12:13], s[22:23], v1, s19, v[12:13]        // 000000003324: D1E8160C 04302701
	v_mov_b32_e32 v9, s13                                      // 00000000332C: 7E12020D
	v_mad_u64_u32 v[12:13], s[22:23], v11, s18, v[12:13]       // 000000003330: D1E8160C 0430250B
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 000000003338: D28F000C 00021882
	v_add_co_u32_e32 v12, vcc, s12, v12                        // 000000003340: 3218180C
	v_addc_co_u32_e32 v13, vcc, v9, v13, vcc                   // 000000003344: 381A1B09
	s_nop 0                                                    // 000000003348: BF800000
	s_nop 0                                                    // 00000000334C: BF800000
	global_store_dword v[12:13], v8, off                       // 000000003350: DC708000 007F080C

0000000000003358 BB0_75:
	s_or_b64 exec, exec, s[10:11]                              // 000000003358: 87FE0A7E
	s_and_b64 s[22:23], s[2:3], s[8:9]                         // 00000000335C: 86960802
	s_and_saveexec_b64 s[10:11], s[22:23]                      // 000000003360: BE8A2016
	s_cbranch_execz BB0_80                                     // 000000003364: BF880027

0000000000003368 BB0_76:
	v_cmp_neq_f32_e64 s[22:23], s17, 0                         // 000000003368: D04D0016 00010011
	v_mul_f32_e32 v7, s16, v7                                  // 000000003370: 0A0E0E10
	v_mov_b32_e32 v9, 0                                        // 000000003374: 7E120280
	s_and_b64 vcc, exec, s[22:23]                              // 000000003378: 86EA167E
	s_cbranch_vccz BB0_78                                      // 00000000337C: BF860013
	v_mov_b32_e32 v12, v10                                     // 000000003380: 7E18030A
	v_mov_b32_e32 v13, v9                                      // 000000003384: 7E1A0309
	v_mad_u64_u32 v[12:13], s[22:23], v1, s21, v[12:13]        // 000000003388: D1E8160C 04302B01
	v_mov_b32_e32 v15, s15                                     // 000000003390: 7E1E020F
	v_mov_b32_e32 v8, v16                                      // 000000003394: 7E100310
	v_mad_u64_u32 v[12:13], s[22:23], v11, s20, v[12:13]       // 000000003398: D1E8160C 0430290B
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 0000000033A0: D28F000C 00021882
	v_add_co_u32_e32 v12, vcc, s14, v12                        // 0000000033A8: 3218180E
	v_addc_co_u32_e32 v13, vcc, v15, v13, vcc                  // 0000000033AC: 381A1B0F
	s_nop 0                                                    // 0000000033B0: BF800000
	s_nop 0                                                    // 0000000033B4: BF800000
	global_load_dword v12, v[12:13], off offset:128            // 0000000033B8: DC508080 0C7F000C
	s_waitcnt vmcnt(0)                                         // 0000000033C0: BF8C0F70
	v_mac_f32_e32 v7, s17, v12                                 // 0000000033C4: 2C0E1811
	s_branch BB0_79                                            // 0000000033C8: BF820001

00000000000033cc BB0_78:
	v_mov_b32_e32 v8, v16                                      // 0000000033CC: 7E100310

00000000000033d0 BB0_79:
	v_mad_u64_u32 v[8:9], s[22:23], v1, s19, v[8:9]            // 0000000033D0: D1E81608 04202701
	v_mov_b32_e32 v12, s13                                     // 0000000033D8: 7E18020D
	v_mad_u64_u32 v[8:9], s[22:23], v11, s18, v[8:9]           // 0000000033DC: D1E81608 0420250B
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 0000000033E4: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s12, v8                          // 0000000033EC: 3210100C
	v_addc_co_u32_e32 v9, vcc, v12, v9, vcc                    // 0000000033F0: 3812130C
	s_nop 0                                                    // 0000000033F4: BF800000
	s_nop 0                                                    // 0000000033F8: BF800000
	global_store_dword v[8:9], v7, off                         // 0000000033FC: DC708000 007F0708

0000000000003404 BB0_80:
	s_or_b64 exec, exec, s[10:11]                              // 000000003404: 87FE0A7E
	s_and_b64 s[10:11], s[4:5], s[8:9]                         // 000000003408: 868A0804
	s_and_saveexec_b64 s[8:9], s[10:11]                        // 00000000340C: BE88200A
	s_cbranch_execz BB0_85                                     // 000000003410: BF880027

0000000000003414 BB0_81:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 000000003414: D04D000A 00010011
	v_mul_f32_e32 v6, s16, v6                                  // 00000000341C: 0A0C0C10
	v_mov_b32_e32 v8, 0                                        // 000000003420: 7E100280
	s_and_b64 vcc, exec, s[10:11]                              // 000000003424: 86EA0A7E
	s_cbranch_vccz BB0_83                                      // 000000003428: BF860013
	v_mov_b32_e32 v12, v10                                     // 00000000342C: 7E18030A
	v_mov_b32_e32 v13, v8                                      // 000000003430: 7E1A0308
	v_mad_u64_u32 v[12:13], s[10:11], v1, s21, v[12:13]        // 000000003434: D1E80A0C 04302B01
	v_mov_b32_e32 v9, s15                                      // 00000000343C: 7E12020F
	v_mov_b32_e32 v7, v18                                      // 000000003440: 7E0E0312
	v_mad_u64_u32 v[12:13], s[10:11], v11, s20, v[12:13]       // 000000003444: D1E80A0C 0430290B
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 00000000344C: D28F000C 00021882
	v_add_co_u32_e32 v12, vcc, s14, v12                        // 000000003454: 3218180E
	v_addc_co_u32_e32 v13, vcc, v9, v13, vcc                   // 000000003458: 381A1B09
	s_nop 0                                                    // 00000000345C: BF800000
	s_nop 0                                                    // 000000003460: BF800000
	global_load_dword v9, v[12:13], off offset:192             // 000000003464: DC5080C0 097F000C
	s_waitcnt vmcnt(0)                                         // 00000000346C: BF8C0F70
	v_mac_f32_e32 v6, s17, v9                                  // 000000003470: 2C0C1211
	s_branch BB0_84                                            // 000000003474: BF820001

0000000000003478 BB0_83:
	v_mov_b32_e32 v7, v18                                      // 000000003478: 7E0E0312

000000000000347c BB0_84:
	v_mad_u64_u32 v[7:8], s[10:11], v1, s19, v[7:8]            // 00000000347C: D1E80A07 041C2701
	v_mov_b32_e32 v9, s13                                      // 000000003484: 7E12020D
	v_mad_u64_u32 v[7:8], s[10:11], v11, s18, v[7:8]           // 000000003488: D1E80A07 041C250B
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 000000003490: D28F0007 00020E82
	v_add_co_u32_e32 v7, vcc, s12, v7                          // 000000003498: 320E0E0C
	v_addc_co_u32_e32 v8, vcc, v9, v8, vcc                     // 00000000349C: 38101109
	s_nop 0                                                    // 0000000034A0: BF800000
	s_nop 0                                                    // 0000000034A4: BF800000
	global_store_dword v[7:8], v6, off                         // 0000000034A8: DC708000 007F0607

00000000000034b0 BB0_85:
	s_or_b64 exec, exec, s[8:9]                                // 0000000034B0: 87FE087E
	v_add_u32_e32 v0, 48, v0                                   // 0000000034B4: 680000B0
	v_cmp_gt_u32_e64 s[8:9], s27, v0                           // 0000000034B8: D0CC0008 0002001B
	s_and_b64 s[10:11], s[6:7], s[8:9]                         // 0000000034C0: 868A0806
	s_and_saveexec_b64 s[6:7], s[10:11]                        // 0000000034C4: BE86200A
	s_cbranch_execz BB0_89                                     // 0000000034C8: BF880023

00000000000034cc BB0_86:
	v_cmp_neq_f32_e64 s[10:11], s17, 0                         // 0000000034CC: D04D000A 00010011
	v_mul_f32_e32 v5, s16, v5                                  // 0000000034D4: 0A0A0A10
	v_mov_b32_e32 v7, 0                                        // 0000000034D8: 7E0E0280
	v_mov_b32_e32 v6, v10                                      // 0000000034DC: 7E0C030A
	s_and_b64 vcc, exec, s[10:11]                              // 0000000034E0: 86EA0A7E
	s_cbranch_vccz BB0_88                                      // 0000000034E4: BF86000F
	v_mad_u64_u32 v[8:9], s[10:11], v1, s21, v[6:7]            // 0000000034E8: D1E80A08 04182B01
	v_mov_b32_e32 v11, s15                                     // 0000000034F0: 7E16020F
	v_mad_u64_u32 v[8:9], s[10:11], v0, s20, v[8:9]            // 0000000034F4: D1E80A08 04202900
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 0000000034FC: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s14, v8                          // 000000003504: 3210100E
	v_addc_co_u32_e32 v9, vcc, v11, v9, vcc                    // 000000003508: 3812130B
	s_nop 0                                                    // 00000000350C: BF800000
	s_nop 0                                                    // 000000003510: BF800000
	global_load_dword v8, v[8:9], off                          // 000000003514: DC508000 087F0008
	s_waitcnt vmcnt(0)                                         // 00000000351C: BF8C0F70
	v_mac_f32_e32 v5, s17, v8                                  // 000000003520: 2C0A1011

0000000000003524 BB0_88:
	v_mad_u64_u32 v[6:7], s[10:11], v1, s19, v[6:7]            // 000000003524: D1E80A06 04182701
	v_mov_b32_e32 v8, s13                                      // 00000000352C: 7E10020D
	v_mad_u64_u32 v[6:7], s[10:11], v0, s18, v[6:7]            // 000000003530: D1E80A06 04182500
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000003538: D28F0006 00020C82
	v_add_co_u32_e32 v6, vcc, s12, v6                          // 000000003540: 320C0C0C
	v_addc_co_u32_e32 v7, vcc, v8, v7, vcc                     // 000000003544: 380E0F08
	s_nop 0                                                    // 000000003548: BF800000
	s_nop 0                                                    // 00000000354C: BF800000
	global_store_dword v[6:7], v5, off                         // 000000003550: DC708000 007F0506

0000000000003558 BB0_89:
	s_or_b64 exec, exec, s[6:7]                                // 000000003558: 87FE067E
	s_and_b64 s[6:7], s[0:1], s[8:9]                           // 00000000355C: 86860800
	s_and_saveexec_b64 s[0:1], s[6:7]                          // 000000003560: BE802006
	s_cbranch_execz BB0_93                                     // 000000003564: BF880024

0000000000003568 BB0_90:
	v_cmp_neq_f32_e64 s[6:7], s17, 0                           // 000000003568: D04D0006 00010011
	v_mul_f32_e32 v4, s16, v4                                  // 000000003570: 0A080810
	v_mov_b32_e32 v15, 0                                       // 000000003574: 7E1E0280
	s_and_b64 vcc, exec, s[6:7]                                // 000000003578: 86EA067E
	s_cbranch_vccz BB0_92                                      // 00000000357C: BF860011
	v_mov_b32_e32 v5, v10                                      // 000000003580: 7E0A030A
	v_mov_b32_e32 v6, v15                                      // 000000003584: 7E0C030F
	v_mad_u64_u32 v[5:6], s[6:7], v1, s21, v[5:6]              // 000000003588: D1E80605 04142B01
	v_mov_b32_e32 v7, s15                                      // 000000003590: 7E0E020F
	v_mad_u64_u32 v[5:6], s[6:7], v0, s20, v[5:6]              // 000000003594: D1E80605 04142900
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 00000000359C: D28F0005 00020A82
	v_add_co_u32_e32 v5, vcc, s14, v5                          // 0000000035A4: 320A0A0E
	v_addc_co_u32_e32 v6, vcc, v7, v6, vcc                     // 0000000035A8: 380C0D07
	s_nop 0                                                    // 0000000035AC: BF800000
	s_nop 0                                                    // 0000000035B0: BF800000
	global_load_dword v5, v[5:6], off offset:64                // 0000000035B4: DC508040 057F0005
	s_waitcnt vmcnt(0)                                         // 0000000035BC: BF8C0F70
	v_mac_f32_e32 v4, s17, v5                                  // 0000000035C0: 2C080A11

00000000000035c4 BB0_92:
	v_mad_u64_u32 v[5:6], s[6:7], v1, s19, v[14:15]            // 0000000035C4: D1E80605 04382701
	v_mov_b32_e32 v7, s13                                      // 0000000035CC: 7E0E020D
	v_mad_u64_u32 v[5:6], s[6:7], v0, s18, v[5:6]              // 0000000035D0: D1E80605 04142500
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 0000000035D8: D28F0005 00020A82
	v_add_co_u32_e32 v5, vcc, s12, v5                          // 0000000035E0: 320A0A0C
	v_addc_co_u32_e32 v6, vcc, v7, v6, vcc                     // 0000000035E4: 380C0D07
	s_nop 0                                                    // 0000000035E8: BF800000
	s_nop 0                                                    // 0000000035EC: BF800000
	global_store_dword v[5:6], v4, off                         // 0000000035F0: DC708000 007F0405

00000000000035f8 BB0_93:
	s_or_b64 exec, exec, s[0:1]                                // 0000000035F8: 87FE007E
	s_and_b64 s[2:3], s[2:3], s[8:9]                           // 0000000035FC: 86820802
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000003600: BE802002
	s_cbranch_execz BB0_97                                     // 000000003604: BF880024

0000000000003608 BB0_94:
	v_cmp_neq_f32_e64 s[2:3], s17, 0                           // 000000003608: D04D0002 00010011
	v_mul_f32_e32 v3, s16, v3                                  // 000000003610: 0A060610
	v_mov_b32_e32 v17, 0                                       // 000000003614: 7E220280
	s_and_b64 vcc, exec, s[2:3]                                // 000000003618: 86EA027E
	s_cbranch_vccz BB0_96                                      // 00000000361C: BF860011
	v_mov_b32_e32 v4, v10                                      // 000000003620: 7E08030A
	v_mov_b32_e32 v5, v17                                      // 000000003624: 7E0A0311
	v_mad_u64_u32 v[4:5], s[2:3], v1, s21, v[4:5]              // 000000003628: D1E80204 04102B01
	v_mov_b32_e32 v6, s15                                      // 000000003630: 7E0C020F
	v_mad_u64_u32 v[4:5], s[2:3], v0, s20, v[4:5]              // 000000003634: D1E80204 04102900
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 00000000363C: D28F0004 00020882
	v_add_co_u32_e32 v4, vcc, s14, v4                          // 000000003644: 3208080E
	v_addc_co_u32_e32 v5, vcc, v6, v5, vcc                     // 000000003648: 380A0B06
	s_nop 0                                                    // 00000000364C: BF800000
	s_nop 0                                                    // 000000003650: BF800000
	global_load_dword v4, v[4:5], off offset:128               // 000000003654: DC508080 047F0004
	s_waitcnt vmcnt(0)                                         // 00000000365C: BF8C0F70
	v_mac_f32_e32 v3, s17, v4                                  // 000000003660: 2C060811

0000000000003664 BB0_96:
	v_mad_u64_u32 v[4:5], s[2:3], v1, s19, v[16:17]            // 000000003664: D1E80204 04402701
	v_mov_b32_e32 v6, s13                                      // 00000000366C: 7E0C020D
	v_mad_u64_u32 v[4:5], s[2:3], v0, s18, v[4:5]              // 000000003670: D1E80204 04102500
	v_lshlrev_b64 v[4:5], 2, v[4:5]                            // 000000003678: D28F0004 00020882
	v_add_co_u32_e32 v4, vcc, s12, v4                          // 000000003680: 3208080C
	v_addc_co_u32_e32 v5, vcc, v6, v5, vcc                     // 000000003684: 380A0B06
	s_nop 0                                                    // 000000003688: BF800000
	s_nop 0                                                    // 00000000368C: BF800000
	global_store_dword v[4:5], v3, off                         // 000000003690: DC708000 007F0304

0000000000003698 BB0_97:
	s_or_b64 exec, exec, s[0:1]                                // 000000003698: 87FE007E
	s_and_b64 s[0:1], s[4:5], s[8:9]                           // 00000000369C: 86800804
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 0000000036A0: BE822000
	s_cbranch_execz BB0_101                                    // 0000000036A4: BF880023

00000000000036a8 BB0_98:
	v_cmp_neq_f32_e64 s[0:1], s17, 0                           // 0000000036A8: D04D0000 00010011
	v_mul_f32_e32 v2, s16, v2                                  // 0000000036B0: 0A040410
	v_mov_b32_e32 v19, 0                                       // 0000000036B4: 7E260280
	s_and_b64 vcc, exec, s[0:1]                                // 0000000036B8: 86EA007E
	s_cbranch_vccz BB0_100                                     // 0000000036BC: BF860010
	v_mov_b32_e32 v11, v19                                     // 0000000036C0: 7E160313
	v_mad_u64_u32 v[3:4], s[0:1], v1, s21, v[10:11]            // 0000000036C4: D1E80003 04282B01
	v_mov_b32_e32 v5, s15                                      // 0000000036CC: 7E0A020F
	v_mad_u64_u32 v[3:4], s[0:1], v0, s20, v[3:4]              // 0000000036D0: D1E80003 040C2900
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 0000000036D8: D28F0003 00020682
	v_add_co_u32_e32 v3, vcc, s14, v3                          // 0000000036E0: 3206060E
	v_addc_co_u32_e32 v4, vcc, v5, v4, vcc                     // 0000000036E4: 38080905
	s_nop 0                                                    // 0000000036E8: BF800000
	s_nop 0                                                    // 0000000036EC: BF800000
	global_load_dword v3, v[3:4], off offset:192               // 0000000036F0: DC5080C0 037F0003
	s_waitcnt vmcnt(0)                                         // 0000000036F8: BF8C0F70
	v_mac_f32_e32 v2, s17, v3                                  // 0000000036FC: 2C040611

0000000000003700 BB0_100:
	v_mad_u64_u32 v[3:4], s[0:1], v1, s19, v[18:19]            // 000000003700: D1E80003 04482701
	v_mad_u64_u32 v[0:1], s[0:1], v0, s18, v[3:4]              // 000000003708: D1E80000 040C2500
	v_mov_b32_e32 v3, s13                                      // 000000003710: 7E06020D
	v_lshlrev_b64 v[0:1], 2, v[0:1]                            // 000000003714: D28F0000 00020082
	v_add_co_u32_e32 v0, vcc, s12, v0                          // 00000000371C: 3200000C
	v_addc_co_u32_e32 v1, vcc, v3, v1, vcc                     // 000000003720: 38020303
	s_nop 0                                                    // 000000003724: BF800000
	s_nop 0                                                    // 000000003728: BF800000
	global_store_dword v[0:1], v2, off                         // 00000000372C: DC708000 007F0200

0000000000003734 BB0_101:
	s_endpgm                                                   // 000000003734: BF810000
