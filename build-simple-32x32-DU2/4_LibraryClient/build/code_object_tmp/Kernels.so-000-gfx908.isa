
Kernels.so-000-gfx908.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000002100 Cijk_Ailk_Bljk_SB_MT32x32x2_SE_K1:
	s_load_dwordx2 s[30:31], s[4:5], 0x10                      // 000000002100: C0060782 00000010
	s_load_dwordx2 s[28:29], s[4:5], 0x18                      // 000000002108: C0060702 00000018
	s_load_dwordx8 s[12:19], s[4:5], 0x20                      // 000000002110: C00E0302 00000020
	s_load_dwordx4 s[20:23], s[4:5], 0x40                      // 000000002118: C00A0502 00000040
	s_load_dwordx4 s[24:27], s[4:5], 0x50                      // 000000002120: C00A0602 00000050
	v_lshrrev_b32_e32 v4, 1, v0                                // 000000002128: 20080081
	v_and_b32_e32 v5, 7, v0                                    // 00000000212C: 260A0087
	v_lshrrev_b32_e32 v6, 3, v0                                // 000000002130: 200C0083
	s_lshl_b32 s3, s7, 5                                       // 000000002134: 8E038507
	s_waitcnt lgkmcnt(0)                                       // 000000002138: BF8CC07F
	v_cvt_f32_u32_e32 v1, s24                                  // 00000000213C: 7E020C18
	s_lshl_b32 s2, s6, 5                                       // 000000002140: 8E028506
	s_mov_b32 s33, s9                                          // 000000002144: BEA10009
	s_mov_b32 s9, 0                                            // 000000002148: BE890080
	v_rcp_iflag_f32_e32 v1, v1                                 // 00000000214C: 7E024701
	v_and_b32_e32 v10, 1, v0                                   // 000000002150: 26140081
	v_lshrrev_b32_e32 v14, 5, v0                               // 000000002154: 201C0085
	v_lshlrev_b32_e32 v16, 2, v0                               // 000000002158: 24200082
	v_mul_f32_e32 v1, 0x4f800000, v1                           // 00000000215C: 0A0202FF 4F800000
	v_cvt_u32_f32_e32 v1, v1                                   // 000000002164: 7E020F01
	v_mov_b32_e32 v12, 0                                       // 000000002168: 7E180280
	s_mov_b32 s7, s9                                           // 00000000216C: BE870009
	s_mov_b32 s32, s33                                         // 000000002170: BEA00021
	v_mul_lo_u32 v2, v1, s24                                   // 000000002174: D2850002 00003101
	v_mul_hi_u32 v3, v1, s24                                   // 00000000217C: D2860003 00003101
	v_sub_u32_e32 v7, 0, v2                                    // 000000002184: 6A0E0480
	v_cmp_eq_u32_e32 vcc, 0, v3                                // 000000002188: 7D940680
	v_cndmask_b32_e32 v2, v2, v7, vcc                          // 00000000218C: 00040F02
	v_mul_hi_u32 v2, v2, v1                                    // 000000002190: D2860002 00020302
	v_add_u32_e32 v7, s3, v4                                   // 000000002198: 680E0803
	v_add_u32_e32 v3, v1, v2                                   // 00000000219C: 68060501
	v_sub_u32_e32 v1, v1, v2                                   // 0000000021A0: 6A020501
	v_cndmask_b32_e32 v1, v1, v3, vcc                          // 0000000021A4: 00020701
	v_mul_hi_u32 v1, v1, s8                                    // 0000000021A8: D2860001 00001101
	v_and_b32_e32 v2, 0x60, v4                                 // 0000000021B0: 260408FF 00000060
	v_or_b32_e32 v9, v2, v5                                    // 0000000021B8: 28120B02
	v_and_or_b32 v13, v6, 7, v2                                // 0000000021BC: D201000D 04090F06
	v_mul_lo_u32 v1, v1, s24                                   // 0000000021C4: D2850001 00003101
	v_and_or_b32 v3, v0, 31, s2                                // 0000000021CC: D2010003 00093F00
	v_alignbit_b32 v0, 0, s18, 31                              // 0000000021D4: D1CE0000 027C2480
	v_lshlrev_b32_e32 v24, 2, v9                               // 0000000021DC: 24301282
	v_sub_u32_e32 v2, s8, v1                                   // 0000000021E0: 6A040208
	v_cmp_ge_u32_e64 s[0:1], s8, v1                            // 0000000021E4: D0CE0000 00020208
	v_cmp_le_u32_e32 vcc, s24, v2                              // 0000000021EC: 7D960418
	v_subrev_u32_e32 v1, s24, v2                               // 0000000021F0: 6C020418
	s_and_b64 vcc, vcc, s[0:1]                                 // 0000000021F4: 86EA006A
	v_add_u32_e32 v8, s24, v2                                  // 0000000021F8: 68100418
	v_cndmask_b32_e32 v1, v2, v1, vcc                          // 0000000021FC: 00020302
	v_cndmask_b32_e64 v1, v8, v1, s[0:1]                       // 000000002200: D1000001 00020308
	s_add_i32 s1, s23, -1                                      // 000000002208: 8101C117
	v_min_u32_e32 v2, s1, v7                                   // 00000000220C: 1C040E01
	v_mul_lo_u32 v2, v2, s20                                   // 000000002210: D2850002 00002902
	v_mul_lo_u32 v15, v1, s21                                  // 000000002218: D285000F 00002B01
	s_add_i32 s0, s22, -1                                      // 000000002220: 8100C116
	v_min_u32_e32 v3, s0, v3                                   // 000000002224: 1C060600
	s_and_b32 s0, s6, s26                                      // 000000002228: 86001A06
	s_mov_b32 s8, s18                                          // 00000000222C: BE880012
	s_lshl_b32 s6, s0, 5                                       // 000000002230: 8E068500
	s_lshl_b64 s[10:11], s[8:9], 1                             // 000000002234: 8E8A8108
	v_add3_u32 v2, v2, v10, v15                                // 000000002238: D1FF0002 043E1502
	v_mov_b32_e32 v15, s6                                      // 000000002240: 7E1E0206
	v_mul_lo_u32 v0, v0, s6                                    // 000000002244: D2850000 00000D00
	v_mul_hi_u32 v15, s10, v15                                 // 00000000224C: D286000F 00021E0A
	v_mul_lo_u32 v7, v14, s18                                  // 000000002254: D2850007 0000250E
	v_mul_lo_u32 v8, v1, s19                                   // 00000000225C: D2850008 00002701
	s_mul_i32 s0, s10, s6                                      // 000000002264: 9200060A
	v_add_u32_e32 v18, v15, v0                                 // 000000002268: 6824010F
	v_mov_b32_e32 v17, s0                                      // 00000000226C: 7E220200
	v_add3_u32 v11, v3, v7, v8                                 // 000000002270: D1FF000B 04220F03
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002278: D28F0011 00022282
	v_lshlrev_b64 v[7:8], 2, v[11:12]                          // 000000002280: D28F0007 00021682
	v_lshlrev_b32_e32 v11, 5, v10                              // 000000002288: 24161485
	v_add_lshl_u32 v22, v4, v11, 2                             // 00000000228C: D1FE0016 020A1704
	v_mov_b32_e32 v0, s31                                      // 000000002294: 7E00021F
	v_add_co_u32_e32 v4, vcc, s30, v17                         // 000000002298: 3208221E
	v_mov_b32_e32 v3, v12                                      // 00000000229C: 7E06030C
	v_addc_co_u32_e32 v0, vcc, v18, v0, vcc                    // 0000000022A0: 38000112
	s_lshr_b32 s8, s25, 1                                      // 0000000022A4: 8F088119
	s_lshl_b64 s[0:1], s[6:7], 3                               // 0000000022A8: 8E808306
	v_add_co_u32_e32 v27, vcc, v4, v7                          // 0000000022AC: 32360F04
	s_add_u32 s0, s0, s28                                      // 0000000022B0: 80001C00
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000022B4: D28F0002 00020482
	v_addc_co_u32_e32 v28, vcc, v0, v8, vcc                    // 0000000022BC: 38381100
	s_addc_u32 s1, s1, s29                                     // 0000000022C0: 82011D01
	v_mov_b32_e32 v0, s1                                       // 0000000022C4: 7E000201
	v_add_co_u32_e32 v25, vcc, s0, v2                          // 0000000022C8: 32320400
	v_addc_co_u32_e32 v26, vcc, v0, v3, vcc                    // 0000000022CC: 38340700
	s_cmp_eq_u32 s8, 0                                         // 0000000022D0: BF068008
	v_lshlrev_b32_e32 v23, 2, v13                              // 0000000022D4: 242E1A82
	s_cbranch_scc1 BB0_3                                       // 0000000022D8: BF85007C
	v_mov_b32_e32 v0, s8                                       // 0000000022DC: 7E000208
	v_mul_hi_u32 v0, s10, v0                                   // 0000000022E0: D2860000 0002000A
	s_mul_i32 s0, s11, s8                                      // 0000000022E8: 9200080B
	s_mul_i32 s1, s10, s8                                      // 0000000022EC: 9201080A
	v_sub_co_u32_e64 v29, vcc, 0, s1                           // 0000000022F0: D11A6A1D 00000280
	v_add_u32_e32 v0, s0, v0                                   // 0000000022F8: 68000000
	s_and_b32 s0, s25, -2                                      // 0000000022FC: 8600C219
	s_sub_u32 s0, 0, s0                                        // 000000002300: 80800080
	s_subb_u32 s1, 0, 0                                        // 000000002304: 82818080
	v_subb_co_u32_e32 v30, vcc, 0, v0, vcc                     // 000000002308: 3A3C0080
	v_mov_b32_e32 v0, 0                                        // 00000000230C: 7E000280
	s_lshl_b64 s[18:19], s[0:1], 2                             // 000000002310: 8E928200
	s_add_i32 s7, s6, 1                                        // 000000002314: 81078106
	s_lshl_b64 s[20:21], s[10:11], 2                           // 000000002318: 8E94820A
	s_mov_b32 s0, s8                                           // 00000000231C: BE800008
	v_mov_b32_e32 v2, v0                                       // 000000002320: 7E040300
	v_mov_b32_e32 v3, v0                                       // 000000002324: 7E060300
	v_mov_b32_e32 v4, v0                                       // 000000002328: 7E080300
	v_mov_b32_e32 v7, v0                                       // 00000000232C: 7E0E0300
	v_mov_b32_e32 v8, v0                                       // 000000002330: 7E100300
	v_mov_b32_e32 v9, v0                                       // 000000002334: 7E120300
	v_mov_b32_e32 v17, v0                                      // 000000002338: 7E220300
	v_mov_b32_e32 v18, v0                                      // 00000000233C: 7E240300
	v_mov_b32_e32 v19, v0                                      // 000000002340: 7E260300
	v_mov_b32_e32 v20, v0                                      // 000000002344: 7E280300
	v_mov_b32_e32 v21, v0                                      // 000000002348: 7E2A0300
	v_mov_b32_e32 v15, v0                                      // 00000000234C: 7E1E0300
	v_mov_b32_e32 v13, v0                                      // 000000002350: 7E1A0300
	v_mov_b32_e32 v11, v0                                      // 000000002354: 7E160300
	v_mov_b32_e32 v12, v0                                      // 000000002358: 7E180300

000000000000235c BB0_2:
	global_load_dword v32, v[25:26], off                       // 00000000235C: DC508000 207F0019
	global_load_dword v31, v[27:28], off                       // 000000002364: DC508000 1F7F001B
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 00000000236C: BF8C0070
	s_barrier                                                  // 000000002370: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002374: BF8CC07F
	v_mov_b32_e32 v37, s21                                     // 000000002378: 7E4A0215
	v_add_co_u32_e32 v38, vcc, s20, v27                        // 00000000237C: 324C3614
	v_addc_co_u32_e32 v37, vcc, v28, v37, vcc                  // 000000002380: 384A4B1C
	v_add_co_u32_e32 v25, vcc, 8, v25                          // 000000002384: 32323288
	v_lshlrev_b64 v[27:28], 2, v[29:30]                        // 000000002388: D28F001B 00023A82
	v_addc_co_u32_e32 v26, vcc, 0, v26, vcc                    // 000000002390: 38343480
	v_add_co_u32_e32 v27, vcc, v38, v27                        // 000000002394: 32363726
	v_addc_co_u32_e32 v28, vcc, v37, v28, vcc                  // 000000002398: 38383925
	v_mov_b32_e32 v39, s0                                      // 00000000239C: 7E4E0200
	v_cmp_eq_u32_e32 vcc, s7, v39                              // 0000000023A0: 7D944E07
	s_add_i32 s24, s0, -1                                      // 0000000023A4: 8118C100
	v_cndmask_b32_e32 v28, v37, v28, vcc                       // 0000000023A8: 00383925
	v_add_co_u32_e64 v37, s[0:1], s18, v25                     // 0000000023AC: D1190025 00023212
	v_mov_b32_e32 v39, s19                                     // 0000000023B4: 7E4E0213
	v_cndmask_b32_e32 v27, v38, v27, vcc                       // 0000000023B8: 00363726
	v_addc_co_u32_e64 v38, s[0:1], v26, v39, s[0:1]            // 0000000023BC: D11C0026 00024F1A
	v_cndmask_b32_e32 v26, v26, v38, vcc                       // 0000000023C4: 00344D1A
	v_cndmask_b32_e32 v25, v25, v37, vcc                       // 0000000023C8: 00324B19
	s_cmp_lg_u32 s24, 0                                        // 0000000023CC: BF078018
	s_mov_b32 s0, s24                                          // 0000000023D0: BE800018
	ds_write_b32 v16, v31                                      // 0000000023D4: D81A0000 00001F10
	ds_write_b32 v22, v32 offset:256                           // 0000000023DC: D81A0100 00002016
	s_waitcnt lgkmcnt(0)                                       // 0000000023E4: BF8CC07F
	s_barrier                                                  // 0000000023E8: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000023EC: BF8CC07F
	ds_read2_b32 v[31:32], v24 offset1:8                       // 0000000023F0: D86E0800 1F000018
	ds_read2_b32 v[33:34], v24 offset0:16 offset1:24           // 0000000023F8: D86E1810 21000018
	ds_read2_b32 v[35:36], v23 offset0:64 offset1:72           // 000000002400: D86E4840 23000017
	ds_read2_b32 v[37:38], v23 offset0:80 offset1:88           // 000000002408: D86E5850 25000017
	s_waitcnt lgkmcnt(1)                                       // 000000002410: BF8CC17F
	v_mac_f32_e32 v12, v31, v35                                // 000000002414: 2C18471F
	v_mac_f32_e32 v11, v32, v35                                // 000000002418: 2C164720
	v_mac_f32_e32 v13, v33, v35                                // 00000000241C: 2C1A4721
	v_mac_f32_e32 v15, v34, v35                                // 000000002420: 2C1E4722
	v_mac_f32_e32 v21, v31, v36                                // 000000002424: 2C2A491F
	v_mac_f32_e32 v20, v32, v36                                // 000000002428: 2C284920
	v_mac_f32_e32 v19, v33, v36                                // 00000000242C: 2C264921
	v_mac_f32_e32 v18, v34, v36                                // 000000002430: 2C244922
	ds_read2_b32 v[35:36], v24 offset0:32 offset1:40           // 000000002434: D86E2820 23000018
	s_waitcnt lgkmcnt(1)                                       // 00000000243C: BF8CC17F
	v_mac_f32_e32 v17, v31, v37                                // 000000002440: 2C224B1F
	v_mac_f32_e32 v9, v32, v37                                 // 000000002444: 2C124B20
	v_mac_f32_e32 v4, v31, v38                                 // 000000002448: 2C084D1F
	v_mac_f32_e32 v3, v32, v38                                 // 00000000244C: 2C064D20
	ds_read2_b32 v[31:32], v23 offset0:96 offset1:104          // 000000002450: D86E6860 1F000017
	v_mac_f32_e32 v8, v33, v37                                 // 000000002458: 2C104B21
	v_mac_f32_e32 v7, v34, v37                                 // 00000000245C: 2C0E4B22
	v_mac_f32_e32 v2, v33, v38                                 // 000000002460: 2C044D21
	v_mac_f32_e32 v0, v34, v38                                 // 000000002464: 2C004D22
	ds_read2_b32 v[33:34], v24 offset0:48 offset1:56           // 000000002468: D86E3830 21000018
	ds_read2_b32 v[37:38], v23 offset0:112 offset1:120         // 000000002470: D86E7870 25000017
	s_waitcnt lgkmcnt(2)                                       // 000000002478: BF8CC27F
	v_mac_f32_e32 v12, v35, v31                                // 00000000247C: 2C183F23
	v_mac_f32_e32 v11, v36, v31                                // 000000002480: 2C163F24
	v_mac_f32_e32 v21, v35, v32                                // 000000002484: 2C2A4123
	s_waitcnt lgkmcnt(1)                                       // 000000002488: BF8CC17F
	v_mac_f32_e32 v13, v33, v31                                // 00000000248C: 2C1A3F21
	v_mac_f32_e32 v15, v34, v31                                // 000000002490: 2C1E3F22
	v_mac_f32_e32 v20, v36, v32                                // 000000002494: 2C284124
	v_mac_f32_e32 v19, v33, v32                                // 000000002498: 2C264121
	v_mac_f32_e32 v18, v34, v32                                // 00000000249C: 2C244122
	s_waitcnt lgkmcnt(0)                                       // 0000000024A0: BF8CC07F
	v_mac_f32_e32 v17, v35, v37                                // 0000000024A4: 2C224B23
	v_mac_f32_e32 v9, v36, v37                                 // 0000000024A8: 2C124B24
	v_mac_f32_e32 v4, v35, v38                                 // 0000000024AC: 2C084D23
	v_mac_f32_e32 v3, v36, v38                                 // 0000000024B0: 2C064D24
	v_mac_f32_e32 v8, v33, v37                                 // 0000000024B4: 2C104B21
	v_mac_f32_e32 v7, v34, v37                                 // 0000000024B8: 2C0E4B22
	v_mac_f32_e32 v2, v33, v38                                 // 0000000024BC: 2C044D21
	v_mac_f32_e32 v0, v34, v38                                 // 0000000024C0: 2C004D22
	s_cbranch_scc1 BB0_2                                       // 0000000024C4: BF85FFA5
	s_branch BB0_4                                             // 0000000024C8: BF82000F

00000000000024cc BB0_3:
	v_mov_b32_e32 v11, v12                                     // 0000000024CC: 7E16030C
	v_mov_b32_e32 v13, v12                                     // 0000000024D0: 7E1A030C
	v_mov_b32_e32 v15, v12                                     // 0000000024D4: 7E1E030C
	v_mov_b32_e32 v21, v12                                     // 0000000024D8: 7E2A030C
	v_mov_b32_e32 v20, v12                                     // 0000000024DC: 7E28030C
	v_mov_b32_e32 v19, v12                                     // 0000000024E0: 7E26030C
	v_mov_b32_e32 v18, v12                                     // 0000000024E4: 7E24030C
	v_mov_b32_e32 v17, v12                                     // 0000000024E8: 7E22030C
	v_mov_b32_e32 v9, v12                                      // 0000000024EC: 7E12030C
	v_mov_b32_e32 v8, v12                                      // 0000000024F0: 7E10030C
	v_mov_b32_e32 v7, v12                                      // 0000000024F4: 7E0E030C
	v_mov_b32_e32 v4, v12                                      // 0000000024F8: 7E08030C
	v_mov_b32_e32 v3, v12                                      // 0000000024FC: 7E06030C
	v_mov_b32_e32 v2, v12                                      // 000000002500: 7E04030C
	v_mov_b32_e32 v0, v12                                      // 000000002504: 7E00030C

0000000000002508 BB0_4:
	s_and_b32 s0, s25, 1                                       // 000000002508: 86008119
	v_cmp_gt_u32_e32 vcc, s0, v14                              // 00000000250C: 7D981C00
	s_sub_i32 s8, s8, s6                                       // 000000002510: 81880608
	v_mov_b32_e32 v14, 0                                       // 000000002514: 7E1C0280
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002518: BE86206A
	s_cbranch_execz BB0_6                                      // 00000000251C: BF88000F

0000000000002520 BB0_5:
	v_mov_b32_e32 v14, s8                                      // 000000002520: 7E1C0208
	v_mul_hi_u32 v14, s10, v14                                 // 000000002524: D286000E 00021C0A
	s_mul_i32 s1, s11, s8                                      // 00000000252C: 9201080B
	s_mul_i32 s10, s10, s8                                     // 000000002530: 920A080A
	v_mov_b32_e32 v29, s10                                     // 000000002534: 7E3A020A
	v_add_u32_e32 v30, s1, v14                                 // 000000002538: 683C1C01
	v_lshlrev_b64 v[29:30], 2, v[29:30]                        // 00000000253C: D28F001D 00023A82
	v_add_co_u32_e32 v27, vcc, v27, v29                        // 000000002544: 32363B1B
	v_addc_co_u32_e32 v28, vcc, v28, v30, vcc                  // 000000002548: 38383D1C
	s_nop 0                                                    // 00000000254C: BF800000
	s_nop 0                                                    // 000000002550: BF800000
	global_load_dword v14, v[27:28], off                       // 000000002554: DC508000 0E7F001B

000000000000255c BB0_6:
	s_or_b64 exec, exec, s[6:7]                                // 00000000255C: 87FE067E
	v_cmp_gt_u32_e32 vcc, s0, v10                              // 000000002560: 7D981400
	v_mov_b32_e32 v10, 0                                       // 000000002564: 7E140280
	s_and_saveexec_b64 s[6:7], vcc                             // 000000002568: BE86206A
	s_cbranch_execz BB0_8                                      // 00000000256C: BF880008

0000000000002570 BB0_7:
	s_lshl_b64 s[8:9], s[8:9], 3                               // 000000002570: 8E888308
	v_mov_b32_e32 v10, s9                                      // 000000002574: 7E140209
	v_add_co_u32_e32 v25, vcc, s8, v25                         // 000000002578: 32323208
	v_addc_co_u32_e32 v26, vcc, v26, v10, vcc                  // 00000000257C: 3834151A
	s_nop 0                                                    // 000000002580: BF800000
	s_nop 0                                                    // 000000002584: BF800000
	global_load_dword v10, v[25:26], off                       // 000000002588: DC508000 0A7F0019

0000000000002590 BB0_8:
	s_or_b64 exec, exec, s[6:7]                                // 000000002590: 87FE067E
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002594: BF8C0070
	s_barrier                                                  // 000000002598: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 00000000259C: BF8CC07F
	ds_write_b32 v16, v14                                      // 0000000025A0: D81A0000 00000E10
	ds_write_b32 v22, v10 offset:256                           // 0000000025A8: D81A0100 00000A16
	s_waitcnt lgkmcnt(0)                                       // 0000000025B0: BF8CC07F
	s_barrier                                                  // 0000000025B4: BF8A0000
	s_load_dwordx2 s[10:11], s[4:5], 0x0                       // 0000000025B8: C0060282 00000000
	s_load_dwordx2 s[18:19], s[4:5], 0x8                       // 0000000025C0: C0060482 00000008
	s_cmp_eq_u32 s0, 0                                         // 0000000025C8: BF068000
	s_waitcnt lgkmcnt(0)                                       // 0000000025CC: BF8CC07F
	s_cbranch_scc1 BB0_10                                      // 0000000025D0: BF85001B
	ds_read2_b32 v[25:26], v24 offset1:8                       // 0000000025D4: D86E0800 19000018
	ds_read2_b32 v[27:28], v23 offset0:64 offset1:72           // 0000000025DC: D86E4840 1B000017
	ds_read2_b32 v[29:30], v24 offset0:16 offset1:24           // 0000000025E4: D86E1810 1D000018
	ds_read2_b32 v[22:23], v23 offset0:80 offset1:88           // 0000000025EC: D86E5850 16000017
	s_waitcnt lgkmcnt(2)                                       // 0000000025F4: BF8CC27F
	v_mac_f32_e32 v12, v25, v27                                // 0000000025F8: 2C183719
	v_mac_f32_e32 v11, v26, v27                                // 0000000025FC: 2C16371A
	s_waitcnt lgkmcnt(1)                                       // 000000002600: BF8CC17F
	v_mac_f32_e32 v13, v29, v27                                // 000000002604: 2C1A371D
	v_mac_f32_e32 v15, v30, v27                                // 000000002608: 2C1E371E
	v_mac_f32_e32 v21, v25, v28                                // 00000000260C: 2C2A3919
	v_mac_f32_e32 v20, v26, v28                                // 000000002610: 2C28391A
	v_mac_f32_e32 v19, v29, v28                                // 000000002614: 2C26391D
	v_mac_f32_e32 v18, v30, v28                                // 000000002618: 2C24391E
	s_waitcnt lgkmcnt(0)                                       // 00000000261C: BF8CC07F
	v_mac_f32_e32 v17, v25, v22                                // 000000002620: 2C222D19
	v_mac_f32_e32 v9, v26, v22                                 // 000000002624: 2C122D1A
	v_mac_f32_e32 v4, v25, v23                                 // 000000002628: 2C082F19
	v_mac_f32_e32 v3, v26, v23                                 // 00000000262C: 2C062F1A
	v_mac_f32_e32 v8, v29, v22                                 // 000000002630: 2C102D1D
	v_mac_f32_e32 v7, v30, v22                                 // 000000002634: 2C0E2D1E
	v_mac_f32_e32 v2, v29, v23                                 // 000000002638: 2C042F1D
	v_mac_f32_e32 v0, v30, v23                                 // 00000000263C: 2C002F1E

0000000000002640 BB0_10:
	v_or_b32_e32 v5, s2, v5                                    // 000000002640: 280A0A02
	v_add_u32_e32 v16, s3, v6                                  // 000000002644: 68200C03
	v_cmp_gt_u32_e64 s[0:1], s22, v5                           // 000000002648: D0CC0000 00020A16
	v_cmp_gt_u32_e64 s[8:9], s23, v16                          // 000000002650: D0CC0008 00022017
	s_and_b64 s[4:5], s[0:1], s[8:9]                           // 000000002658: 86840800
	s_and_saveexec_b64 s[2:3], s[4:5]                          // 00000000265C: BE822004
	s_cbranch_execz BB0_14                                     // 000000002660: BF880022

0000000000002664 BB0_11:
	v_cmp_neq_f32_e64 s[4:5], s13, 0                           // 000000002664: D04D0004 0001000D
	v_mul_f32_e32 v10, s12, v12                                // 00000000266C: 0A14180C
	v_mov_b32_e32 v6, 0                                        // 000000002670: 7E0C0280
	s_and_b64 vcc, exec, s[4:5]                                // 000000002674: 86EA047E
	s_cbranch_vccz BB0_13                                      // 000000002678: BF86000F
	v_mad_u64_u32 v[22:23], s[4:5], s16, v16, v[5:6]           // 00000000267C: D1E80416 04162010
	v_mov_b32_e32 v12, s19                                     // 000000002684: 7E180213
	v_mad_u64_u32 v[22:23], s[4:5], v1, s17, v[22:23]          // 000000002688: D1E80416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002690: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s18, v22                        // 000000002698: 322C2C12
	v_addc_co_u32_e32 v23, vcc, v12, v23, vcc                  // 00000000269C: 382E2F0C
	s_nop 0                                                    // 0000000026A0: BF800000
	s_nop 0                                                    // 0000000026A4: BF800000
	global_load_dword v12, v[22:23], off                       // 0000000026A8: DC508000 0C7F0016
	s_waitcnt vmcnt(0)                                         // 0000000026B0: BF8C0F70
	v_mac_f32_e32 v10, s13, v12                                // 0000000026B4: 2C14180D

00000000000026b8 BB0_13:
	v_mad_u64_u32 v[22:23], s[4:5], v1, s15, v[5:6]            // 0000000026B8: D1E80416 04141F01
	v_mov_b32_e32 v6, s11                                      // 0000000026C0: 7E0C020B
	v_mad_u64_u32 v[22:23], s[4:5], v16, s14, v[22:23]         // 0000000026C4: D1E80416 04581D10
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000026CC: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s10, v22                        // 0000000026D4: 322C2C0A
	v_addc_co_u32_e32 v23, vcc, v6, v23, vcc                   // 0000000026D8: 382E2F06
	s_nop 0                                                    // 0000000026DC: BF800000
	s_nop 0                                                    // 0000000026E0: BF800000
	global_store_dword v[22:23], v10, off                      // 0000000026E4: DC708000 007F0A16

00000000000026ec BB0_14:
	s_or_b64 exec, exec, s[2:3]                                // 0000000026EC: 87FE027E
	v_or_b32_e32 v10, 8, v5                                    // 0000000026F0: 28140A88
	v_cmp_gt_u32_e64 s[2:3], s22, v10                          // 0000000026F4: D0CC0002 00021416
	s_and_b64 s[6:7], s[2:3], s[8:9]                           // 0000000026FC: 86860802
	s_and_saveexec_b64 s[4:5], s[6:7]                          // 000000002700: BE842006
	s_cbranch_execz BB0_18                                     // 000000002704: BF880024

0000000000002708 BB0_15:
	v_cmp_neq_f32_e64 s[6:7], s13, 0                           // 000000002708: D04D0006 0001000D
	v_mul_f32_e32 v6, s12, v11                                 // 000000002710: 0A0C160C
	v_mov_b32_e32 v11, 0                                       // 000000002714: 7E160280
	s_and_b64 vcc, exec, s[6:7]                                // 000000002718: 86EA067E
	s_cbranch_vccz BB0_17                                      // 00000000271C: BF860011
	v_mov_b32_e32 v22, v5                                      // 000000002720: 7E2C0305
	v_mov_b32_e32 v23, v11                                     // 000000002724: 7E2E030B
	v_mad_u64_u32 v[22:23], s[6:7], s16, v16, v[22:23]         // 000000002728: D1E80616 045A2010
	v_mov_b32_e32 v12, s19                                     // 000000002730: 7E180213
	v_mad_u64_u32 v[22:23], s[6:7], v1, s17, v[22:23]          // 000000002734: D1E80616 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 00000000273C: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s18, v22                        // 000000002744: 322C2C12
	v_addc_co_u32_e32 v23, vcc, v12, v23, vcc                  // 000000002748: 382E2F0C
	s_nop 0                                                    // 00000000274C: BF800000
	s_nop 0                                                    // 000000002750: BF800000
	global_load_dword v12, v[22:23], off offset:32             // 000000002754: DC508020 0C7F0016
	s_waitcnt vmcnt(0)                                         // 00000000275C: BF8C0F70
	v_mac_f32_e32 v6, s13, v12                                 // 000000002760: 2C0C180D

0000000000002764 BB0_17:
	v_mad_u64_u32 v[11:12], s[6:7], v1, s15, v[10:11]          // 000000002764: D1E8060B 04281F01
	v_mov_b32_e32 v14, s11                                     // 00000000276C: 7E1C020B
	v_mad_u64_u32 v[11:12], s[6:7], v16, s14, v[11:12]         // 000000002770: D1E8060B 042C1D10
	v_lshlrev_b64 v[11:12], 2, v[11:12]                        // 000000002778: D28F000B 00021682
	v_add_co_u32_e32 v11, vcc, s10, v11                        // 000000002780: 3216160A
	v_addc_co_u32_e32 v12, vcc, v14, v12, vcc                  // 000000002784: 3818190E
	s_nop 0                                                    // 000000002788: BF800000
	s_nop 0                                                    // 00000000278C: BF800000
	global_store_dword v[11:12], v6, off                       // 000000002790: DC708000 007F060B

0000000000002798 BB0_18:
	s_or_b64 exec, exec, s[4:5]                                // 000000002798: 87FE047E
	v_or_b32_e32 v12, 16, v5                                   // 00000000279C: 28180A90
	v_cmp_gt_u32_e64 s[4:5], s22, v12                          // 0000000027A0: D0CC0004 00021816
	s_and_b64 s[20:21], s[4:5], s[8:9]                         // 0000000027A8: 86940804
	s_and_saveexec_b64 s[6:7], s[20:21]                        // 0000000027AC: BE862014
	s_cbranch_execz BB0_22                                     // 0000000027B0: BF880024

00000000000027b4 BB0_19:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 0000000027B4: D04D0014 0001000D
	v_mul_f32_e32 v6, s12, v13                                 // 0000000027BC: 0A0C1A0C
	v_mov_b32_e32 v13, 0                                       // 0000000027C0: 7E1A0280
	s_and_b64 vcc, exec, s[20:21]                              // 0000000027C4: 86EA147E
	s_cbranch_vccz BB0_21                                      // 0000000027C8: BF860011
	v_mov_b32_e32 v22, v5                                      // 0000000027CC: 7E2C0305
	v_mov_b32_e32 v23, v13                                     // 0000000027D0: 7E2E030D
	v_mad_u64_u32 v[22:23], s[20:21], s16, v16, v[22:23]       // 0000000027D4: D1E81416 045A2010
	v_mov_b32_e32 v11, s19                                     // 0000000027DC: 7E160213
	v_mad_u64_u32 v[22:23], s[20:21], v1, s17, v[22:23]        // 0000000027E0: D1E81416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000027E8: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s18, v22                        // 0000000027F0: 322C2C12
	v_addc_co_u32_e32 v23, vcc, v11, v23, vcc                  // 0000000027F4: 382E2F0B
	s_nop 0                                                    // 0000000027F8: BF800000
	s_nop 0                                                    // 0000000027FC: BF800000
	global_load_dword v11, v[22:23], off offset:64             // 000000002800: DC508040 0B7F0016
	s_waitcnt vmcnt(0)                                         // 000000002808: BF8C0F70
	v_mac_f32_e32 v6, s13, v11                                 // 00000000280C: 2C0C160D

0000000000002810 BB0_21:
	v_mad_u64_u32 v[13:14], s[20:21], v1, s15, v[12:13]        // 000000002810: D1E8140D 04301F01
	v_mov_b32_e32 v11, s11                                     // 000000002818: 7E16020B
	v_mad_u64_u32 v[13:14], s[20:21], v16, s14, v[13:14]       // 00000000281C: D1E8140D 04341D10
	v_lshlrev_b64 v[13:14], 2, v[13:14]                        // 000000002824: D28F000D 00021A82
	v_add_co_u32_e32 v13, vcc, s10, v13                        // 00000000282C: 321A1A0A
	v_addc_co_u32_e32 v14, vcc, v11, v14, vcc                  // 000000002830: 381C1D0B
	s_nop 0                                                    // 000000002834: BF800000
	s_nop 0                                                    // 000000002838: BF800000
	global_store_dword v[13:14], v6, off                       // 00000000283C: DC708000 007F060D

0000000000002844 BB0_22:
	s_or_b64 exec, exec, s[6:7]                                // 000000002844: 87FE067E
	v_or_b32_e32 v14, 24, v5                                   // 000000002848: 281C0A98
	v_cmp_gt_u32_e64 s[6:7], s22, v14                          // 00000000284C: D0CC0006 00021C16
	s_and_b64 s[20:21], s[6:7], s[8:9]                         // 000000002854: 86940806
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002858: BE882014
	s_cbranch_execz BB0_26                                     // 00000000285C: BF880024

0000000000002860 BB0_23:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002860: D04D0014 0001000D
	v_mul_f32_e32 v6, s12, v15                                 // 000000002868: 0A0C1E0C
	v_mov_b32_e32 v15, 0                                       // 00000000286C: 7E1E0280
	s_and_b64 vcc, exec, s[20:21]                              // 000000002870: 86EA147E
	s_cbranch_vccz BB0_25                                      // 000000002874: BF860011
	v_mov_b32_e32 v22, v5                                      // 000000002878: 7E2C0305
	v_mov_b32_e32 v23, v15                                     // 00000000287C: 7E2E030F
	v_mad_u64_u32 v[22:23], s[20:21], s16, v16, v[22:23]       // 000000002880: D1E81416 045A2010
	v_mov_b32_e32 v11, s19                                     // 000000002888: 7E160213
	v_mad_u64_u32 v[22:23], s[20:21], v1, s17, v[22:23]        // 00000000288C: D1E81416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002894: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s18, v22                        // 00000000289C: 322C2C12
	v_addc_co_u32_e32 v23, vcc, v11, v23, vcc                  // 0000000028A0: 382E2F0B
	s_nop 0                                                    // 0000000028A4: BF800000
	s_nop 0                                                    // 0000000028A8: BF800000
	global_load_dword v11, v[22:23], off offset:96             // 0000000028AC: DC508060 0B7F0016
	s_waitcnt vmcnt(0)                                         // 0000000028B4: BF8C0F70
	v_mac_f32_e32 v6, s13, v11                                 // 0000000028B8: 2C0C160D

00000000000028bc BB0_25:
	v_mad_u64_u32 v[22:23], s[20:21], v1, s15, v[14:15]        // 0000000028BC: D1E81416 04381F01
	v_mov_b32_e32 v11, s11                                     // 0000000028C4: 7E16020B
	v_mad_u64_u32 v[22:23], s[20:21], v16, s14, v[22:23]       // 0000000028C8: D1E81416 04581D10
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000028D0: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s10, v22                        // 0000000028D8: 322C2C0A
	v_addc_co_u32_e32 v23, vcc, v11, v23, vcc                  // 0000000028DC: 382E2F0B
	s_nop 0                                                    // 0000000028E0: BF800000
	s_nop 0                                                    // 0000000028E4: BF800000
	global_store_dword v[22:23], v6, off                       // 0000000028E8: DC708000 007F0616

00000000000028f0 BB0_26:
	s_or_b64 exec, exec, s[8:9]                                // 0000000028F0: 87FE087E
	v_add_u32_e32 v6, 8, v16                                   // 0000000028F4: 680C2088
	v_cmp_gt_u32_e64 s[8:9], s23, v6                           // 0000000028F8: D0CC0008 00020C17
	s_and_b64 s[24:25], s[0:1], s[8:9]                         // 000000002900: 86980800
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002904: BE942018
	s_cbranch_execz BB0_30                                     // 000000002908: BF880023

000000000000290c BB0_27:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 00000000290C: D04D0018 0001000D
	v_mul_f32_e32 v11, s12, v21                                // 000000002914: 0A162A0C
	v_mov_b32_e32 v22, 0                                       // 000000002918: 7E2C0280
	v_mov_b32_e32 v21, v5                                      // 00000000291C: 7E2A0305
	s_and_b64 vcc, exec, s[24:25]                              // 000000002920: 86EA187E
	s_cbranch_vccz BB0_29                                      // 000000002924: BF86000F
	v_mad_u64_u32 v[23:24], s[24:25], s16, v6, v[21:22]        // 000000002928: D1E81817 04560C10
	v_mov_b32_e32 v13, s19                                     // 000000002930: 7E1A0213
	v_mad_u64_u32 v[23:24], s[24:25], v1, s17, v[23:24]        // 000000002934: D1E81817 045C2301
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 00000000293C: D28F0017 00022E82
	v_add_co_u32_e32 v23, vcc, s18, v23                        // 000000002944: 322E2E12
	v_addc_co_u32_e32 v24, vcc, v13, v24, vcc                  // 000000002948: 3830310D
	s_nop 0                                                    // 00000000294C: BF800000
	s_nop 0                                                    // 000000002950: BF800000
	global_load_dword v13, v[23:24], off                       // 000000002954: DC508000 0D7F0017
	s_waitcnt vmcnt(0)                                         // 00000000295C: BF8C0F70
	v_mac_f32_e32 v11, s13, v13                                // 000000002960: 2C161A0D

0000000000002964 BB0_29:
	v_mad_u64_u32 v[21:22], s[24:25], v1, s15, v[21:22]        // 000000002964: D1E81815 04541F01
	v_mov_b32_e32 v13, s11                                     // 00000000296C: 7E1A020B
	v_mad_u64_u32 v[21:22], s[24:25], v6, s14, v[21:22]        // 000000002970: D1E81815 04541D06
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002978: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s10, v21                        // 000000002980: 322A2A0A
	v_addc_co_u32_e32 v22, vcc, v13, v22, vcc                  // 000000002984: 382C2D0D
	s_nop 0                                                    // 000000002988: BF800000
	s_nop 0                                                    // 00000000298C: BF800000
	global_store_dword v[21:22], v11, off                      // 000000002990: DC708000 007F0B15

0000000000002998 BB0_30:
	s_or_b64 exec, exec, s[20:21]                              // 000000002998: 87FE147E
	s_and_b64 s[24:25], s[2:3], s[8:9]                         // 00000000299C: 86980802
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 0000000029A0: BE942018
	s_cbranch_execz BB0_35                                     // 0000000029A4: BF880027

00000000000029a8 BB0_31:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 0000000029A8: D04D0018 0001000D
	v_mul_f32_e32 v11, s12, v20                                // 0000000029B0: 0A16280C
	v_mov_b32_e32 v21, 0                                       // 0000000029B4: 7E2A0280
	s_and_b64 vcc, exec, s[24:25]                              // 0000000029B8: 86EA187E
	s_cbranch_vccz BB0_33                                      // 0000000029BC: BF860013
	v_mov_b32_e32 v22, v5                                      // 0000000029C0: 7E2C0305
	v_mov_b32_e32 v23, v21                                     // 0000000029C4: 7E2E0315
	v_mad_u64_u32 v[22:23], s[24:25], s16, v6, v[22:23]        // 0000000029C8: D1E81816 045A0C10
	v_mov_b32_e32 v13, s19                                     // 0000000029D0: 7E1A0213
	v_mov_b32_e32 v20, v10                                     // 0000000029D4: 7E28030A
	v_mad_u64_u32 v[22:23], s[24:25], v1, s17, v[22:23]        // 0000000029D8: D1E81816 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000029E0: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s18, v22                        // 0000000029E8: 322C2C12
	v_addc_co_u32_e32 v23, vcc, v13, v23, vcc                  // 0000000029EC: 382E2F0D
	s_nop 0                                                    // 0000000029F0: BF800000
	s_nop 0                                                    // 0000000029F4: BF800000
	global_load_dword v13, v[22:23], off offset:32             // 0000000029F8: DC508020 0D7F0016
	s_waitcnt vmcnt(0)                                         // 000000002A00: BF8C0F70
	v_mac_f32_e32 v11, s13, v13                                // 000000002A04: 2C161A0D
	s_branch BB0_34                                            // 000000002A08: BF820001

0000000000002a0c BB0_33:
	v_mov_b32_e32 v20, v10                                     // 000000002A0C: 7E28030A

0000000000002a10 BB0_34:
	v_mad_u64_u32 v[20:21], s[24:25], v1, s15, v[20:21]        // 000000002A10: D1E81814 04501F01
	v_mov_b32_e32 v13, s11                                     // 000000002A18: 7E1A020B
	v_mad_u64_u32 v[20:21], s[24:25], v6, s14, v[20:21]        // 000000002A1C: D1E81814 04501D06
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000002A24: D28F0014 00022882
	v_add_co_u32_e32 v20, vcc, s10, v20                        // 000000002A2C: 3228280A
	v_addc_co_u32_e32 v21, vcc, v13, v21, vcc                  // 000000002A30: 382A2B0D
	s_nop 0                                                    // 000000002A34: BF800000
	s_nop 0                                                    // 000000002A38: BF800000
	global_store_dword v[20:21], v11, off                      // 000000002A3C: DC708000 007F0B14

0000000000002a44 BB0_35:
	s_or_b64 exec, exec, s[20:21]                              // 000000002A44: 87FE147E
	s_and_b64 s[24:25], s[4:5], s[8:9]                         // 000000002A48: 86980804
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002A4C: BE942018
	s_cbranch_execz BB0_40                                     // 000000002A50: BF880027

0000000000002a54 BB0_36:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002A54: D04D0018 0001000D
	v_mul_f32_e32 v11, s12, v19                                // 000000002A5C: 0A16260C
	v_mov_b32_e32 v20, 0                                       // 000000002A60: 7E280280
	s_and_b64 vcc, exec, s[24:25]                              // 000000002A64: 86EA187E
	s_cbranch_vccz BB0_38                                      // 000000002A68: BF860013
	v_mov_b32_e32 v21, v5                                      // 000000002A6C: 7E2A0305
	v_mov_b32_e32 v22, v20                                     // 000000002A70: 7E2C0314
	v_mad_u64_u32 v[21:22], s[24:25], s16, v6, v[21:22]        // 000000002A74: D1E81815 04560C10
	v_mov_b32_e32 v13, s19                                     // 000000002A7C: 7E1A0213
	v_mov_b32_e32 v19, v12                                     // 000000002A80: 7E26030C
	v_mad_u64_u32 v[21:22], s[24:25], v1, s17, v[21:22]        // 000000002A84: D1E81815 04542301
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002A8C: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s18, v21                        // 000000002A94: 322A2A12
	v_addc_co_u32_e32 v22, vcc, v13, v22, vcc                  // 000000002A98: 382C2D0D
	s_nop 0                                                    // 000000002A9C: BF800000
	s_nop 0                                                    // 000000002AA0: BF800000
	global_load_dword v13, v[21:22], off offset:64             // 000000002AA4: DC508040 0D7F0015
	s_waitcnt vmcnt(0)                                         // 000000002AAC: BF8C0F70
	v_mac_f32_e32 v11, s13, v13                                // 000000002AB0: 2C161A0D
	s_branch BB0_39                                            // 000000002AB4: BF820001

0000000000002ab8 BB0_38:
	v_mov_b32_e32 v19, v12                                     // 000000002AB8: 7E26030C

0000000000002abc BB0_39:
	v_mad_u64_u32 v[19:20], s[24:25], v1, s15, v[19:20]        // 000000002ABC: D1E81813 044C1F01
	v_mov_b32_e32 v13, s11                                     // 000000002AC4: 7E1A020B
	v_mad_u64_u32 v[19:20], s[24:25], v6, s14, v[19:20]        // 000000002AC8: D1E81813 044C1D06
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002AD0: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s10, v19                        // 000000002AD8: 3226260A
	v_addc_co_u32_e32 v20, vcc, v13, v20, vcc                  // 000000002ADC: 3828290D
	s_nop 0                                                    // 000000002AE0: BF800000
	s_nop 0                                                    // 000000002AE4: BF800000
	global_store_dword v[19:20], v11, off                      // 000000002AE8: DC708000 007F0B13

0000000000002af0 BB0_40:
	s_or_b64 exec, exec, s[20:21]                              // 000000002AF0: 87FE147E
	s_and_b64 s[20:21], s[6:7], s[8:9]                         // 000000002AF4: 86940806
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002AF8: BE882014
	s_cbranch_execz BB0_45                                     // 000000002AFC: BF880027

0000000000002b00 BB0_41:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002B00: D04D0014 0001000D
	v_mul_f32_e32 v11, s12, v18                                // 000000002B08: 0A16240C
	v_mov_b32_e32 v19, 0                                       // 000000002B0C: 7E260280
	s_and_b64 vcc, exec, s[20:21]                              // 000000002B10: 86EA147E
	s_cbranch_vccz BB0_43                                      // 000000002B14: BF860013
	v_mov_b32_e32 v20, v5                                      // 000000002B18: 7E280305
	v_mov_b32_e32 v21, v19                                     // 000000002B1C: 7E2A0313
	v_mad_u64_u32 v[20:21], s[20:21], s16, v6, v[20:21]        // 000000002B20: D1E81414 04520C10
	v_mov_b32_e32 v13, s19                                     // 000000002B28: 7E1A0213
	v_mov_b32_e32 v18, v14                                     // 000000002B2C: 7E24030E
	v_mad_u64_u32 v[20:21], s[20:21], v1, s17, v[20:21]        // 000000002B30: D1E81414 04502301
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000002B38: D28F0014 00022882
	v_add_co_u32_e32 v20, vcc, s18, v20                        // 000000002B40: 32282812
	v_addc_co_u32_e32 v21, vcc, v13, v21, vcc                  // 000000002B44: 382A2B0D
	s_nop 0                                                    // 000000002B48: BF800000
	s_nop 0                                                    // 000000002B4C: BF800000
	global_load_dword v13, v[20:21], off offset:96             // 000000002B50: DC508060 0D7F0014
	s_waitcnt vmcnt(0)                                         // 000000002B58: BF8C0F70
	v_mac_f32_e32 v11, s13, v13                                // 000000002B5C: 2C161A0D
	s_branch BB0_44                                            // 000000002B60: BF820001

0000000000002b64 BB0_43:
	v_mov_b32_e32 v18, v14                                     // 000000002B64: 7E24030E

0000000000002b68 BB0_44:
	v_mad_u64_u32 v[18:19], s[20:21], v1, s15, v[18:19]        // 000000002B68: D1E81412 04481F01
	v_mad_u64_u32 v[18:19], s[20:21], v6, s14, v[18:19]        // 000000002B70: D1E81412 04481D06
	v_mov_b32_e32 v6, s11                                      // 000000002B78: 7E0C020B
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000002B7C: D28F0012 00022482
	v_add_co_u32_e32 v18, vcc, s10, v18                        // 000000002B84: 3224240A
	v_addc_co_u32_e32 v19, vcc, v6, v19, vcc                   // 000000002B88: 38262706
	s_nop 0                                                    // 000000002B8C: BF800000
	s_nop 0                                                    // 000000002B90: BF800000
	global_store_dword v[18:19], v11, off                      // 000000002B94: DC708000 007F0B12

0000000000002b9c BB0_45:
	s_or_b64 exec, exec, s[8:9]                                // 000000002B9C: 87FE087E
	v_add_u32_e32 v6, 16, v16                                  // 000000002BA0: 680C2090
	v_cmp_gt_u32_e64 s[8:9], s23, v6                           // 000000002BA4: D0CC0008 00020C17
	s_and_b64 s[24:25], s[0:1], s[8:9]                         // 000000002BAC: 86980800
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002BB0: BE942018
	s_cbranch_execz BB0_49                                     // 000000002BB4: BF880023

0000000000002bb8 BB0_46:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002BB8: D04D0018 0001000D
	v_mul_f32_e32 v11, s12, v17                                // 000000002BC0: 0A16220C
	v_mov_b32_e32 v18, 0                                       // 000000002BC4: 7E240280
	v_mov_b32_e32 v17, v5                                      // 000000002BC8: 7E220305
	s_and_b64 vcc, exec, s[24:25]                              // 000000002BCC: 86EA187E
	s_cbranch_vccz BB0_48                                      // 000000002BD0: BF86000F
	v_mad_u64_u32 v[19:20], s[24:25], s16, v6, v[17:18]        // 000000002BD4: D1E81813 04460C10
	v_mov_b32_e32 v13, s19                                     // 000000002BDC: 7E1A0213
	v_mad_u64_u32 v[19:20], s[24:25], v1, s17, v[19:20]        // 000000002BE0: D1E81813 044C2301
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002BE8: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s18, v19                        // 000000002BF0: 32262612
	v_addc_co_u32_e32 v20, vcc, v13, v20, vcc                  // 000000002BF4: 3828290D
	s_nop 0                                                    // 000000002BF8: BF800000
	s_nop 0                                                    // 000000002BFC: BF800000
	global_load_dword v13, v[19:20], off                       // 000000002C00: DC508000 0D7F0013
	s_waitcnt vmcnt(0)                                         // 000000002C08: BF8C0F70
	v_mac_f32_e32 v11, s13, v13                                // 000000002C0C: 2C161A0D

0000000000002c10 BB0_48:
	v_mad_u64_u32 v[17:18], s[24:25], v1, s15, v[17:18]        // 000000002C10: D1E81811 04441F01
	v_mov_b32_e32 v13, s11                                     // 000000002C18: 7E1A020B
	v_mad_u64_u32 v[17:18], s[24:25], v6, s14, v[17:18]        // 000000002C1C: D1E81811 04441D06
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002C24: D28F0011 00022282
	v_add_co_u32_e32 v17, vcc, s10, v17                        // 000000002C2C: 3222220A
	v_addc_co_u32_e32 v18, vcc, v13, v18, vcc                  // 000000002C30: 3824250D
	s_nop 0                                                    // 000000002C34: BF800000
	s_nop 0                                                    // 000000002C38: BF800000
	global_store_dword v[17:18], v11, off                      // 000000002C3C: DC708000 007F0B11

0000000000002c44 BB0_49:
	s_or_b64 exec, exec, s[20:21]                              // 000000002C44: 87FE147E
	s_and_b64 s[24:25], s[2:3], s[8:9]                         // 000000002C48: 86980802
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002C4C: BE942018
	s_cbranch_execz BB0_54                                     // 000000002C50: BF880027

0000000000002c54 BB0_50:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002C54: D04D0018 0001000D
	v_mul_f32_e32 v9, s12, v9                                  // 000000002C5C: 0A12120C
	v_mov_b32_e32 v18, 0                                       // 000000002C60: 7E240280
	s_and_b64 vcc, exec, s[24:25]                              // 000000002C64: 86EA187E
	s_cbranch_vccz BB0_52                                      // 000000002C68: BF860013
	v_mov_b32_e32 v19, v5                                      // 000000002C6C: 7E260305
	v_mov_b32_e32 v20, v18                                     // 000000002C70: 7E280312
	v_mad_u64_u32 v[19:20], s[24:25], s16, v6, v[19:20]        // 000000002C74: D1E81813 044E0C10
	v_mov_b32_e32 v11, s19                                     // 000000002C7C: 7E160213
	v_mov_b32_e32 v17, v10                                     // 000000002C80: 7E22030A
	v_mad_u64_u32 v[19:20], s[24:25], v1, s17, v[19:20]        // 000000002C84: D1E81813 044C2301
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002C8C: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s18, v19                        // 000000002C94: 32262612
	v_addc_co_u32_e32 v20, vcc, v11, v20, vcc                  // 000000002C98: 3828290B
	s_nop 0                                                    // 000000002C9C: BF800000
	s_nop 0                                                    // 000000002CA0: BF800000
	global_load_dword v11, v[19:20], off offset:32             // 000000002CA4: DC508020 0B7F0013
	s_waitcnt vmcnt(0)                                         // 000000002CAC: BF8C0F70
	v_mac_f32_e32 v9, s13, v11                                 // 000000002CB0: 2C12160D
	s_branch BB0_53                                            // 000000002CB4: BF820001

0000000000002cb8 BB0_52:
	v_mov_b32_e32 v17, v10                                     // 000000002CB8: 7E22030A

0000000000002cbc BB0_53:
	v_mad_u64_u32 v[17:18], s[24:25], v1, s15, v[17:18]        // 000000002CBC: D1E81811 04441F01
	v_mov_b32_e32 v11, s11                                     // 000000002CC4: 7E16020B
	v_mad_u64_u32 v[17:18], s[24:25], v6, s14, v[17:18]        // 000000002CC8: D1E81811 04441D06
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002CD0: D28F0011 00022282
	v_add_co_u32_e32 v17, vcc, s10, v17                        // 000000002CD8: 3222220A
	v_addc_co_u32_e32 v18, vcc, v11, v18, vcc                  // 000000002CDC: 3824250B
	s_nop 0                                                    // 000000002CE0: BF800000
	s_nop 0                                                    // 000000002CE4: BF800000
	global_store_dword v[17:18], v9, off                       // 000000002CE8: DC708000 007F0911

0000000000002cf0 BB0_54:
	s_or_b64 exec, exec, s[20:21]                              // 000000002CF0: 87FE147E
	s_and_b64 s[24:25], s[4:5], s[8:9]                         // 000000002CF4: 86980804
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002CF8: BE942018
	s_cbranch_execz BB0_59                                     // 000000002CFC: BF880027

0000000000002d00 BB0_55:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002D00: D04D0018 0001000D
	v_mul_f32_e32 v8, s12, v8                                  // 000000002D08: 0A10100C
	v_mov_b32_e32 v18, 0                                       // 000000002D0C: 7E240280
	s_and_b64 vcc, exec, s[24:25]                              // 000000002D10: 86EA187E
	s_cbranch_vccz BB0_57                                      // 000000002D14: BF860013
	v_mov_b32_e32 v19, v5                                      // 000000002D18: 7E260305
	v_mov_b32_e32 v20, v18                                     // 000000002D1C: 7E280312
	v_mad_u64_u32 v[19:20], s[24:25], s16, v6, v[19:20]        // 000000002D20: D1E81813 044E0C10
	v_mov_b32_e32 v9, s19                                      // 000000002D28: 7E120213
	v_mov_b32_e32 v17, v12                                     // 000000002D2C: 7E22030C
	v_mad_u64_u32 v[19:20], s[24:25], v1, s17, v[19:20]        // 000000002D30: D1E81813 044C2301
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002D38: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s18, v19                        // 000000002D40: 32262612
	v_addc_co_u32_e32 v20, vcc, v9, v20, vcc                   // 000000002D44: 38282909
	s_nop 0                                                    // 000000002D48: BF800000
	s_nop 0                                                    // 000000002D4C: BF800000
	global_load_dword v9, v[19:20], off offset:64              // 000000002D50: DC508040 097F0013
	s_waitcnt vmcnt(0)                                         // 000000002D58: BF8C0F70
	v_mac_f32_e32 v8, s13, v9                                  // 000000002D5C: 2C10120D
	s_branch BB0_58                                            // 000000002D60: BF820001

0000000000002d64 BB0_57:
	v_mov_b32_e32 v17, v12                                     // 000000002D64: 7E22030C

0000000000002d68 BB0_58:
	v_mad_u64_u32 v[17:18], s[24:25], v1, s15, v[17:18]        // 000000002D68: D1E81811 04441F01
	v_mov_b32_e32 v9, s11                                      // 000000002D70: 7E12020B
	v_mad_u64_u32 v[17:18], s[24:25], v6, s14, v[17:18]        // 000000002D74: D1E81811 04441D06
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002D7C: D28F0011 00022282
	v_add_co_u32_e32 v17, vcc, s10, v17                        // 000000002D84: 3222220A
	v_addc_co_u32_e32 v18, vcc, v9, v18, vcc                   // 000000002D88: 38242509
	s_nop 0                                                    // 000000002D8C: BF800000
	s_nop 0                                                    // 000000002D90: BF800000
	global_store_dword v[17:18], v8, off                       // 000000002D94: DC708000 007F0811

0000000000002d9c BB0_59:
	s_or_b64 exec, exec, s[20:21]                              // 000000002D9C: 87FE147E
	s_and_b64 s[20:21], s[6:7], s[8:9]                         // 000000002DA0: 86940806
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002DA4: BE882014
	s_cbranch_execz BB0_64                                     // 000000002DA8: BF880027

0000000000002dac BB0_60:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002DAC: D04D0014 0001000D
	v_mul_f32_e32 v7, s12, v7                                  // 000000002DB4: 0A0E0E0C
	v_mov_b32_e32 v9, 0                                        // 000000002DB8: 7E120280
	s_and_b64 vcc, exec, s[20:21]                              // 000000002DBC: 86EA147E
	s_cbranch_vccz BB0_62                                      // 000000002DC0: BF860013
	v_mov_b32_e32 v17, v5                                      // 000000002DC4: 7E220305
	v_mov_b32_e32 v18, v9                                      // 000000002DC8: 7E240309
	v_mad_u64_u32 v[17:18], s[20:21], s16, v6, v[17:18]        // 000000002DCC: D1E81411 04460C10
	v_mov_b32_e32 v11, s19                                     // 000000002DD4: 7E160213
	v_mov_b32_e32 v8, v14                                      // 000000002DD8: 7E10030E
	v_mad_u64_u32 v[17:18], s[20:21], v1, s17, v[17:18]        // 000000002DDC: D1E81411 04442301
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002DE4: D28F0011 00022282
	v_add_co_u32_e32 v17, vcc, s18, v17                        // 000000002DEC: 32222212
	v_addc_co_u32_e32 v18, vcc, v11, v18, vcc                  // 000000002DF0: 3824250B
	s_nop 0                                                    // 000000002DF4: BF800000
	s_nop 0                                                    // 000000002DF8: BF800000
	global_load_dword v11, v[17:18], off offset:96             // 000000002DFC: DC508060 0B7F0011
	s_waitcnt vmcnt(0)                                         // 000000002E04: BF8C0F70
	v_mac_f32_e32 v7, s13, v11                                 // 000000002E08: 2C0E160D
	s_branch BB0_63                                            // 000000002E0C: BF820001

0000000000002e10 BB0_62:
	v_mov_b32_e32 v8, v14                                      // 000000002E10: 7E10030E

0000000000002e14 BB0_63:
	v_mad_u64_u32 v[8:9], s[20:21], v1, s15, v[8:9]            // 000000002E14: D1E81408 04201F01
	v_mad_u64_u32 v[8:9], s[20:21], v6, s14, v[8:9]            // 000000002E1C: D1E81408 04201D06
	v_mov_b32_e32 v6, s11                                      // 000000002E24: 7E0C020B
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000002E28: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s10, v8                          // 000000002E30: 3210100A
	v_addc_co_u32_e32 v9, vcc, v6, v9, vcc                     // 000000002E34: 38121306
	s_nop 0                                                    // 000000002E38: BF800000
	s_nop 0                                                    // 000000002E3C: BF800000
	global_store_dword v[8:9], v7, off                         // 000000002E40: DC708000 007F0708

0000000000002e48 BB0_64:
	s_or_b64 exec, exec, s[8:9]                                // 000000002E48: 87FE087E
	v_add_u32_e32 v7, 24, v16                                  // 000000002E4C: 680E2098
	v_cmp_gt_u32_e64 s[8:9], s23, v7                           // 000000002E50: D0CC0008 00020E17
	s_and_b64 s[20:21], s[0:1], s[8:9]                         // 000000002E58: 86940800
	s_and_saveexec_b64 s[0:1], s[20:21]                        // 000000002E5C: BE802014
	s_cbranch_execz BB0_68                                     // 000000002E60: BF880023

0000000000002e64 BB0_65:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002E64: D04D0014 0001000D
	v_mul_f32_e32 v4, s12, v4                                  // 000000002E6C: 0A08080C
	v_mov_b32_e32 v9, 0                                        // 000000002E70: 7E120280
	v_mov_b32_e32 v8, v5                                       // 000000002E74: 7E100305
	s_and_b64 vcc, exec, s[20:21]                              // 000000002E78: 86EA147E
	s_cbranch_vccz BB0_67                                      // 000000002E7C: BF86000F
	v_mad_u64_u32 v[15:16], s[20:21], s16, v7, v[8:9]          // 000000002E80: D1E8140F 04220E10
	v_mov_b32_e32 v6, s19                                      // 000000002E88: 7E0C0213
	v_mad_u64_u32 v[15:16], s[20:21], v1, s17, v[15:16]        // 000000002E8C: D1E8140F 043C2301
	v_lshlrev_b64 v[15:16], 2, v[15:16]                        // 000000002E94: D28F000F 00021E82
	v_add_co_u32_e32 v15, vcc, s18, v15                        // 000000002E9C: 321E1E12
	v_addc_co_u32_e32 v16, vcc, v6, v16, vcc                   // 000000002EA0: 38202106
	s_nop 0                                                    // 000000002EA4: BF800000
	s_nop 0                                                    // 000000002EA8: BF800000
	global_load_dword v6, v[15:16], off                        // 000000002EAC: DC508000 067F000F
	s_waitcnt vmcnt(0)                                         // 000000002EB4: BF8C0F70
	v_mac_f32_e32 v4, s13, v6                                  // 000000002EB8: 2C080C0D

0000000000002ebc BB0_67:
	v_mad_u64_u32 v[8:9], s[20:21], v1, s15, v[8:9]            // 000000002EBC: D1E81408 04201F01
	v_mov_b32_e32 v6, s11                                      // 000000002EC4: 7E0C020B
	v_mad_u64_u32 v[8:9], s[20:21], v7, s14, v[8:9]            // 000000002EC8: D1E81408 04201D07
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000002ED0: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s10, v8                          // 000000002ED8: 3210100A
	v_addc_co_u32_e32 v9, vcc, v6, v9, vcc                     // 000000002EDC: 38121306
	s_nop 0                                                    // 000000002EE0: BF800000
	s_nop 0                                                    // 000000002EE4: BF800000
	global_store_dword v[8:9], v4, off                         // 000000002EE8: DC708000 007F0408

0000000000002ef0 BB0_68:
	s_or_b64 exec, exec, s[0:1]                                // 000000002EF0: 87FE007E
	s_and_b64 s[2:3], s[2:3], s[8:9]                           // 000000002EF4: 86820802
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002EF8: BE802002
	s_cbranch_execz BB0_72                                     // 000000002EFC: BF880024

0000000000002f00 BB0_69:
	v_cmp_neq_f32_e64 s[2:3], s13, 0                           // 000000002F00: D04D0002 0001000D
	v_mul_f32_e32 v3, s12, v3                                  // 000000002F08: 0A06060C
	v_mov_b32_e32 v11, 0                                       // 000000002F0C: 7E160280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002F10: 86EA027E
	s_cbranch_vccz BB0_71                                      // 000000002F14: BF860011
	v_mov_b32_e32 v8, v5                                       // 000000002F18: 7E100305
	v_mov_b32_e32 v9, v11                                      // 000000002F1C: 7E12030B
	v_mad_u64_u32 v[8:9], s[2:3], s16, v7, v[8:9]              // 000000002F20: D1E80208 04220E10
	v_mov_b32_e32 v4, s19                                      // 000000002F28: 7E080213
	v_mad_u64_u32 v[8:9], s[2:3], v1, s17, v[8:9]              // 000000002F2C: D1E80208 04202301
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000002F34: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s18, v8                          // 000000002F3C: 32101012
	v_addc_co_u32_e32 v9, vcc, v4, v9, vcc                     // 000000002F40: 38121304
	s_nop 0                                                    // 000000002F44: BF800000
	s_nop 0                                                    // 000000002F48: BF800000
	global_load_dword v4, v[8:9], off offset:32                // 000000002F4C: DC508020 047F0008
	s_waitcnt vmcnt(0)                                         // 000000002F54: BF8C0F70
	v_mac_f32_e32 v3, s13, v4                                  // 000000002F58: 2C06080D

0000000000002f5c BB0_71:
	v_mad_u64_u32 v[8:9], s[2:3], v1, s15, v[10:11]            // 000000002F5C: D1E80208 04281F01
	v_mov_b32_e32 v4, s11                                      // 000000002F64: 7E08020B
	v_mad_u64_u32 v[8:9], s[2:3], v7, s14, v[8:9]              // 000000002F68: D1E80208 04201D07
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000002F70: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s10, v8                          // 000000002F78: 3210100A
	v_addc_co_u32_e32 v9, vcc, v4, v9, vcc                     // 000000002F7C: 38121304
	s_nop 0                                                    // 000000002F80: BF800000
	s_nop 0                                                    // 000000002F84: BF800000
	global_store_dword v[8:9], v3, off                         // 000000002F88: DC708000 007F0308

0000000000002f90 BB0_72:
	s_or_b64 exec, exec, s[0:1]                                // 000000002F90: 87FE007E
	s_and_b64 s[2:3], s[4:5], s[8:9]                           // 000000002F94: 86820804
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002F98: BE802002
	s_cbranch_execz BB0_76                                     // 000000002F9C: BF880024

0000000000002fa0 BB0_73:
	v_cmp_neq_f32_e64 s[2:3], s13, 0                           // 000000002FA0: D04D0002 0001000D
	v_mul_f32_e32 v2, s12, v2                                  // 000000002FA8: 0A04040C
	v_mov_b32_e32 v13, 0                                       // 000000002FAC: 7E1A0280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002FB0: 86EA027E
	s_cbranch_vccz BB0_75                                      // 000000002FB4: BF860011
	v_mov_b32_e32 v3, v5                                       // 000000002FB8: 7E060305
	v_mov_b32_e32 v4, v13                                      // 000000002FBC: 7E08030D
	v_mad_u64_u32 v[3:4], s[2:3], s16, v7, v[3:4]              // 000000002FC0: D1E80203 040E0E10
	v_mov_b32_e32 v6, s19                                      // 000000002FC8: 7E0C0213
	v_mad_u64_u32 v[3:4], s[2:3], v1, s17, v[3:4]              // 000000002FCC: D1E80203 040C2301
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 000000002FD4: D28F0003 00020682
	v_add_co_u32_e32 v3, vcc, s18, v3                          // 000000002FDC: 32060612
	v_addc_co_u32_e32 v4, vcc, v6, v4, vcc                     // 000000002FE0: 38080906
	s_nop 0                                                    // 000000002FE4: BF800000
	s_nop 0                                                    // 000000002FE8: BF800000
	global_load_dword v3, v[3:4], off offset:64                // 000000002FEC: DC508040 037F0003
	s_waitcnt vmcnt(0)                                         // 000000002FF4: BF8C0F70
	v_mac_f32_e32 v2, s13, v3                                  // 000000002FF8: 2C04060D

0000000000002ffc BB0_75:
	v_mad_u64_u32 v[3:4], s[2:3], v1, s15, v[12:13]            // 000000002FFC: D1E80203 04301F01
	v_mov_b32_e32 v6, s11                                      // 000000003004: 7E0C020B
	v_mad_u64_u32 v[3:4], s[2:3], v7, s14, v[3:4]              // 000000003008: D1E80203 040C1D07
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 000000003010: D28F0003 00020682
	v_add_co_u32_e32 v3, vcc, s10, v3                          // 000000003018: 3206060A
	v_addc_co_u32_e32 v4, vcc, v6, v4, vcc                     // 00000000301C: 38080906
	s_nop 0                                                    // 000000003020: BF800000
	s_nop 0                                                    // 000000003024: BF800000
	global_store_dword v[3:4], v2, off                         // 000000003028: DC708000 007F0203

0000000000003030 BB0_76:
	s_or_b64 exec, exec, s[0:1]                                // 000000003030: 87FE007E
	s_and_b64 s[0:1], s[6:7], s[8:9]                           // 000000003034: 86800806
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000003038: BE822000
	s_cbranch_execz BB0_80                                     // 00000000303C: BF880023

0000000000003040 BB0_77:
	v_cmp_neq_f32_e64 s[0:1], s13, 0                           // 000000003040: D04D0000 0001000D
	v_mul_f32_e32 v0, s12, v0                                  // 000000003048: 0A00000C
	v_mov_b32_e32 v15, 0                                       // 00000000304C: 7E1E0280
	s_and_b64 vcc, exec, s[0:1]                                // 000000003050: 86EA007E
	s_cbranch_vccz BB0_79                                      // 000000003054: BF860010
	v_mov_b32_e32 v6, v15                                      // 000000003058: 7E0C030F
	v_mad_u64_u32 v[2:3], s[0:1], s16, v7, v[5:6]              // 00000000305C: D1E80002 04160E10
	v_mov_b32_e32 v4, s19                                      // 000000003064: 7E080213
	v_mad_u64_u32 v[2:3], s[0:1], v1, s17, v[2:3]              // 000000003068: D1E80002 04082301
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000003070: D28F0002 00020482
	v_add_co_u32_e32 v2, vcc, s18, v2                          // 000000003078: 32040412
	v_addc_co_u32_e32 v3, vcc, v4, v3, vcc                     // 00000000307C: 38060704
	s_nop 0                                                    // 000000003080: BF800000
	s_nop 0                                                    // 000000003084: BF800000
	global_load_dword v2, v[2:3], off offset:96                // 000000003088: DC508060 027F0002
	s_waitcnt vmcnt(0)                                         // 000000003090: BF8C0F70
	v_mac_f32_e32 v0, s13, v2                                  // 000000003094: 2C00040D

0000000000003098 BB0_79:
	v_mad_u64_u32 v[1:2], s[0:1], v1, s15, v[14:15]            // 000000003098: D1E80001 04381F01
	v_mov_b32_e32 v3, s11                                      // 0000000030A0: 7E06020B
	v_mad_u64_u32 v[1:2], s[0:1], v7, s14, v[1:2]              // 0000000030A4: D1E80001 04041D07
	v_lshlrev_b64 v[1:2], 2, v[1:2]                            // 0000000030AC: D28F0001 00020282
	v_add_co_u32_e32 v1, vcc, s10, v1                          // 0000000030B4: 3202020A
	v_addc_co_u32_e32 v2, vcc, v3, v2, vcc                     // 0000000030B8: 38040503
	s_nop 0                                                    // 0000000030BC: BF800000
	s_nop 0                                                    // 0000000030C0: BF800000
	global_store_dword v[1:2], v0, off                         // 0000000030C4: DC708000 007F0001

00000000000030cc BB0_80:
	s_endpgm                                                   // 0000000030CC: BF810000
