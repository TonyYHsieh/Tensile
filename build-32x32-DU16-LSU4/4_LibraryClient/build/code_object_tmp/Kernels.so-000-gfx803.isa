
Kernels.so-000-gfx803.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000002100 Cijk_Ailk_Bljk_SB_MT32x32x16_SE_K1:
	s_load_dwordx2 s[30:31], s[4:5], 0x10                      // 000000002100: C0060782 00000010
	s_load_dwordx2 s[28:29], s[4:5], 0x18                      // 000000002108: C0060702 00000018
	s_load_dwordx8 s[12:19], s[4:5], 0x20                      // 000000002110: C00E0302 00000020
	s_load_dwordx4 s[20:23], s[4:5], 0x40                      // 000000002118: C00A0502 00000040
	s_load_dwordx4 s[24:27], s[4:5], 0x50                      // 000000002120: C00A0602 00000050
	v_lshrrev_b32_e32 v2, 6, v0                                // 000000002128: 20040086
	v_and_b32_e32 v4, 7, v0                                    // 00000000212C: 26080087
	v_lshlrev_b32_e32 v1, 5, v2                                // 000000002130: 24020485
	v_bfe_u32 v6, v0, 3, 3                                     // 000000002134: D1C80006 020D0700
	s_waitcnt lgkmcnt(0)                                       // 00000000213C: BF8C007F
	v_cvt_f32_u32_e32 v3, s24                                  // 000000002140: 7E060C18
	v_or_b32_e32 v22, v1, v4                                   // 000000002144: 282C0901
	v_or_b32_e32 v23, v1, v6                                   // 000000002148: 282E0D01
	v_and_b32_e32 v1, 31, v0                                   // 00000000214C: 2602009F
	v_rcp_iflag_f32_e32 v3, v3                                 // 000000002150: 7E064703
	s_lshl_b32 s2, s6, 5                                       // 000000002154: 8E028506
	v_or_b32_e32 v1, s2, v1                                    // 000000002158: 28020202
	v_lshrrev_b32_e32 v20, 4, v0                               // 00000000215C: 20280084
	v_mul_f32_e32 v3, 0x4f800000, v3                           // 000000002160: 0A0606FF 4F800000
	v_cvt_u32_f32_e32 v3, v3                                   // 000000002168: 7E060F03
	s_lshl_b32 s7, s7, 5                                       // 00000000216C: 8E078507
	s_mov_b32 s38, s9                                          // 000000002170: BEA60009
	s_mov_b32 s9, 0                                            // 000000002174: BE890080
	v_mul_lo_u32 v5, v3, s24                                   // 000000002178: D2850005 00003103
	v_mul_hi_u32 v7, v3, s24                                   // 000000002180: D2860007 00003103
	s_mov_b32 s11, s9                                          // 000000002188: BE8B0009
	s_mov_b32 s32, s38                                         // 00000000218C: BEA00026
	v_sub_u32_e32 v8, vcc, 0, v5                               // 000000002190: 34100A80
	v_cmp_eq_u32_e64 s[0:1], 0, v7                             // 000000002194: D0CA0000 00020E80
	v_cndmask_b32_e64 v5, v5, v8, s[0:1]                       // 00000000219C: D1000005 00021105
	v_mul_hi_u32 v5, v5, v3                                    // 0000000021A4: D2860005 00020705
	v_or_b32_e32 v8, s7, v20                                   // 0000000021AC: 28102807
	s_mov_b32 m0, -1                                           // 0000000021B0: BEFC00C1
	v_add_u32_e32 v7, vcc, v5, v3                              // 0000000021B4: 320E0705
	v_subrev_u32_e32 v3, vcc, v5, v3                           // 0000000021B8: 36060705
	v_cndmask_b32_e64 v3, v3, v7, s[0:1]                       // 0000000021BC: D1000003 00020F03
	v_mul_hi_u32 v3, v3, s8                                    // 0000000021C4: D2860003 00001103
	v_lshrrev_b32_e32 v5, 5, v0                                // 0000000021CC: 200A0085
	v_and_b32_e32 v7, 15, v0                                   // 0000000021D0: 260E008F
	v_lshlrev_b32_e32 v0, 2, v0                                // 0000000021D4: 24000082
	v_mul_lo_u32 v3, v3, s24                                   // 0000000021D8: D2850003 00003103
	v_sub_u32_e32 v9, vcc, s8, v3                              // 0000000021E0: 34120608
	v_cmp_ge_u32_e64 s[2:3], s8, v3                            // 0000000021E4: D0CE0002 00020608
	v_cmp_le_u32_e64 s[0:1], s24, v9                           // 0000000021EC: D0CB0000 00021218
	v_add_u32_e32 v10, vcc, s24, v9                            // 0000000021F4: 32141218
	v_subrev_u32_e32 v3, vcc, s24, v9                          // 0000000021F8: 36061218
	s_and_b64 vcc, s[0:1], s[2:3]                              // 0000000021FC: 86EA0200
	v_cndmask_b32_e32 v3, v9, v3, vcc                          // 000000002200: 00060709
	s_add_i32 s0, s22, -1                                      // 000000002204: 8100C116
	v_cndmask_b32_e64 v3, v10, v3, s[2:3]                      // 000000002208: D1000003 000A070A
	v_min_u32_e32 v9, s0, v1                                   // 000000002210: 1C120200
	s_add_i32 s0, s23, -1                                      // 000000002214: 8100C117
	v_min_u32_e32 v12, s0, v8                                  // 000000002218: 1C181000
	v_or_b32_e32 v8, 16, v8                                    // 00000000221C: 28101090
	v_mul_lo_u32 v10, v3, s19                                  // 000000002220: D285000A 00002703
	v_min_u32_e32 v13, s0, v8                                  // 000000002228: 1C1A1000
	v_mul_lo_u32 v8, v5, s18                                   // 00000000222C: D2850008 00002505
	v_mul_lo_u32 v14, v3, s21                                  // 000000002234: D285000E 00002B03
	v_mul_lo_u32 v12, v12, s20                                 // 00000000223C: D285000C 0000290C
	v_mul_lo_u32 v15, v13, s20                                 // 000000002244: D285000F 0000290D
	v_add_u32_e32 v9, vcc, v10, v9                             // 00000000224C: 3212130A
	v_add_u32_e32 v8, vcc, v9, v8                              // 000000002250: 32101109
	v_mov_b32_e32 v9, 0                                        // 000000002254: 7E120280
	s_lshl_b32 s0, s18, 3                                      // 000000002258: 8E008312
	v_add_u32_e32 v10, vcc, s0, v8                             // 00000000225C: 32141000
	s_and_b32 s0, s6, s26                                      // 000000002260: 86001A06
	v_add_u32_e32 v14, vcc, v14, v7                            // 000000002264: 321C0F0E
	v_lshlrev_b64 v[16:17], 2, v[8:9]                          // 000000002268: D28F0010 00021082
	v_lshlrev_b32_e32 v8, 5, v7                                // 000000002270: 24100E85
	v_add_u32_e32 v12, vcc, v14, v12                           // 000000002274: 3218190E
	v_mov_b32_e32 v13, v9                                      // 000000002278: 7E1A0309
	v_add_u32_e32 v14, vcc, v14, v15                           // 00000000227C: 321C1F0E
	s_mov_b32 s8, s18                                          // 000000002280: BE880012
	v_mov_b32_e32 v15, v9                                      // 000000002284: 7E1E0309
	v_or_b32_e32 v8, v8, v20                                   // 000000002288: 28102908
	s_lshl_b32 s10, s0, 2                                      // 00000000228C: 8E0A8200
	v_lshlrev_b64 v[18:19], 2, v[12:13]                        // 000000002290: D28F0012 00021882
	v_lshlrev_b64 v[13:14], 2, v[14:15]                        // 000000002298: D28F000D 00021C82
	s_lshl_b64 s[2:3], s[8:9], 4                               // 0000000022A0: 8E828408
	v_mov_b32_e32 v15, s10                                     // 0000000022A4: 7E1E020A
	v_lshlrev_b32_e32 v12, 2, v8                               // 0000000022A8: 24181082
	v_alignbit_b32 v8, 0, s18, 28                              // 0000000022AC: D1CE0008 02702480
	v_mul_lo_u32 v8, v8, s10                                   // 0000000022B4: D2850008 00001508
	v_mul_hi_u32 v15, s2, v15                                  // 0000000022BC: D286000F 00021E02
	s_mul_i32 s0, s2, s10                                      // 0000000022C4: 92000A02
	v_mov_b32_e32 v20, s0                                      // 0000000022C8: 7E280200
	v_mov_b32_e32 v11, v9                                      // 0000000022CC: 7E160309
	v_add_u32_e32 v21, vcc, v15, v8                            // 0000000022D0: 322A110F
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 0000000022D4: D28F0014 00022882
	v_mov_b32_e32 v8, s31                                      // 0000000022DC: 7E10021F
	v_add_u32_e32 v15, vcc, s30, v20                           // 0000000022E0: 321E281E
	v_addc_u32_e32 v8, vcc, v21, v8, vcc                       // 0000000022E4: 38101115
	v_add_u32_e32 v33, vcc, v15, v16                           // 0000000022E8: 3242210F
	v_lshlrev_b64 v[10:11], 2, v[10:11]                        // 0000000022EC: D28F000A 00021482
	v_addc_u32_e32 v34, vcc, v8, v17, vcc                      // 0000000022F4: 38442308
	s_lshr_b32 s6, s25, 4                                      // 0000000022F8: 8F068419
	s_lshl_b64 s[0:1], s[10:11], 6                             // 0000000022FC: 8E80860A
	v_add_u32_e32 v31, vcc, v15, v10                           // 000000002300: 323E150F
	s_add_u32 s0, s0, s28                                      // 000000002304: 80001C00
	v_addc_u32_e32 v32, vcc, v8, v11, vcc                      // 000000002308: 38401708
	s_addc_u32 s1, s1, s29                                     // 00000000230C: 82011D01
	v_mov_b32_e32 v8, s1                                       // 000000002310: 7E100201
	v_add_u32_e32 v27, vcc, s0, v18                            // 000000002314: 32362400
	v_addc_u32_e32 v28, vcc, v8, v19, vcc                      // 000000002318: 38382708
	v_add_u32_e32 v29, vcc, s0, v13                            // 00000000231C: 323A1A00
	v_addc_u32_e32 v30, vcc, v8, v14, vcc                      // 000000002320: 383C1D08
	v_lshlrev_b32_e32 v8, 2, v22                               // 000000002324: 24102C82
	v_lshlrev_b32_e32 v10, 2, v23                              // 000000002328: 24142E82
	s_cmp_eq_u32 s6, 0                                         // 00000000232C: BF068006
	s_cbranch_scc1 BB0_3                                       // 000000002330: BF8500E8
	v_mov_b32_e32 v9, s6                                       // 000000002334: 7E120206
	v_mul_hi_u32 v9, s2, v9                                    // 000000002338: D2860009 00021202
	s_mul_i32 s0, s3, s6                                       // 000000002340: 92000603
	s_mul_i32 s1, s2, s6                                       // 000000002344: 92010602
	v_mov_b32_e32 v11, 0                                       // 000000002348: 7E160280
	v_add_u32_e32 v9, vcc, s0, v9                              // 00000000234C: 32121200
	s_and_b32 s0, s25, -16                                     // 000000002350: 8600D019
	s_sub_u32 s0, 0, s0                                        // 000000002354: 80800080
	v_sub_u32_e64 v35, vcc, 0, s1                              // 000000002358: D11A6A23 00000280
	s_subb_u32 s1, 0, 0                                        // 000000002360: 82818080
	v_subb_u32_e32 v36, vcc, 0, v9, vcc                        // 000000002364: 3A481280
	s_lshl_b64 s[18:19], s[0:1], 2                             // 000000002368: 8E928200
	s_add_i32 s8, s10, 1                                       // 00000000236C: 8108810A
	s_lshl_b64 s[20:21], s[2:3], 2                             // 000000002370: 8E948202
	s_movk_i32 s11, 0x800                                      // 000000002374: B00B0800
	s_movk_i32 s24, 0x840                                      // 000000002378: B0180840
	s_movk_i32 s26, 0xa00                                      // 00000000237C: B01A0A00
	s_movk_i32 s27, 0xa40                                      // 000000002380: B01B0A40
	s_movk_i32 s28, 0x400                                      // 000000002384: B01C0400
	s_movk_i32 s29, 0x440                                      // 000000002388: B01D0440
	s_movk_i32 s30, 0xc00                                      // 00000000238C: B01E0C00
	s_movk_i32 s31, 0xc40                                      // 000000002390: B01F0C40
	s_movk_i32 s33, 0x600                                      // 000000002394: B0210600
	s_movk_i32 s34, 0x640                                      // 000000002398: B0220640
	s_movk_i32 s35, 0xe00                                      // 00000000239C: B0230E00
	s_movk_i32 s36, 0xe40                                      // 0000000023A0: B0240E40
	s_mov_b32 s0, s6                                           // 0000000023A4: BE800006
	v_mov_b32_e32 v13, v11                                     // 0000000023A8: 7E1A030B
	v_mov_b32_e32 v14, v11                                     // 0000000023AC: 7E1C030B
	v_mov_b32_e32 v15, v11                                     // 0000000023B0: 7E1E030B
	v_mov_b32_e32 v16, v11                                     // 0000000023B4: 7E20030B
	v_mov_b32_e32 v17, v11                                     // 0000000023B8: 7E22030B
	v_mov_b32_e32 v18, v11                                     // 0000000023BC: 7E24030B
	v_mov_b32_e32 v19, v11                                     // 0000000023C0: 7E26030B
	v_mov_b32_e32 v20, v11                                     // 0000000023C4: 7E28030B
	v_mov_b32_e32 v21, v11                                     // 0000000023C8: 7E2A030B
	v_mov_b32_e32 v22, v11                                     // 0000000023CC: 7E2C030B
	v_mov_b32_e32 v23, v11                                     // 0000000023D0: 7E2E030B
	v_mov_b32_e32 v24, v11                                     // 0000000023D4: 7E30030B
	v_mov_b32_e32 v25, v11                                     // 0000000023D8: 7E32030B
	v_mov_b32_e32 v26, v11                                     // 0000000023DC: 7E34030B
	v_mov_b32_e32 v9, v11                                      // 0000000023E0: 7E12030B

00000000000023e4 BB0_2:
	flat_load_dword v37, v[33:34]                              // 0000000023E4: DC500000 25000021
	flat_load_dword v38, v[31:32]                              // 0000000023EC: DC500000 2600001F
	flat_load_dword v39, v[27:28]                              // 0000000023F4: DC500000 2700001B
	flat_load_dword v40, v[29:30]                              // 0000000023FC: DC500000 2800001D
	v_add_u32_e32 v41, vcc, s20, v33                           // 000000002404: 32524214
	v_mov_b32_e32 v33, s21                                     // 000000002408: 7E420215
	v_addc_u32_e32 v42, vcc, v34, v33, vcc                     // 00000000240C: 38544322
	v_mov_b32_e32 v33, s0                                      // 000000002410: 7E420200
	v_cmp_eq_u32_e32 vcc, s8, v33                              // 000000002414: 7D944208
	v_lshlrev_b64 v[33:34], 2, v[35:36]                        // 000000002418: D28F0021 00024682
	s_add_i32 s37, s0, -1                                      // 000000002420: 8125C100
	v_add_u32_e64 v43, s[0:1], v41, v33                        // 000000002424: D119002B 00024329
	v_addc_u32_e64 v44, s[0:1], v42, v34, s[0:1]               // 00000000242C: D11C002C 0002452A
	v_add_u32_e64 v31, s[0:1], s20, v31                        // 000000002434: D119001F 00023E14
	v_mov_b32_e32 v45, s21                                     // 00000000243C: 7E5A0215
	v_addc_u32_e64 v32, s[0:1], v32, v45, s[0:1]               // 000000002440: D11C0020 00025B20
	v_add_u32_e64 v45, s[0:1], v31, v33                        // 000000002448: D119002D 0002431F
	v_addc_u32_e64 v46, s[0:1], v32, v34, s[0:1]               // 000000002450: D11C002E 00024520
	v_add_u32_e64 v27, s[0:1], 64, v27                         // 000000002458: D119001B 000236C0
	v_addc_u32_e64 v28, s[0:1], 0, v28, s[0:1]                 // 000000002460: D11C001C 00023880
	v_add_u32_e64 v33, s[0:1], s18, v27                        // 000000002468: D1190021 00023612
	v_mov_b32_e32 v34, s19                                     // 000000002470: 7E440213
	v_addc_u32_e64 v34, s[0:1], v28, v34, s[0:1]               // 000000002474: D11C0022 0002451C
	v_add_u32_e64 v29, s[0:1], 64, v29                         // 00000000247C: D119001D 00023AC0
	v_addc_u32_e64 v30, s[0:1], 0, v30, s[0:1]                 // 000000002484: D11C001E 00023C80
	v_add_u32_e64 v47, s[0:1], s18, v29                        // 00000000248C: D119002F 00023A12
	v_mov_b32_e32 v48, s19                                     // 000000002494: 7E600213
	v_addc_u32_e64 v48, s[0:1], v30, v48, s[0:1]               // 000000002498: D11C0030 0002611E
	v_cndmask_b32_e32 v28, v28, v34, vcc                       // 0000000024A0: 0038451C
	v_cndmask_b32_e32 v27, v27, v33, vcc                       // 0000000024A4: 0036431B
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000024A8: BF8C0070
	s_barrier                                                  // 0000000024AC: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000024B0: BF8C007F
	v_cndmask_b32_e32 v34, v42, v44, vcc                       // 0000000024B4: 0044592A
	v_cndmask_b32_e32 v33, v41, v43, vcc                       // 0000000024B8: 00425729
	v_cndmask_b32_e32 v32, v32, v46, vcc                       // 0000000024BC: 00405D20
	v_cndmask_b32_e32 v31, v31, v45, vcc                       // 0000000024C0: 003E5B1F
	v_cndmask_b32_e32 v30, v30, v48, vcc                       // 0000000024C4: 003C611E
	v_cndmask_b32_e32 v29, v29, v47, vcc                       // 0000000024C8: 003A5F1D
	v_add_u32_e32 v41, vcc, s11, v10                           // 0000000024CC: 3252140B
	v_add_u32_e32 v43, vcc, s24, v10                           // 0000000024D0: 32561418
	s_cmp_lg_u32 s37, 0                                        // 0000000024D4: BF078025
	s_mov_b32 s0, s37                                          // 0000000024D8: BE800025
	ds_write2st64_b32 v0, v37, v38 offset1:4                   // 0000000024DC: D81E0400 00262500
	v_add_u32_e32 v37, vcc, s11, v12                           // 0000000024E4: 324A180B
	ds_write2_b32 v37, v39, v40 offset1:16                     // 0000000024E8: D81C1000 00282725
	s_waitcnt lgkmcnt(0)                                       // 0000000024F0: BF8C007F
	s_barrier                                                  // 0000000024F4: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000024F8: BF8C007F
	ds_read2_b32 v[37:38], v8 offset1:8                        // 0000000024FC: D86E0800 25000008
	ds_read2_b32 v[39:40], v8 offset0:16 offset1:24            // 000000002504: D86E1810 27000008
	ds_read2_b32 v[41:42], v41 offset1:8                       // 00000000250C: D86E0800 29000029
	ds_read2_b32 v[43:44], v43 offset1:8                       // 000000002514: D86E0800 2B00002B
	s_waitcnt lgkmcnt(1)                                       // 00000000251C: BF8C017F
	v_mac_f32_e32 v9, v37, v41                                 // 000000002520: 2C125325
	v_mac_f32_e32 v26, v38, v41                                // 000000002524: 2C345326
	v_mac_f32_e32 v25, v39, v41                                // 000000002528: 2C325327
	v_mac_f32_e32 v24, v40, v41                                // 00000000252C: 2C305328
	s_waitcnt lgkmcnt(0)                                       // 000000002530: BF8C007F
	v_mac_f32_e32 v19, v37, v43                                // 000000002534: 2C265725
	v_mac_f32_e32 v18, v38, v43                                // 000000002538: 2C245726
	v_mac_f32_e32 v17, v39, v43                                // 00000000253C: 2C225727
	v_mac_f32_e32 v16, v40, v43                                // 000000002540: 2C205728
	v_add_u32_e32 v41, vcc, s26, v10                           // 000000002544: 3252141A
	v_add_u32_e32 v43, vcc, s27, v10                           // 000000002548: 3256141B
	v_mac_f32_e32 v23, v37, v42                                // 00000000254C: 2C2E5525
	v_mac_f32_e32 v22, v38, v42                                // 000000002550: 2C2C5526
	v_mac_f32_e32 v21, v39, v42                                // 000000002554: 2C2A5527
	v_mac_f32_e32 v20, v40, v42                                // 000000002558: 2C285528
	v_mac_f32_e32 v15, v37, v44                                // 00000000255C: 2C1E5925
	v_mac_f32_e32 v14, v38, v44                                // 000000002560: 2C1C5926
	v_mac_f32_e32 v13, v39, v44                                // 000000002564: 2C1A5927
	v_mac_f32_e32 v11, v40, v44                                // 000000002568: 2C165928
	ds_read2_b32 v[37:38], v8 offset0:128 offset1:136          // 00000000256C: D86E8880 25000008
	ds_read2_b32 v[39:40], v8 offset0:144 offset1:152          // 000000002574: D86E9890 27000008
	ds_read2_b32 v[41:42], v41 offset1:8                       // 00000000257C: D86E0800 29000029
	ds_read2_b32 v[43:44], v43 offset1:8                       // 000000002584: D86E0800 2B00002B
	s_waitcnt lgkmcnt(1)                                       // 00000000258C: BF8C017F
	v_mac_f32_e32 v9, v37, v41                                 // 000000002590: 2C125325
	v_mac_f32_e32 v26, v38, v41                                // 000000002594: 2C345326
	v_mac_f32_e32 v25, v39, v41                                // 000000002598: 2C325327
	v_mac_f32_e32 v24, v40, v41                                // 00000000259C: 2C305328
	v_mac_f32_e32 v23, v37, v42                                // 0000000025A0: 2C2E5525
	v_mac_f32_e32 v21, v39, v42                                // 0000000025A4: 2C2A5527
	s_waitcnt lgkmcnt(0)                                       // 0000000025A8: BF8C007F
	v_mac_f32_e32 v19, v37, v43                                // 0000000025AC: 2C265725
	v_mac_f32_e32 v15, v37, v44                                // 0000000025B0: 2C1E5925
	v_mac_f32_e32 v18, v38, v43                                // 0000000025B4: 2C245726
	v_mac_f32_e32 v17, v39, v43                                // 0000000025B8: 2C225727
	v_mac_f32_e32 v16, v40, v43                                // 0000000025BC: 2C205728
	v_mac_f32_e32 v13, v39, v44                                // 0000000025C0: 2C1A5927
	v_add_u32_e32 v37, vcc, s28, v8                            // 0000000025C4: 324A101C
	v_add_u32_e32 v39, vcc, s29, v8                            // 0000000025C8: 324E101D
	v_add_u32_e32 v41, vcc, s30, v10                           // 0000000025CC: 3252141E
	v_add_u32_e32 v43, vcc, s31, v10                           // 0000000025D0: 3256141F
	v_mac_f32_e32 v22, v38, v42                                // 0000000025D4: 2C2C5526
	v_mac_f32_e32 v20, v40, v42                                // 0000000025D8: 2C285528
	v_mac_f32_e32 v14, v38, v44                                // 0000000025DC: 2C1C5926
	v_mac_f32_e32 v11, v40, v44                                // 0000000025E0: 2C165928
	ds_read2_b32 v[37:38], v37 offset1:8                       // 0000000025E4: D86E0800 25000025
	ds_read2_b32 v[41:42], v41 offset1:8                       // 0000000025EC: D86E0800 29000029
	ds_read2_b32 v[39:40], v39 offset1:8                       // 0000000025F4: D86E0800 27000027
	ds_read2_b32 v[43:44], v43 offset1:8                       // 0000000025FC: D86E0800 2B00002B
	s_waitcnt lgkmcnt(2)                                       // 000000002604: BF8C027F
	v_mac_f32_e32 v9, v37, v41                                 // 000000002608: 2C125325
	v_mac_f32_e32 v26, v38, v41                                // 00000000260C: 2C345326
	s_waitcnt lgkmcnt(1)                                       // 000000002610: BF8C017F
	v_mac_f32_e32 v25, v39, v41                                // 000000002614: 2C325327
	v_mac_f32_e32 v24, v40, v41                                // 000000002618: 2C305328
	v_mac_f32_e32 v23, v37, v42                                // 00000000261C: 2C2E5525
	v_mac_f32_e32 v21, v39, v42                                // 000000002620: 2C2A5527
	s_waitcnt lgkmcnt(0)                                       // 000000002624: BF8C007F
	v_mac_f32_e32 v19, v37, v43                                // 000000002628: 2C265725
	v_mac_f32_e32 v15, v37, v44                                // 00000000262C: 2C1E5925
	v_mac_f32_e32 v18, v38, v43                                // 000000002630: 2C245726
	v_mac_f32_e32 v17, v39, v43                                // 000000002634: 2C225727
	v_mac_f32_e32 v16, v40, v43                                // 000000002638: 2C205728
	v_mac_f32_e32 v13, v39, v44                                // 00000000263C: 2C1A5927
	v_add_u32_e32 v37, vcc, s33, v8                            // 000000002640: 324A1021
	v_add_u32_e32 v39, vcc, s34, v8                            // 000000002644: 324E1022
	v_add_u32_e32 v41, vcc, s35, v10                           // 000000002648: 32521423
	v_add_u32_e32 v43, vcc, s36, v10                           // 00000000264C: 32561424
	v_mac_f32_e32 v22, v38, v42                                // 000000002650: 2C2C5526
	v_mac_f32_e32 v20, v40, v42                                // 000000002654: 2C285528
	v_mac_f32_e32 v14, v38, v44                                // 000000002658: 2C1C5926
	v_mac_f32_e32 v11, v40, v44                                // 00000000265C: 2C165928
	ds_read2_b32 v[37:38], v37 offset1:8                       // 000000002660: D86E0800 25000025
	ds_read2_b32 v[41:42], v41 offset1:8                       // 000000002668: D86E0800 29000029
	ds_read2_b32 v[39:40], v39 offset1:8                       // 000000002670: D86E0800 27000027
	ds_read2_b32 v[43:44], v43 offset1:8                       // 000000002678: D86E0800 2B00002B
	s_waitcnt lgkmcnt(2)                                       // 000000002680: BF8C027F
	v_mac_f32_e32 v9, v37, v41                                 // 000000002684: 2C125325
	v_mac_f32_e32 v26, v38, v41                                // 000000002688: 2C345326
	s_waitcnt lgkmcnt(1)                                       // 00000000268C: BF8C017F
	v_mac_f32_e32 v25, v39, v41                                // 000000002690: 2C325327
	v_mac_f32_e32 v24, v40, v41                                // 000000002694: 2C305328
	v_mac_f32_e32 v23, v37, v42                                // 000000002698: 2C2E5525
	v_mac_f32_e32 v22, v38, v42                                // 00000000269C: 2C2C5526
	v_mac_f32_e32 v21, v39, v42                                // 0000000026A0: 2C2A5527
	v_mac_f32_e32 v20, v40, v42                                // 0000000026A4: 2C285528
	s_waitcnt lgkmcnt(0)                                       // 0000000026A8: BF8C007F
	v_mac_f32_e32 v19, v37, v43                                // 0000000026AC: 2C265725
	v_mac_f32_e32 v18, v38, v43                                // 0000000026B0: 2C245726
	v_mac_f32_e32 v17, v39, v43                                // 0000000026B4: 2C225727
	v_mac_f32_e32 v16, v40, v43                                // 0000000026B8: 2C205728
	v_mac_f32_e32 v15, v37, v44                                // 0000000026BC: 2C1E5925
	v_mac_f32_e32 v14, v38, v44                                // 0000000026C0: 2C1C5926
	v_mac_f32_e32 v13, v39, v44                                // 0000000026C4: 2C1A5927
	v_mac_f32_e32 v11, v40, v44                                // 0000000026C8: 2C165928
	s_cbranch_scc1 BB0_2                                       // 0000000026CC: BF85FF45
	s_branch BB0_4                                             // 0000000026D0: BF82000F

00000000000026d4 BB0_3:
	v_mov_b32_e32 v26, v9                                      // 0000000026D4: 7E340309
	v_mov_b32_e32 v25, v9                                      // 0000000026D8: 7E320309
	v_mov_b32_e32 v24, v9                                      // 0000000026DC: 7E300309
	v_mov_b32_e32 v23, v9                                      // 0000000026E0: 7E2E0309
	v_mov_b32_e32 v22, v9                                      // 0000000026E4: 7E2C0309
	v_mov_b32_e32 v21, v9                                      // 0000000026E8: 7E2A0309
	v_mov_b32_e32 v20, v9                                      // 0000000026EC: 7E280309
	v_mov_b32_e32 v19, v9                                      // 0000000026F0: 7E260309
	v_mov_b32_e32 v18, v9                                      // 0000000026F4: 7E240309
	v_mov_b32_e32 v17, v9                                      // 0000000026F8: 7E220309
	v_mov_b32_e32 v16, v9                                      // 0000000026FC: 7E200309
	v_mov_b32_e32 v15, v9                                      // 000000002700: 7E1E0309
	v_mov_b32_e32 v14, v9                                      // 000000002704: 7E1C0309
	v_mov_b32_e32 v13, v9                                      // 000000002708: 7E1A0309
	v_mov_b32_e32 v11, v9                                      // 00000000270C: 7E160309

0000000000002710 BB0_4:
	s_sub_i32 s8, s6, s10                                      // 000000002710: 81880A06
	v_mov_b32_e32 v35, s8                                      // 000000002714: 7E460208
	v_mul_hi_u32 v35, s2, v35                                  // 000000002718: D2860023 00024602
	s_mul_i32 s1, s3, s8                                       // 000000002720: 92010803
	s_and_b32 s0, s25, 15                                      // 000000002724: 86008F19
	v_add_u32_e32 v37, vcc, s1, v35                            // 000000002728: 324A4601
	s_mul_i32 s1, s2, s8                                       // 00000000272C: 92010802
	v_mov_b32_e32 v36, s1                                      // 000000002730: 7E480201
	v_cmp_gt_u32_e32 vcc, s0, v5                               // 000000002734: 7D980A00
	v_mov_b32_e32 v35, 0                                       // 000000002738: 7E460280
	s_and_saveexec_b64 s[2:3], vcc                             // 00000000273C: BE82206A
	s_cbranch_execz BB0_6                                      // 000000002740: BF880006

0000000000002744 BB0_5:
	v_lshlrev_b64 v[38:39], 2, v[36:37]                        // 000000002744: D28F0026 00024882
	v_add_u32_e32 v33, vcc, v33, v38                           // 00000000274C: 32424D21
	v_addc_u32_e32 v34, vcc, v34, v39, vcc                     // 000000002750: 38444F22
	flat_load_dword v35, v[33:34]                              // 000000002754: DC500000 23000021

000000000000275c BB0_6:
	s_or_b64 exec, exec, s[2:3]                                // 00000000275C: 87FE027E
	v_or_b32_e32 v33, 8, v5                                    // 000000002760: 28420A88
	v_cmp_gt_u32_e32 vcc, s0, v33                              // 000000002764: 7D984200
	v_mov_b32_e32 v33, 0                                       // 000000002768: 7E420280
	s_and_saveexec_b64 s[2:3], vcc                             // 00000000276C: BE82206A
	s_cbranch_execz BB0_8                                      // 000000002770: BF880006

0000000000002774 BB0_7:
	v_lshlrev_b64 v[33:34], 2, v[36:37]                        // 000000002774: D28F0021 00024882
	v_add_u32_e32 v31, vcc, v31, v33                           // 00000000277C: 323E431F
	v_addc_u32_e32 v32, vcc, v32, v34, vcc                     // 000000002780: 38404520
	flat_load_dword v33, v[31:32]                              // 000000002784: DC500000 2100001F

000000000000278c BB0_8:
	s_or_b64 exec, exec, s[2:3]                                // 00000000278C: 87FE027E
	v_cmp_gt_u32_e32 vcc, s0, v7                               // 000000002790: 7D980E00
	v_mov_b32_e32 v7, 0                                        // 000000002794: 7E0E0280
	v_mov_b32_e32 v31, v7                                      // 000000002798: 7E3E0307
	s_and_saveexec_b64 s[2:3], vcc                             // 00000000279C: BE82206A
	s_cbranch_execz BB0_10                                     // 0000000027A0: BF88000A

00000000000027a4 BB0_9:
	s_lshl_b64 s[8:9], s[8:9], 6                               // 0000000027A4: 8E888608
	v_mov_b32_e32 v7, s9                                       // 0000000027A8: 7E0E0209
	v_add_u32_e32 v27, vcc, s8, v27                            // 0000000027AC: 32363608
	v_addc_u32_e32 v28, vcc, v28, v7, vcc                      // 0000000027B0: 38380F1C
	v_add_u32_e32 v29, vcc, s8, v29                            // 0000000027B4: 323A3A08
	v_addc_u32_e32 v30, vcc, v30, v7, vcc                      // 0000000027B8: 383C0F1E
	flat_load_dword v7, v[27:28]                               // 0000000027BC: DC500000 0700001B
	flat_load_dword v31, v[29:30]                              // 0000000027C4: DC500000 1F00001D

00000000000027cc BB0_10:
	s_or_b64 exec, exec, s[2:3]                                // 0000000027CC: 87FE027E
	s_movk_i32 s6, 0x800                                       // 0000000027D0: B0060800
	v_add_u32_e32 v12, vcc, s6, v12                            // 0000000027D4: 32181806
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000027D8: BF8C0070
	s_barrier                                                  // 0000000027DC: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000027E0: BF8C007F
	ds_write2st64_b32 v0, v35, v33 offset1:4                   // 0000000027E4: D81E0400 00212300
	ds_write2_b32 v12, v7, v31 offset1:16                      // 0000000027EC: D81C1000 001F070C
	s_waitcnt lgkmcnt(0)                                       // 0000000027F4: BF8C007F
	s_barrier                                                  // 0000000027F8: BF8A0000
	s_load_dwordx2 s[2:3], s[4:5], 0x0                         // 0000000027FC: C0060082 00000000
	s_load_dwordx2 s[4:5], s[4:5], 0x8                         // 000000002804: C0060102 00000008
	s_add_i32 s0, s0, 3                                        // 00000000280C: 81008300
	s_lshr_b32 s0, s0, 2                                       // 000000002810: 8F008200
	s_cmp_eq_u32 s0, 0                                         // 000000002814: BF068000
	s_waitcnt lgkmcnt(0)                                       // 000000002818: BF8C007F
	s_cbranch_scc1 BB0_13                                      // 00000000281C: BF850027
	v_mov_b32_e32 v7, s0                                       // 000000002820: 7E0E0200
	s_movk_i32 s8, 0x200                                       // 000000002824: B0080200
	s_movk_i32 s9, 0x840                                       // 000000002828: B0090840

000000000000282c BB0_12:
	v_add_u32_e32 v12, vcc, s6, v10                            // 00000000282C: 32181406
	v_add_u32_e32 v33, vcc, s9, v10                            // 000000002830: 32421409
	ds_read2_b32 v[27:28], v8 offset1:8                        // 000000002834: D86E0800 1B000008
	ds_read2_b32 v[29:30], v8 offset0:16 offset1:24            // 00000000283C: D86E1810 1D000008
	ds_read2_b32 v[31:32], v12 offset1:8                       // 000000002844: D86E0800 1F00000C
	ds_read2_b32 v[33:34], v33 offset1:8                       // 00000000284C: D86E0800 21000021
	v_add_u32_e32 v7, vcc, -1, v7                              // 000000002854: 320E0EC1
	v_cmp_ne_u32_e32 vcc, 0, v7                                // 000000002858: 7D9A0E80
	s_and_b64 vcc, exec, vcc                                   // 00000000285C: 86EA6A7E
	v_add_u32_e64 v8, s[0:1], s8, v8                           // 000000002860: D1190008 00021008
	v_add_u32_e64 v10, s[0:1], s8, v10                         // 000000002868: D119000A 00021408
	s_waitcnt lgkmcnt(1)                                       // 000000002870: BF8C017F
	v_mac_f32_e32 v9, v27, v31                                 // 000000002874: 2C123F1B
	v_mac_f32_e32 v26, v28, v31                                // 000000002878: 2C343F1C
	v_mac_f32_e32 v25, v29, v31                                // 00000000287C: 2C323F1D
	v_mac_f32_e32 v24, v30, v31                                // 000000002880: 2C303F1E
	v_mac_f32_e32 v23, v27, v32                                // 000000002884: 2C2E411B
	v_mac_f32_e32 v22, v28, v32                                // 000000002888: 2C2C411C
	v_mac_f32_e32 v21, v29, v32                                // 00000000288C: 2C2A411D
	v_mac_f32_e32 v20, v30, v32                                // 000000002890: 2C28411E
	s_waitcnt lgkmcnt(0)                                       // 000000002894: BF8C007F
	v_mac_f32_e32 v19, v27, v33                                // 000000002898: 2C26431B
	v_mac_f32_e32 v18, v28, v33                                // 00000000289C: 2C24431C
	v_mac_f32_e32 v17, v29, v33                                // 0000000028A0: 2C22431D
	v_mac_f32_e32 v16, v30, v33                                // 0000000028A4: 2C20431E
	v_mac_f32_e32 v15, v27, v34                                // 0000000028A8: 2C1E451B
	v_mac_f32_e32 v14, v28, v34                                // 0000000028AC: 2C1C451C
	v_mac_f32_e32 v13, v29, v34                                // 0000000028B0: 2C1A451D
	v_mac_f32_e32 v11, v30, v34                                // 0000000028B4: 2C16451E
	s_cbranch_vccnz BB0_12                                     // 0000000028B8: BF87FFDC

00000000000028bc BB0_13:
	v_lshlrev_b32_e32 v2, 10, v2                               // 0000000028BC: 2404048A
	v_lshlrev_b32_e32 v6, 5, v6                                // 0000000028C0: 240C0C85
	v_or_b32_e32 v2, v2, v4                                    // 0000000028C4: 28040902
	v_or_b32_e32 v2, v2, v6                                    // 0000000028C8: 28040D02
	v_lshlrev_b32_e32 v2, 2, v2                                // 0000000028CC: 24040482
	s_movk_i32 s0, 0x400                                       // 0000000028D0: B0000400
	v_add_u32_e32 v4, vcc, s0, v2                              // 0000000028D4: 32080400
	s_movk_i32 s0, 0x440                                       // 0000000028D8: B0000440
	s_waitcnt lgkmcnt(0)                                       // 0000000028DC: BF8C007F
	s_barrier                                                  // 0000000028E0: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 0000000028E4: BF8C007F
	ds_write2_b32 v2, v9, v26 offset1:8                        // 0000000028E8: D81C0800 001A0902
	ds_write2_b32 v2, v25, v24 offset0:16 offset1:24           // 0000000028F0: D81C1810 00181902
	ds_write2_b32 v4, v23, v22 offset1:8                       // 0000000028F8: D81C0800 00161704
	v_add_u32_e32 v4, vcc, s0, v2                              // 000000002900: 32080400
	ds_write2_b32 v4, v21, v20 offset1:8                       // 000000002904: D81C0800 00141504
	v_add_u32_e32 v4, vcc, s6, v2                              // 00000000290C: 32080406
	s_movk_i32 s0, 0x840                                       // 000000002910: B0000840
	ds_write2_b32 v4, v19, v18 offset1:8                       // 000000002914: D81C0800 00121304
	v_add_u32_e32 v4, vcc, s0, v2                              // 00000000291C: 32080400
	s_movk_i32 s0, 0xc00                                       // 000000002920: B0000C00
	ds_write2_b32 v4, v17, v16 offset1:8                       // 000000002924: D81C0800 00101104
	v_add_u32_e32 v4, vcc, s0, v2                              // 00000000292C: 32080400
	s_movk_i32 s0, 0xc40                                       // 000000002930: B0000C40
	v_add_u32_e32 v2, vcc, s0, v2                              // 000000002934: 32040400
	ds_write2_b32 v4, v15, v14 offset1:8                       // 000000002938: D81C0800 000E0F04
	ds_write2_b32 v2, v13, v11 offset1:8                       // 000000002940: D81C0800 000B0D02
	s_waitcnt lgkmcnt(0)                                       // 000000002948: BF8C007F
	s_barrier                                                  // 00000000294C: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002950: BF8C007F
	ds_read2st64_b32 v[10:11], v0 offset0:4 offset1:8          // 000000002954: D8700804 0A000000
	ds_read2st64_b32 v[12:13], v0 offset0:12 offset1:20        // 00000000295C: D870140C 0C000000
	ds_read2st64_b32 v[16:17], v0 offset0:24 offset1:28        // 000000002964: D8701C18 10000000
	ds_read2st64_b32 v[14:15], v0 offset0:36 offset1:40        // 00000000296C: D8702824 0E000000
	ds_read2st64_b32 v[8:9], v0 offset0:44 offset1:52          // 000000002974: D870342C 08000000
	ds_read2st64_b32 v[6:7], v0 offset0:56 offset1:60          // 00000000297C: D8703C38 06000000
	v_or_b32_e32 v4, s7, v5                                    // 000000002984: 28080A07
	v_cmp_gt_u32_e64 s[0:1], s22, v1                           // 000000002988: D0CC0000 00020216
	v_cmp_gt_u32_e32 vcc, s23, v4                              // 000000002990: 7D980817
	s_and_b64 s[8:9], s[0:1], vcc                              // 000000002994: 86886A00
	s_and_saveexec_b64 s[6:7], s[8:9]                          // 000000002998: BE862008
	s_cbranch_execz BB0_17                                     // 00000000299C: BF880027

00000000000029a0 BB0_14:
	ds_read2st64_b32 v[18:19], v0 offset1:16                   // 0000000029A0: D8701000 12000000
	ds_read2st64_b32 v[20:21], v0 offset0:32 offset1:48        // 0000000029A8: D8703020 14000000
	v_cmp_neq_f32_e64 s[8:9], s13, 0                           // 0000000029B0: D04D0008 0001000D
	s_and_b64 vcc, exec, s[8:9]                                // 0000000029B8: 86EA087E
	v_mov_b32_e32 v2, 0                                        // 0000000029BC: 7E040280
	s_waitcnt lgkmcnt(1)                                       // 0000000029C0: BF8C017F
	v_add_f32_e32 v0, v18, v19                                 // 0000000029C4: 02002712
	s_waitcnt lgkmcnt(0)                                       // 0000000029C8: BF8C007F
	v_add_f32_e32 v0, v0, v20                                  // 0000000029CC: 02002900
	v_add_f32_e32 v0, v0, v21                                  // 0000000029D0: 02002B00
	v_mul_f32_e32 v0, s12, v0                                  // 0000000029D4: 0A00000C
	s_cbranch_vccz BB0_16                                      // 0000000029D8: BF86000D
	v_mad_u64_u32 v[18:19], s[8:9], s16, v4, v[1:2]            // 0000000029DC: D1E80812 04060810
	v_mov_b32_e32 v5, s5                                       // 0000000029E4: 7E0A0205
	v_mad_u64_u32 v[18:19], s[8:9], v3, s17, v[18:19]          // 0000000029E8: D1E80812 04482303
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 0000000029F0: D28F0012 00022482
	v_add_u32_e32 v18, vcc, s4, v18                            // 0000000029F8: 32242404
	v_addc_u32_e32 v19, vcc, v5, v19, vcc                      // 0000000029FC: 38262705
	flat_load_dword v5, v[18:19]                               // 000000002A00: DC500000 05000012
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002A08: BF8C0070
	v_mac_f32_e32 v0, s13, v5                                  // 000000002A0C: 2C000A0D

0000000000002a10 BB0_16:
	v_mad_u64_u32 v[18:19], s[8:9], v3, s15, v[1:2]            // 000000002A10: D1E80812 04041F03
	v_mov_b32_e32 v2, s3                                       // 000000002A18: 7E040203
	v_mad_u64_u32 v[18:19], s[8:9], v4, s14, v[18:19]          // 000000002A1C: D1E80812 04481D04
	v_lshlrev_b64 v[18:19], 2, v[18:19]                        // 000000002A24: D28F0012 00022482
	v_add_u32_e32 v18, vcc, s2, v18                            // 000000002A2C: 32242402
	v_addc_u32_e32 v19, vcc, v2, v19, vcc                      // 000000002A30: 38262702
	flat_store_dword v[18:19], v0                              // 000000002A34: DC700000 00000012

0000000000002a3c BB0_17:
	s_or_b64 exec, exec, s[6:7]                                // 000000002A3C: 87FE067E
	s_waitcnt lgkmcnt(4)                                       // 000000002A40: BF8C047F
	v_add_f32_e32 v0, v10, v13                                 // 000000002A44: 02001B0A
	s_waitcnt lgkmcnt(3)                                       // 000000002A48: BF8C037F
	v_add_f32_e32 v5, v12, v17                                 // 000000002A4C: 020A230C
	s_waitcnt lgkmcnt(2)                                       // 000000002A50: BF8C027F
	v_add_f32_e32 v0, v0, v14                                  // 000000002A54: 02001D00
	s_waitcnt lgkmcnt(1)                                       // 000000002A58: BF8C017F
	v_add_f32_e32 v5, v5, v8                                   // 000000002A5C: 020A1105
	v_add_f32_e32 v2, v11, v16                                 // 000000002A60: 0204210B
	v_add_f32_e32 v8, v0, v9                                   // 000000002A64: 02101300
	s_waitcnt lgkmcnt(0)                                       // 000000002A68: BF8C007F
	v_add_f32_e32 v0, v5, v7                                   // 000000002A6C: 02000F05
	v_add_u32_e32 v5, vcc, 8, v4                               // 000000002A70: 320A0888
	v_add_f32_e32 v2, v2, v15                                  // 000000002A74: 02041F02
	v_cmp_gt_u32_e32 vcc, s23, v5                              // 000000002A78: 7D980A17
	v_add_f32_e32 v2, v2, v6                                   // 000000002A7C: 02040D02
	s_and_b64 s[8:9], s[0:1], vcc                              // 000000002A80: 86886A00
	s_and_saveexec_b64 s[6:7], s[8:9]                          // 000000002A84: BE862008
	s_cbranch_execz BB0_21                                     // 000000002A88: BF88001F

0000000000002a8c BB0_18:
	v_cmp_neq_f32_e64 s[8:9], s13, 0                           // 000000002A8C: D04D0008 0001000D
	v_mul_f32_e32 v6, s12, v8                                  // 000000002A94: 0A0C100C
	v_mov_b32_e32 v8, 0                                        // 000000002A98: 7E100280
	v_mov_b32_e32 v7, v1                                       // 000000002A9C: 7E0E0301
	s_and_b64 vcc, exec, s[8:9]                                // 000000002AA0: 86EA087E
	s_cbranch_vccz BB0_20                                      // 000000002AA4: BF86000D
	v_mad_u64_u32 v[9:10], s[8:9], s16, v5, v[7:8]             // 000000002AA8: D1E80809 041E0A10
	v_mov_b32_e32 v11, s5                                      // 000000002AB0: 7E160205
	v_mad_u64_u32 v[9:10], s[8:9], v3, s17, v[9:10]            // 000000002AB4: D1E80809 04242303
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 000000002ABC: D28F0009 00021282
	v_add_u32_e32 v9, vcc, s4, v9                              // 000000002AC4: 32121204
	v_addc_u32_e32 v10, vcc, v11, v10, vcc                     // 000000002AC8: 3814150B
	flat_load_dword v9, v[9:10]                                // 000000002ACC: DC500000 09000009
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002AD4: BF8C0070
	v_mac_f32_e32 v6, s13, v9                                  // 000000002AD8: 2C0C120D

0000000000002adc BB0_20:
	v_mad_u64_u32 v[7:8], s[8:9], v3, s15, v[7:8]              // 000000002ADC: D1E80807 041C1F03
	v_mad_u64_u32 v[7:8], s[8:9], v5, s14, v[7:8]              // 000000002AE4: D1E80807 041C1D05
	v_mov_b32_e32 v5, s3                                       // 000000002AEC: 7E0A0203
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 000000002AF0: D28F0007 00020E82
	v_add_u32_e32 v7, vcc, s2, v7                              // 000000002AF8: 320E0E02
	v_addc_u32_e32 v8, vcc, v5, v8, vcc                        // 000000002AFC: 38101105
	flat_store_dword v[7:8], v6                                // 000000002B00: DC700000 00000607

0000000000002b08 BB0_21:
	s_or_b64 exec, exec, s[6:7]                                // 000000002B08: 87FE067E
	v_add_u32_e32 v5, vcc, 16, v4                              // 000000002B0C: 320A0890
	v_cmp_gt_u32_e32 vcc, s23, v5                              // 000000002B10: 7D980A17
	s_and_b64 s[8:9], s[0:1], vcc                              // 000000002B14: 86886A00
	s_and_saveexec_b64 s[6:7], s[8:9]                          // 000000002B18: BE862008
	s_cbranch_execz BB0_25                                     // 000000002B1C: BF88001F

0000000000002b20 BB0_22:
	v_cmp_neq_f32_e64 s[8:9], s13, 0                           // 000000002B20: D04D0008 0001000D
	v_mul_f32_e32 v2, s12, v2                                  // 000000002B28: 0A04040C
	v_mov_b32_e32 v7, 0                                        // 000000002B2C: 7E0E0280
	v_mov_b32_e32 v6, v1                                       // 000000002B30: 7E0C0301
	s_and_b64 vcc, exec, s[8:9]                                // 000000002B34: 86EA087E
	s_cbranch_vccz BB0_24                                      // 000000002B38: BF86000D
	v_mad_u64_u32 v[8:9], s[8:9], s16, v5, v[6:7]              // 000000002B3C: D1E80808 041A0A10
	v_mov_b32_e32 v10, s5                                      // 000000002B44: 7E140205
	v_mad_u64_u32 v[8:9], s[8:9], v3, s17, v[8:9]              // 000000002B48: D1E80808 04202303
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000002B50: D28F0008 00021082
	v_add_u32_e32 v8, vcc, s4, v8                              // 000000002B58: 32101004
	v_addc_u32_e32 v9, vcc, v10, v9, vcc                       // 000000002B5C: 3812130A
	flat_load_dword v8, v[8:9]                                 // 000000002B60: DC500000 08000008
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002B68: BF8C0070
	v_mac_f32_e32 v2, s13, v8                                  // 000000002B6C: 2C04100D

0000000000002b70 BB0_24:
	v_mad_u64_u32 v[6:7], s[8:9], v3, s15, v[6:7]              // 000000002B70: D1E80806 04181F03
	v_mad_u64_u32 v[5:6], s[8:9], v5, s14, v[6:7]              // 000000002B78: D1E80805 04181D05
	v_mov_b32_e32 v7, s3                                       // 000000002B80: 7E0E0203
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 000000002B84: D28F0005 00020A82
	v_add_u32_e32 v5, vcc, s2, v5                              // 000000002B8C: 320A0A02
	v_addc_u32_e32 v6, vcc, v7, v6, vcc                        // 000000002B90: 380C0D07
	flat_store_dword v[5:6], v2                                // 000000002B94: DC700000 00000205

0000000000002b9c BB0_25:
	s_or_b64 exec, exec, s[6:7]                                // 000000002B9C: 87FE067E
	v_add_u32_e32 v4, vcc, 24, v4                              // 000000002BA0: 32080898
	v_cmp_gt_u32_e32 vcc, s23, v4                              // 000000002BA4: 7D980817
	s_and_b64 s[0:1], s[0:1], vcc                              // 000000002BA8: 86806A00
	s_and_saveexec_b64 s[6:7], s[0:1]                          // 000000002BAC: BE862000
	s_cbranch_execz BB0_29                                     // 000000002BB0: BF88001E

0000000000002bb4 BB0_26:
	v_cmp_neq_f32_e64 s[0:1], s13, 0                           // 000000002BB4: D04D0000 0001000D
	v_mul_f32_e32 v0, s12, v0                                  // 000000002BBC: 0A00000C
	v_mov_b32_e32 v2, 0                                        // 000000002BC0: 7E040280
	s_and_b64 vcc, exec, s[0:1]                                // 000000002BC4: 86EA007E
	s_cbranch_vccz BB0_28                                      // 000000002BC8: BF86000D
	v_mad_u64_u32 v[5:6], s[0:1], s16, v4, v[1:2]              // 000000002BCC: D1E80005 04060810
	v_mov_b32_e32 v7, s5                                       // 000000002BD4: 7E0E0205
	v_mad_u64_u32 v[5:6], s[0:1], v3, s17, v[5:6]              // 000000002BD8: D1E80005 04142303
	v_lshlrev_b64 v[5:6], 2, v[5:6]                            // 000000002BE0: D28F0005 00020A82
	v_add_u32_e32 v5, vcc, s4, v5                              // 000000002BE8: 320A0A04
	v_addc_u32_e32 v6, vcc, v7, v6, vcc                        // 000000002BEC: 380C0D07
	flat_load_dword v5, v[5:6]                                 // 000000002BF0: DC500000 05000005
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002BF8: BF8C0070
	v_mac_f32_e32 v0, s13, v5                                  // 000000002BFC: 2C000A0D

0000000000002c00 BB0_28:
	v_mad_u64_u32 v[1:2], s[0:1], v3, s15, v[1:2]              // 000000002C00: D1E80001 04041F03
	v_mov_b32_e32 v3, s3                                       // 000000002C08: 7E060203
	v_mad_u64_u32 v[1:2], s[0:1], v4, s14, v[1:2]              // 000000002C0C: D1E80001 04041D04
	v_lshlrev_b64 v[1:2], 2, v[1:2]                            // 000000002C14: D28F0001 00020282
	v_add_u32_e32 v1, vcc, s2, v1                              // 000000002C1C: 32020202
	v_addc_u32_e32 v2, vcc, v3, v2, vcc                        // 000000002C20: 38040503
	flat_store_dword v[1:2], v0                                // 000000002C24: DC700000 00000001

0000000000002c2c BB0_29:
	s_endpgm                                                   // 000000002C2C: BF810000
