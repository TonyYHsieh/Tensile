
Kernels.so-000-gfx906.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000002100 Cijk_Ailk_Bljk_SB_MT64x64x4_SE_K1:
	s_load_dwordx2 s[28:29], s[4:5], 0x10                      // 000000002100: C0060702 00000010
	s_load_dwordx2 s[10:11], s[4:5], 0x18                      // 000000002108: C0060282 00000018
	s_load_dwordx8 s[12:19], s[4:5], 0x20                      // 000000002110: C00E0302 00000020
	s_load_dwordx4 s[20:23], s[4:5], 0x40                      // 000000002118: C00A0502 00000040
	s_load_dwordx4 s[24:27], s[4:5], 0x50                      // 000000002120: C00A0602 00000050
	v_lshrrev_b32_e32 v6, 2, v0                                // 000000002128: 200C0082
	s_lshl_b32 s3, s7, 6                                       // 00000000212C: 8E038607
	v_lshrrev_b32_e32 v18, 6, v0                               // 000000002130: 20240086
	s_lshl_b32 s2, s6, 6                                       // 000000002134: 8E028606
	s_waitcnt lgkmcnt(0)                                       // 000000002138: BF8CC07F
	v_cvt_f32_u32_e32 v1, s24                                  // 00000000213C: 7E020C18
	s_and_b32 s6, s6, s26                                      // 000000002140: 86061A06
	s_mov_b32 s30, s9                                          // 000000002144: BE9E0009
	s_mov_b32 s9, 0                                            // 000000002148: BE890080
	v_rcp_iflag_f32_e32 v1, v1                                 // 00000000214C: 7E024701
	v_and_b32_e32 v12, 3, v0                                   // 000000002150: 26180083
	s_lshl_b32 s6, s6, 4                                       // 000000002154: 8E068406
	v_and_b32_e32 v7, 15, v0                                   // 000000002158: 260E008F
	v_mul_f32_e32 v1, 0x4f800000, v1                           // 00000000215C: 0A0202FF 4F800000
	v_cvt_u32_f32_e32 v1, v1                                   // 000000002164: 7E020F01
	v_lshrrev_b32_e32 v8, 4, v0                                // 000000002168: 20100084
	v_lshlrev_b32_e32 v22, 2, v0                               // 00000000216C: 242C0082
	v_mov_b32_e32 v11, 0                                       // 000000002170: 7E160280
	v_mul_lo_u32 v2, v1, s24                                   // 000000002174: D2850002 00003101
	v_mul_hi_u32 v3, v1, s24                                   // 00000000217C: D2860003 00003101
	s_mov_b32 s7, s9                                           // 000000002184: BE870009
	v_lshlrev_b32_e32 v15, 2, v7                               // 000000002188: 241E0E82
	v_sub_u32_e32 v4, 0, v2                                    // 00000000218C: 6A080480
	v_cmp_eq_u32_e32 vcc, 0, v3                                // 000000002190: 7D940680
	v_cndmask_b32_e32 v2, v2, v4, vcc                          // 000000002194: 00040902
	v_mul_hi_u32 v2, v2, v1                                    // 000000002198: D2860002 00020302
	s_mov_b32 s32, s30                                         // 0000000021A0: BEA0001E
	v_add_u32_e32 v3, v1, v2                                   // 0000000021A4: 68060501
	v_sub_u32_e32 v1, v1, v2                                   // 0000000021A8: 6A020501
	v_cndmask_b32_e32 v1, v1, v3, vcc                          // 0000000021AC: 00020701
	v_mul_hi_u32 v1, v1, s8                                    // 0000000021B0: D2860001 00001101
	v_or_b32_e32 v3, s3, v6                                    // 0000000021B8: 28060C03
	v_and_or_b32 v2, v0, 63, s2                                // 0000000021BC: D2010002 00097F00
	v_lshl_or_b32 v0, v12, 6, v6                               // 0000000021C4: D2000000 04190D0C
	v_mul_lo_u32 v1, v1, s24                                   // 0000000021CC: D2850001 00003101
	v_alignbit_b32 v6, 0, s18, 30                              // 0000000021D4: D1CE0006 02782480
	v_mul_lo_u32 v6, v6, s6                                    // 0000000021DC: D2850006 00000D06
	v_lshlrev_b32_e32 v23, 2, v0                               // 0000000021E4: 242E0082
	v_sub_u32_e32 v4, s8, v1                                   // 0000000021E8: 6A080208
	v_cmp_ge_u32_e64 s[0:1], s8, v1                            // 0000000021EC: D0CE0000 00020208
	v_cmp_le_u32_e32 vcc, s24, v4                              // 0000000021F4: 7D960818
	v_subrev_u32_e32 v1, s24, v4                               // 0000000021F8: 6C020818
	s_and_b64 vcc, vcc, s[0:1]                                 // 0000000021FC: 86EA006A
	v_add_u32_e32 v5, s24, v4                                  // 000000002200: 680A0818
	v_cndmask_b32_e32 v1, v4, v1, vcc                          // 000000002204: 00020304
	v_cndmask_b32_e64 v1, v5, v1, s[0:1]                       // 000000002208: D1000001 00020305
	s_add_i32 s1, s23, -1                                      // 000000002210: 8101C117
	v_min_u32_e32 v3, s1, v3                                   // 000000002214: 1C060601
	v_mul_lo_u32 v4, v18, s18                                  // 000000002218: D2850004 00002512
	v_mul_lo_u32 v5, v1, s19                                   // 000000002220: D2850005 00002701
	v_mul_lo_u32 v3, v3, s20                                   // 000000002228: D2850003 00002903
	v_mul_lo_u32 v9, v1, s21                                   // 000000002230: D2850009 00002B01
	s_add_i32 s0, s22, -1                                      // 000000002238: 8100C116
	v_min_u32_e32 v2, s0, v2                                   // 00000000223C: 1C040400
	s_mov_b32 s8, s18                                          // 000000002240: BE880012
	v_add3_u32 v10, v2, v4, v5                                 // 000000002244: D1FF000A 04160902
	v_add3_u32 v2, v3, v12, v9                                 // 00000000224C: D1FF0002 04261903
	s_lshl_b64 s[0:1], s[8:9], 2                               // 000000002254: 8E808208
	v_mov_b32_e32 v9, s6                                       // 000000002258: 7E120206
	v_mul_hi_u32 v9, s0, v9                                    // 00000000225C: D2860009 00021200
	s_mul_i32 s18, s0, s6                                      // 000000002264: 92120600
	v_lshlrev_b64 v[4:5], 2, v[10:11]                          // 000000002268: D28F0004 00021482
	v_mov_b32_e32 v0, s29                                      // 000000002270: 7E00021D
	v_add_u32_e32 v10, v9, v6                                  // 000000002274: 68140D09
	v_mov_b32_e32 v9, s18                                      // 000000002278: 7E120212
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 00000000227C: D28F0009 00021282
	v_mov_b32_e32 v3, v11                                      // 000000002284: 7E06030B
	v_add_co_u32_e32 v6, vcc, s28, v9                          // 000000002288: 320C121C
	v_addc_co_u32_e32 v0, vcc, v10, v0, vcc                    // 00000000228C: 3800010A
	s_lshr_b32 s8, s25, 2                                      // 000000002290: 8F088219
	s_lshl_b64 s[18:19], s[6:7], 4                             // 000000002294: 8E928406
	s_add_u32 s7, s18, s10                                     // 000000002298: 80070A12
	v_add_co_u32_e32 v24, vcc, v6, v4                          // 00000000229C: 32300906
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000022A0: D28F0002 00020482
	v_addc_co_u32_e32 v25, vcc, v0, v5, vcc                    // 0000000022A8: 38320B00
	s_addc_u32 s10, s19, s11                                   // 0000000022AC: 820A0B13
	v_mov_b32_e32 v0, s10                                      // 0000000022B0: 7E00020A
	v_add_co_u32_e32 v26, vcc, s7, v2                          // 0000000022B4: 32340407
	v_addc_co_u32_e32 v27, vcc, v0, v3, vcc                    // 0000000022B8: 38360700
	s_cmp_eq_u32 s8, 0                                         // 0000000022BC: BF068008
	s_cbranch_scc1 BB0_3                                       // 0000000022C0: BF8500BE
	v_mov_b32_e32 v0, s8                                       // 0000000022C4: 7E000208
	v_mul_hi_u32 v0, s0, v0                                    // 0000000022C8: D2860000 00020000
	s_mul_i32 s7, s1, s8                                       // 0000000022D0: 92070801
	s_mul_i32 s10, s0, s8                                      // 0000000022D4: 920A0800
	v_sub_co_u32_e64 v29, vcc, 0, s10                          // 0000000022D8: D11A6A1D 00001480
	v_add_u32_e32 v0, s7, v0                                   // 0000000022E0: 68000007
	s_and_b32 s7, s25, -4                                      // 0000000022E4: 8607C419
	s_sub_u32 s10, 0, s7                                       // 0000000022E8: 808A0780
	s_subb_u32 s11, 0, 0                                       // 0000000022EC: 828B8080
	v_subb_co_u32_e32 v30, vcc, 0, v0, vcc                     // 0000000022F0: 3A3C0080
	v_mov_b32_e32 v0, 0                                        // 0000000022F4: 7E000280
	v_lshlrev_b32_e32 v28, 2, v8                               // 0000000022F8: 24381082
	s_add_i32 s7, s6, 1                                        // 0000000022FC: 81078106
	s_lshl_b64 s[10:11], s[10:11], 2                           // 000000002300: 8E8A820A
	s_lshl_b64 s[18:19], s[0:1], 2                             // 000000002304: 8E928200
	s_mov_b32 s20, s8                                          // 000000002308: BE940008
	v_mov_b32_e32 v2, v0                                       // 00000000230C: 7E040300
	v_mov_b32_e32 v3, v0                                       // 000000002310: 7E060300
	v_mov_b32_e32 v4, v0                                       // 000000002314: 7E080300
	v_mov_b32_e32 v5, v0                                       // 000000002318: 7E0A0300
	v_mov_b32_e32 v6, v0                                       // 00000000231C: 7E0C0300
	v_mov_b32_e32 v9, v0                                       // 000000002320: 7E120300
	v_mov_b32_e32 v10, v0                                      // 000000002324: 7E140300
	v_mov_b32_e32 v17, v0                                      // 000000002328: 7E220300
	v_mov_b32_e32 v19, v0                                      // 00000000232C: 7E260300
	v_mov_b32_e32 v20, v0                                      // 000000002330: 7E280300
	v_mov_b32_e32 v21, v0                                      // 000000002334: 7E2A0300
	v_mov_b32_e32 v16, v0                                      // 000000002338: 7E200300
	v_mov_b32_e32 v14, v0                                      // 00000000233C: 7E1C0300
	v_mov_b32_e32 v13, v0                                      // 000000002340: 7E1A0300
	v_mov_b32_e32 v11, v0                                      // 000000002344: 7E160300

0000000000002348 BB0_2:
	global_load_dword v31, v[26:27], off                       // 000000002348: DC508000 1F7F001A
	global_load_dword v32, v[24:25], off                       // 000000002350: DC508000 207F0018
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002358: BF8C0070
	s_barrier                                                  // 00000000235C: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002360: BF8CC07F
	v_add_co_u32_e32 v26, vcc, 16, v26                         // 000000002364: 32343490
	v_addc_co_u32_e32 v27, vcc, 0, v27, vcc                    // 000000002368: 38363680
	v_mov_b32_e32 v60, s19                                     // 00000000236C: 7E780213
	v_add_co_u32_e32 v24, vcc, s18, v24                        // 000000002370: 32303012
	v_addc_co_u32_e32 v25, vcc, v25, v60, vcc                  // 000000002374: 38327919
	v_lshlrev_b64 v[57:58], 2, v[29:30]                        // 000000002378: D28F0039 00023A82
	v_mov_b32_e32 v62, s11                                     // 000000002380: 7E7C020B
	v_add_co_u32_e32 v60, vcc, s10, v26                        // 000000002384: 3278340A
	v_addc_co_u32_e32 v62, vcc, v27, v62, vcc                  // 000000002388: 387C7D1B
	v_add_u32_e32 v33, 0x480, v28                              // 00000000238C: 684238FF 00000480
	v_add_co_u32_e32 v57, vcc, v24, v57                        // 000000002394: 32727318
	v_add_u32_e32 v39, 0x500, v28                              // 000000002398: 684E38FF 00000500
	v_add_u32_e32 v41, 0x580, v28                              // 0000000023A0: 685238FF 00000580
	v_mov_b32_e32 v61, s20                                     // 0000000023A8: 7E7A0214
	v_addc_co_u32_e32 v58, vcc, v25, v58, vcc                  // 0000000023AC: 38747519
	v_add_u32_e32 v47, 0x600, v28                              // 0000000023B0: 685E38FF 00000600
	v_add_u32_e32 v49, 0x680, v28                              // 0000000023B8: 686238FF 00000680
	v_cmp_eq_u32_e32 vcc, s7, v61                              // 0000000023C0: 7D947A07
	v_add_u32_e32 v55, 0x700, v28                              // 0000000023C4: 686E38FF 00000700
	v_add_u32_e32 v59, 0x780, v28                              // 0000000023CC: 687638FF 00000780
	v_cndmask_b32_e32 v25, v25, v58, vcc                       // 0000000023D4: 00327519
	v_cndmask_b32_e32 v24, v24, v57, vcc                       // 0000000023D8: 00307318
	v_cndmask_b32_e32 v27, v27, v62, vcc                       // 0000000023DC: 00367D1B
	v_cndmask_b32_e32 v26, v26, v60, vcc                       // 0000000023E0: 0034791A
	s_add_i32 s20, s20, -1                                     // 0000000023E4: 8114C114
	s_cmp_lg_u32 s20, 0                                        // 0000000023E8: BF078014
	ds_write_b32 v22, v32                                      // 0000000023EC: D81A0000 00002016
	ds_write_b32 v23, v31 offset:1024                          // 0000000023F4: D81A0400 00001F17
	s_waitcnt lgkmcnt(0)                                       // 0000000023FC: BF8CC07F
	s_barrier                                                  // 000000002400: BF8A0000
	v_add_u32_e32 v31, 0x400, v28                              // 000000002404: 683E38FF 00000400
	s_waitcnt lgkmcnt(0)                                       // 00000000240C: BF8CC07F
	ds_read2_b32 v[31:32], v31 offset1:16                      // 000000002410: D86E1000 1F00001F
	ds_read2_b32 v[35:36], v15 offset1:16                      // 000000002418: D86E1000 2300000F
	ds_read2_b32 v[37:38], v15 offset0:32 offset1:48           // 000000002420: D86E3020 2500000F
	ds_read2_b32 v[33:34], v33 offset1:16                      // 000000002428: D86E1000 21000021
	ds_read2_b32 v[39:40], v39 offset1:16                      // 000000002430: D86E1000 27000027
	ds_read2_b32 v[41:42], v41 offset1:16                      // 000000002438: D86E1000 29000029
	ds_read2_b32 v[43:44], v15 offset0:64 offset1:80           // 000000002440: D86E5040 2B00000F
	ds_read2_b32 v[45:46], v15 offset0:96 offset1:112          // 000000002448: D86E7060 2D00000F
	ds_read2_b32 v[47:48], v47 offset1:16                      // 000000002450: D86E1000 2F00002F
	ds_read2_b32 v[51:52], v15 offset0:128 offset1:144         // 000000002458: D86E9080 3300000F
	ds_read2_b32 v[53:54], v15 offset0:160 offset1:176         // 000000002460: D86EB0A0 3500000F
	ds_read2_b32 v[49:50], v49 offset1:16                      // 000000002468: D86E1000 31000031
	ds_read2_b32 v[57:58], v59 offset1:16                      // 000000002470: D86E1000 3900003B
	ds_read2_b32 v[59:60], v15 offset0:192 offset1:208         // 000000002478: D86ED0C0 3B00000F
	ds_read2_b32 v[55:56], v55 offset1:16                      // 000000002480: D86E1000 37000037
	ds_read2_b32 v[61:62], v15 offset0:224 offset1:240         // 000000002488: D86EF0E0 3D00000F
	s_waitcnt lgkmcnt(14)                                      // 000000002490: BF8CCE7F
	v_mac_f32_e32 v11, v35, v31                                // 000000002494: 2C163F23
	v_mac_f32_e32 v13, v36, v31                                // 000000002498: 2C1A3F24
	v_mac_f32_e32 v21, v35, v32                                // 00000000249C: 2C2A4123
	v_mac_f32_e32 v20, v36, v32                                // 0000000024A0: 2C284124
	s_waitcnt lgkmcnt(12)                                      // 0000000024A4: BF8CCC7F
	v_mac_f32_e32 v10, v35, v33                                // 0000000024A8: 2C144323
	v_mac_f32_e32 v9, v36, v33                                 // 0000000024AC: 2C124324
	v_mac_f32_e32 v4, v35, v34                                 // 0000000024B0: 2C084523
	v_mac_f32_e32 v3, v36, v34                                 // 0000000024B4: 2C064524
	v_mac_f32_e32 v14, v37, v31                                // 0000000024B8: 2C1C3F25
	v_mac_f32_e32 v16, v38, v31                                // 0000000024BC: 2C203F26
	v_mac_f32_e32 v19, v37, v32                                // 0000000024C0: 2C264125
	v_mac_f32_e32 v17, v38, v32                                // 0000000024C4: 2C224126
	v_mac_f32_e32 v6, v37, v33                                 // 0000000024C8: 2C0C4325
	v_mac_f32_e32 v5, v38, v33                                 // 0000000024CC: 2C0A4326
	v_mac_f32_e32 v2, v37, v34                                 // 0000000024D0: 2C044525
	v_mac_f32_e32 v0, v38, v34                                 // 0000000024D4: 2C004526
	s_waitcnt lgkmcnt(9)                                       // 0000000024D8: BF8CC97F
	v_mac_f32_e32 v11, v43, v39                                // 0000000024DC: 2C164F2B
	v_mac_f32_e32 v13, v44, v39                                // 0000000024E0: 2C1A4F2C
	s_waitcnt lgkmcnt(8)                                       // 0000000024E4: BF8CC87F
	v_mac_f32_e32 v14, v45, v39                                // 0000000024E8: 2C1C4F2D
	v_mac_f32_e32 v16, v46, v39                                // 0000000024EC: 2C204F2E
	v_mac_f32_e32 v21, v43, v40                                // 0000000024F0: 2C2A512B
	v_mac_f32_e32 v20, v44, v40                                // 0000000024F4: 2C28512C
	v_mac_f32_e32 v19, v45, v40                                // 0000000024F8: 2C26512D
	v_mac_f32_e32 v17, v46, v40                                // 0000000024FC: 2C22512E
	v_mac_f32_e32 v10, v43, v41                                // 000000002500: 2C14532B
	v_mac_f32_e32 v9, v44, v41                                 // 000000002504: 2C12532C
	v_mac_f32_e32 v4, v43, v42                                 // 000000002508: 2C08552B
	v_mac_f32_e32 v3, v44, v42                                 // 00000000250C: 2C06552C
	v_mac_f32_e32 v6, v45, v41                                 // 000000002510: 2C0C532D
	v_mac_f32_e32 v5, v46, v41                                 // 000000002514: 2C0A532E
	v_mac_f32_e32 v2, v45, v42                                 // 000000002518: 2C04552D
	v_mac_f32_e32 v0, v46, v42                                 // 00000000251C: 2C00552E
	s_waitcnt lgkmcnt(6)                                       // 000000002520: BF8CC67F
	v_mac_f32_e32 v11, v51, v47                                // 000000002524: 2C165F33
	v_mac_f32_e32 v13, v52, v47                                // 000000002528: 2C1A5F34
	s_waitcnt lgkmcnt(5)                                       // 00000000252C: BF8CC57F
	v_mac_f32_e32 v14, v53, v47                                // 000000002530: 2C1C5F35
	v_mac_f32_e32 v16, v54, v47                                // 000000002534: 2C205F36
	v_mac_f32_e32 v21, v51, v48                                // 000000002538: 2C2A6133
	v_mac_f32_e32 v20, v52, v48                                // 00000000253C: 2C286134
	v_mac_f32_e32 v19, v53, v48                                // 000000002540: 2C266135
	v_mac_f32_e32 v17, v54, v48                                // 000000002544: 2C226136
	s_waitcnt lgkmcnt(4)                                       // 000000002548: BF8CC47F
	v_mac_f32_e32 v10, v51, v49                                // 00000000254C: 2C146333
	v_mac_f32_e32 v9, v52, v49                                 // 000000002550: 2C126334
	v_mac_f32_e32 v4, v51, v50                                 // 000000002554: 2C086533
	v_mac_f32_e32 v3, v52, v50                                 // 000000002558: 2C066534
	v_mac_f32_e32 v6, v53, v49                                 // 00000000255C: 2C0C6335
	v_mac_f32_e32 v5, v54, v49                                 // 000000002560: 2C0A6336
	v_mac_f32_e32 v2, v53, v50                                 // 000000002564: 2C046535
	v_mac_f32_e32 v0, v54, v50                                 // 000000002568: 2C006536
	s_waitcnt lgkmcnt(1)                                       // 00000000256C: BF8CC17F
	v_mac_f32_e32 v11, v59, v55                                // 000000002570: 2C166F3B
	v_mac_f32_e32 v13, v60, v55                                // 000000002574: 2C1A6F3C
	s_waitcnt lgkmcnt(0)                                       // 000000002578: BF8CC07F
	v_mac_f32_e32 v14, v61, v55                                // 00000000257C: 2C1C6F3D
	v_mac_f32_e32 v16, v62, v55                                // 000000002580: 2C206F3E
	v_mac_f32_e32 v21, v59, v56                                // 000000002584: 2C2A713B
	v_mac_f32_e32 v20, v60, v56                                // 000000002588: 2C28713C
	v_mac_f32_e32 v19, v61, v56                                // 00000000258C: 2C26713D
	v_mac_f32_e32 v17, v62, v56                                // 000000002590: 2C22713E
	v_mac_f32_e32 v10, v59, v57                                // 000000002594: 2C14733B
	v_mac_f32_e32 v9, v60, v57                                 // 000000002598: 2C12733C
	v_mac_f32_e32 v4, v59, v58                                 // 00000000259C: 2C08753B
	v_mac_f32_e32 v3, v60, v58                                 // 0000000025A0: 2C06753C
	v_mac_f32_e32 v6, v61, v57                                 // 0000000025A4: 2C0C733D
	v_mac_f32_e32 v5, v62, v57                                 // 0000000025A8: 2C0A733E
	v_mac_f32_e32 v2, v61, v58                                 // 0000000025AC: 2C04753D
	v_mac_f32_e32 v0, v62, v58                                 // 0000000025B0: 2C00753E
	s_cbranch_scc1 BB0_2                                       // 0000000025B4: BF85FF64
	s_branch BB0_4                                             // 0000000025B8: BF82000F

00000000000025bc BB0_3:
	v_mov_b32_e32 v13, v11                                     // 0000000025BC: 7E1A030B
	v_mov_b32_e32 v14, v11                                     // 0000000025C0: 7E1C030B
	v_mov_b32_e32 v16, v11                                     // 0000000025C4: 7E20030B
	v_mov_b32_e32 v21, v11                                     // 0000000025C8: 7E2A030B
	v_mov_b32_e32 v20, v11                                     // 0000000025CC: 7E28030B
	v_mov_b32_e32 v19, v11                                     // 0000000025D0: 7E26030B
	v_mov_b32_e32 v17, v11                                     // 0000000025D4: 7E22030B
	v_mov_b32_e32 v10, v11                                     // 0000000025D8: 7E14030B
	v_mov_b32_e32 v9, v11                                      // 0000000025DC: 7E12030B
	v_mov_b32_e32 v6, v11                                      // 0000000025E0: 7E0C030B
	v_mov_b32_e32 v5, v11                                      // 0000000025E4: 7E0A030B
	v_mov_b32_e32 v4, v11                                      // 0000000025E8: 7E08030B
	v_mov_b32_e32 v3, v11                                      // 0000000025EC: 7E06030B
	v_mov_b32_e32 v2, v11                                      // 0000000025F0: 7E04030B
	v_mov_b32_e32 v0, v11                                      // 0000000025F4: 7E00030B

00000000000025f8 BB0_4:
	s_and_b32 s7, s25, 3                                       // 0000000025F8: 86078319
	v_cmp_gt_u32_e32 vcc, s7, v18                              // 0000000025FC: 7D982407
	s_sub_i32 s8, s8, s6                                       // 000000002600: 81880608
	v_mov_b32_e32 v18, 0                                       // 000000002604: 7E240280
	s_and_saveexec_b64 s[10:11], vcc                           // 000000002608: BE8A206A
	s_cbranch_execz BB0_6                                      // 00000000260C: BF88000D

0000000000002610 BB0_5:
	v_mov_b32_e32 v18, s8                                      // 000000002610: 7E240208
	v_mul_hi_u32 v18, s0, v18                                  // 000000002614: D2860012 00022400
	s_mul_i32 s1, s1, s8                                       // 00000000261C: 92010801
	s_mul_i32 s0, s0, s8                                       // 000000002620: 92000800
	v_mov_b32_e32 v28, s0                                      // 000000002624: 7E380200
	v_add_u32_e32 v29, s1, v18                                 // 000000002628: 683A2401
	v_lshlrev_b64 v[28:29], 2, v[28:29]                        // 00000000262C: D28F001C 00023882
	v_add_co_u32_e32 v24, vcc, v24, v28                        // 000000002634: 32303918
	v_addc_co_u32_e32 v25, vcc, v25, v29, vcc                  // 000000002638: 38323B19
	global_load_dword v18, v[24:25], off                       // 00000000263C: DC508000 127F0018

0000000000002644 BB0_6:
	s_or_b64 exec, exec, s[10:11]                              // 000000002644: 87FE0A7E
	v_cmp_gt_u32_e32 vcc, s7, v12                              // 000000002648: 7D981807
	v_mov_b32_e32 v12, 0                                       // 00000000264C: 7E180280
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002650: BE80206A
	s_cbranch_execz BB0_8                                      // 000000002654: BF880006

0000000000002658 BB0_7:
	s_lshl_b64 s[8:9], s[8:9], 4                               // 000000002658: 8E888408
	v_mov_b32_e32 v12, s9                                      // 00000000265C: 7E180209
	v_add_co_u32_e32 v24, vcc, s8, v26                         // 000000002660: 32303408
	v_addc_co_u32_e32 v25, vcc, v27, v12, vcc                  // 000000002664: 3832191B
	global_load_dword v12, v[24:25], off                       // 000000002668: DC508000 0C7F0018

0000000000002670 BB0_8:
	s_or_b64 exec, exec, s[0:1]                                // 000000002670: 87FE007E
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002674: BF8C0070
	s_barrier                                                  // 000000002678: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 00000000267C: BF8CC07F
	ds_write_b32 v22, v18                                      // 000000002680: D81A0000 00001216
	ds_write_b32 v23, v12 offset:1024                          // 000000002688: D81A0400 00000C17
	s_waitcnt lgkmcnt(0)                                       // 000000002690: BF8CC07F
	s_barrier                                                  // 000000002694: BF8A0000
	s_load_dwordx2 s[10:11], s[4:5], 0x0                       // 000000002698: C0060282 00000000
	s_load_dwordx2 s[18:19], s[4:5], 0x8                       // 0000000026A0: C0060482 00000008
	s_cmp_eq_u32 s7, 0                                         // 0000000026A8: BF068007
	s_waitcnt lgkmcnt(0)                                       // 0000000026AC: BF8CC07F
	s_cbranch_scc1 BB0_11                                      // 0000000026B0: BF850028
	v_lshlrev_b32_e32 v12, 2, v8                               // 0000000026B4: 24181082
	v_mov_b32_e32 v18, s7                                      // 0000000026B8: 7E240207
	s_movk_i32 s0, 0x100                                       // 0000000026BC: B0000100

00000000000026c0 BB0_10:
	v_add_u32_e32 v22, 0x400, v12                              // 0000000026C0: 682C18FF 00000400
	v_add_u32_e32 v28, 0x480, v12                              // 0000000026C8: 683818FF 00000480
	ds_read2_b32 v[22:23], v22 offset1:16                      // 0000000026D0: D86E1000 16000016
	ds_read2_b32 v[24:25], v15 offset1:16                      // 0000000026D8: D86E1000 1800000F
	ds_read2_b32 v[26:27], v15 offset0:32 offset1:48           // 0000000026E0: D86E3020 1A00000F
	ds_read2_b32 v[28:29], v28 offset1:16                      // 0000000026E8: D86E1000 1C00001C
	v_add_u32_e32 v18, -1, v18                                 // 0000000026F0: 682424C1
	v_cmp_ne_u32_e32 vcc, 0, v18                               // 0000000026F4: 7D9A2480
	s_and_b64 vcc, exec, vcc                                   // 0000000026F8: 86EA6A7E
	s_waitcnt lgkmcnt(2)                                       // 0000000026FC: BF8CC27F
	v_mac_f32_e32 v11, v24, v22                                // 000000002700: 2C162D18
	v_add_u32_e32 v12, s0, v12                                 // 000000002704: 68181800
	v_add_u32_e32 v15, s0, v15                                 // 000000002708: 681E1E00
	v_mac_f32_e32 v13, v25, v22                                // 00000000270C: 2C1A2D19
	s_waitcnt lgkmcnt(1)                                       // 000000002710: BF8CC17F
	v_mac_f32_e32 v14, v26, v22                                // 000000002714: 2C1C2D1A
	v_mac_f32_e32 v16, v27, v22                                // 000000002718: 2C202D1B
	v_mac_f32_e32 v21, v24, v23                                // 00000000271C: 2C2A2F18
	v_mac_f32_e32 v20, v25, v23                                // 000000002720: 2C282F19
	v_mac_f32_e32 v19, v26, v23                                // 000000002724: 2C262F1A
	v_mac_f32_e32 v17, v27, v23                                // 000000002728: 2C222F1B
	s_waitcnt lgkmcnt(0)                                       // 00000000272C: BF8CC07F
	v_mac_f32_e32 v10, v24, v28                                // 000000002730: 2C143918
	v_mac_f32_e32 v9, v25, v28                                 // 000000002734: 2C123919
	v_mac_f32_e32 v4, v24, v29                                 // 000000002738: 2C083B18
	v_mac_f32_e32 v3, v25, v29                                 // 00000000273C: 2C063B19
	v_mac_f32_e32 v6, v26, v28                                 // 000000002740: 2C0C391A
	v_mac_f32_e32 v5, v27, v28                                 // 000000002744: 2C0A391B
	v_mac_f32_e32 v2, v26, v29                                 // 000000002748: 2C043B1A
	v_mac_f32_e32 v0, v27, v29                                 // 00000000274C: 2C003B1B
	s_cbranch_vccnz BB0_10                                     // 000000002750: BF87FFDB

0000000000002754 BB0_11:
	v_or_b32_e32 v7, s2, v7                                    // 000000002754: 280E0E02
	v_or_b32_e32 v18, s3, v8                                   // 000000002758: 28241003
	v_cmp_gt_u32_e64 s[6:7], s22, v7                           // 00000000275C: D0CC0006 00020E16
	v_cmp_gt_u32_e64 s[8:9], s23, v18                          // 000000002764: D0CC0008 00022417
	s_and_b64 s[2:3], s[6:7], s[8:9]                           // 00000000276C: 86820806
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002770: BE802002
	s_cbranch_execz BB0_15                                     // 000000002774: BF88001E

0000000000002778 BB0_12:
	v_cmp_neq_f32_e64 s[2:3], s13, 0                           // 000000002778: D04D0002 0001000D
	v_mul_f32_e32 v11, s12, v11                                // 000000002780: 0A16160C
	v_mov_b32_e32 v8, 0                                        // 000000002784: 7E100280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002788: 86EA027E
	s_cbranch_vccz BB0_14                                      // 00000000278C: BF86000D
	v_mad_u64_u32 v[22:23], s[2:3], s16, v18, v[7:8]           // 000000002790: D1E80216 041E2410
	v_mov_b32_e32 v12, s19                                     // 000000002798: 7E180213
	v_mad_u64_u32 v[22:23], s[2:3], v1, s17, v[22:23]          // 00000000279C: D1E80216 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000027A4: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s18, v22                        // 0000000027AC: 322C2C12
	v_addc_co_u32_e32 v23, vcc, v12, v23, vcc                  // 0000000027B0: 382E2F0C
	global_load_dword v12, v[22:23], off                       // 0000000027B4: DC508000 0C7F0016
	s_waitcnt vmcnt(0)                                         // 0000000027BC: BF8C0F70
	v_mac_f32_e32 v11, s13, v12                                // 0000000027C0: 2C16180D

00000000000027c4 BB0_14:
	v_mad_u64_u32 v[22:23], s[2:3], v1, s15, v[7:8]            // 0000000027C4: D1E80216 041C1F01
	v_mov_b32_e32 v8, s11                                      // 0000000027CC: 7E10020B
	v_mad_u64_u32 v[22:23], s[2:3], v18, s14, v[22:23]         // 0000000027D0: D1E80216 04581D12
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000027D8: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s10, v22                        // 0000000027E0: 322C2C0A
	v_addc_co_u32_e32 v23, vcc, v8, v23, vcc                   // 0000000027E4: 382E2F08
	global_store_dword v[22:23], v11, off                      // 0000000027E8: DC708000 007F0B16

00000000000027f0 BB0_15:
	s_or_b64 exec, exec, s[0:1]                                // 0000000027F0: 87FE007E
	v_or_b32_e32 v11, 16, v7                                   // 0000000027F4: 28160E90
	v_cmp_gt_u32_e64 s[0:1], s22, v11                          // 0000000027F8: D0CC0000 00021616
	s_and_b64 s[4:5], s[0:1], s[8:9]                           // 000000002800: 86840800
	s_and_saveexec_b64 s[2:3], s[4:5]                          // 000000002804: BE822004
	s_cbranch_execz BB0_19                                     // 000000002808: BF880020

000000000000280c BB0_16:
	v_cmp_neq_f32_e64 s[4:5], s13, 0                           // 00000000280C: D04D0004 0001000D
	v_mul_f32_e32 v8, s12, v13                                 // 000000002814: 0A101A0C
	v_mov_b32_e32 v12, 0                                       // 000000002818: 7E180280
	s_and_b64 vcc, exec, s[4:5]                                // 00000000281C: 86EA047E
	s_cbranch_vccz BB0_18                                      // 000000002820: BF86000F
	v_mov_b32_e32 v22, v7                                      // 000000002824: 7E2C0307
	v_mov_b32_e32 v23, v12                                     // 000000002828: 7E2E030C
	v_mad_u64_u32 v[22:23], s[4:5], s16, v18, v[22:23]         // 00000000282C: D1E80416 045A2410
	v_mov_b32_e32 v13, s19                                     // 000000002834: 7E1A0213
	v_mad_u64_u32 v[22:23], s[4:5], v1, s17, v[22:23]          // 000000002838: D1E80416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002840: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s18, v22                        // 000000002848: 322C2C12
	v_addc_co_u32_e32 v23, vcc, v13, v23, vcc                  // 00000000284C: 382E2F0D
	global_load_dword v13, v[22:23], off offset:64             // 000000002850: DC508040 0D7F0016
	s_waitcnt vmcnt(0)                                         // 000000002858: BF8C0F70
	v_mac_f32_e32 v8, s13, v13                                 // 00000000285C: 2C101A0D

0000000000002860 BB0_18:
	v_mad_u64_u32 v[12:13], s[4:5], v1, s15, v[11:12]          // 000000002860: D1E8040C 042C1F01
	v_mov_b32_e32 v15, s11                                     // 000000002868: 7E1E020B
	v_mad_u64_u32 v[12:13], s[4:5], v18, s14, v[12:13]         // 00000000286C: D1E8040C 04301D12
	v_lshlrev_b64 v[12:13], 2, v[12:13]                        // 000000002874: D28F000C 00021882
	v_add_co_u32_e32 v12, vcc, s10, v12                        // 00000000287C: 3218180A
	v_addc_co_u32_e32 v13, vcc, v15, v13, vcc                  // 000000002880: 381A1B0F
	global_store_dword v[12:13], v8, off                       // 000000002884: DC708000 007F080C

000000000000288c BB0_19:
	s_or_b64 exec, exec, s[2:3]                                // 00000000288C: 87FE027E
	v_or_b32_e32 v13, 32, v7                                   // 000000002890: 281A0EA0
	v_cmp_gt_u32_e64 s[2:3], s22, v13                          // 000000002894: D0CC0002 00021A16
	s_and_b64 s[20:21], s[2:3], s[8:9]                         // 00000000289C: 86940802
	s_and_saveexec_b64 s[4:5], s[20:21]                        // 0000000028A0: BE842014
	s_cbranch_execz BB0_23                                     // 0000000028A4: BF880020

00000000000028a8 BB0_20:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 0000000028A8: D04D0014 0001000D
	v_mul_f32_e32 v8, s12, v14                                 // 0000000028B0: 0A101C0C
	v_mov_b32_e32 v14, 0                                       // 0000000028B4: 7E1C0280
	s_and_b64 vcc, exec, s[20:21]                              // 0000000028B8: 86EA147E
	s_cbranch_vccz BB0_22                                      // 0000000028BC: BF86000F
	v_mov_b32_e32 v22, v7                                      // 0000000028C0: 7E2C0307
	v_mov_b32_e32 v23, v14                                     // 0000000028C4: 7E2E030E
	v_mad_u64_u32 v[22:23], s[20:21], s16, v18, v[22:23]       // 0000000028C8: D1E81416 045A2410
	v_mov_b32_e32 v12, s19                                     // 0000000028D0: 7E180213
	v_mad_u64_u32 v[22:23], s[20:21], v1, s17, v[22:23]        // 0000000028D4: D1E81416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000028DC: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s18, v22                        // 0000000028E4: 322C2C12
	v_addc_co_u32_e32 v23, vcc, v12, v23, vcc                  // 0000000028E8: 382E2F0C
	global_load_dword v12, v[22:23], off offset:128            // 0000000028EC: DC508080 0C7F0016
	s_waitcnt vmcnt(0)                                         // 0000000028F4: BF8C0F70
	v_mac_f32_e32 v8, s13, v12                                 // 0000000028F8: 2C10180D

00000000000028fc BB0_22:
	v_mad_u64_u32 v[14:15], s[20:21], v1, s15, v[13:14]        // 0000000028FC: D1E8140E 04341F01
	v_mov_b32_e32 v12, s11                                     // 000000002904: 7E18020B
	v_mad_u64_u32 v[14:15], s[20:21], v18, s14, v[14:15]       // 000000002908: D1E8140E 04381D12
	v_lshlrev_b64 v[14:15], 2, v[14:15]                        // 000000002910: D28F000E 00021C82
	v_add_co_u32_e32 v14, vcc, s10, v14                        // 000000002918: 321C1C0A
	v_addc_co_u32_e32 v15, vcc, v12, v15, vcc                  // 00000000291C: 381E1F0C
	global_store_dword v[14:15], v8, off                       // 000000002920: DC708000 007F080E

0000000000002928 BB0_23:
	s_or_b64 exec, exec, s[4:5]                                // 000000002928: 87FE047E
	v_or_b32_e32 v15, 48, v7                                   // 00000000292C: 281E0EB0
	v_cmp_gt_u32_e64 s[4:5], s22, v15                          // 000000002930: D0CC0004 00021E16
	s_and_b64 s[20:21], s[4:5], s[8:9]                         // 000000002938: 86940804
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 00000000293C: BE882014
	s_cbranch_execz BB0_27                                     // 000000002940: BF880020

0000000000002944 BB0_24:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002944: D04D0014 0001000D
	v_mul_f32_e32 v8, s12, v16                                 // 00000000294C: 0A10200C
	v_mov_b32_e32 v16, 0                                       // 000000002950: 7E200280
	s_and_b64 vcc, exec, s[20:21]                              // 000000002954: 86EA147E
	s_cbranch_vccz BB0_26                                      // 000000002958: BF86000F
	v_mov_b32_e32 v22, v7                                      // 00000000295C: 7E2C0307
	v_mov_b32_e32 v23, v16                                     // 000000002960: 7E2E0310
	v_mad_u64_u32 v[22:23], s[20:21], s16, v18, v[22:23]       // 000000002964: D1E81416 045A2410
	v_mov_b32_e32 v12, s19                                     // 00000000296C: 7E180213
	v_mad_u64_u32 v[22:23], s[20:21], v1, s17, v[22:23]        // 000000002970: D1E81416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002978: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s18, v22                        // 000000002980: 322C2C12
	v_addc_co_u32_e32 v23, vcc, v12, v23, vcc                  // 000000002984: 382E2F0C
	global_load_dword v12, v[22:23], off offset:192            // 000000002988: DC5080C0 0C7F0016
	s_waitcnt vmcnt(0)                                         // 000000002990: BF8C0F70
	v_mac_f32_e32 v8, s13, v12                                 // 000000002994: 2C10180D

0000000000002998 BB0_26:
	v_mad_u64_u32 v[22:23], s[20:21], v1, s15, v[15:16]        // 000000002998: D1E81416 043C1F01
	v_mov_b32_e32 v12, s11                                     // 0000000029A0: 7E18020B
	v_mad_u64_u32 v[22:23], s[20:21], v18, s14, v[22:23]       // 0000000029A4: D1E81416 04581D12
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000029AC: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s10, v22                        // 0000000029B4: 322C2C0A
	v_addc_co_u32_e32 v23, vcc, v12, v23, vcc                  // 0000000029B8: 382E2F0C
	global_store_dword v[22:23], v8, off                       // 0000000029BC: DC708000 007F0816

00000000000029c4 BB0_27:
	s_or_b64 exec, exec, s[8:9]                                // 0000000029C4: 87FE087E
	v_add_u32_e32 v8, 16, v18                                  // 0000000029C8: 68102490
	v_cmp_gt_u32_e64 s[8:9], s23, v8                           // 0000000029CC: D0CC0008 00021017
	s_and_b64 s[24:25], s[6:7], s[8:9]                         // 0000000029D4: 86980806
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 0000000029D8: BE942018
	s_cbranch_execz BB0_31                                     // 0000000029DC: BF88001F

00000000000029e0 BB0_28:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 0000000029E0: D04D0018 0001000D
	v_mul_f32_e32 v12, s12, v21                                // 0000000029E8: 0A182A0C
	v_mov_b32_e32 v22, 0                                       // 0000000029EC: 7E2C0280
	v_mov_b32_e32 v21, v7                                      // 0000000029F0: 7E2A0307
	s_and_b64 vcc, exec, s[24:25]                              // 0000000029F4: 86EA187E
	s_cbranch_vccz BB0_30                                      // 0000000029F8: BF86000D
	v_mad_u64_u32 v[23:24], s[24:25], s16, v8, v[21:22]        // 0000000029FC: D1E81817 04561010
	v_mov_b32_e32 v14, s19                                     // 000000002A04: 7E1C0213
	v_mad_u64_u32 v[23:24], s[24:25], v1, s17, v[23:24]        // 000000002A08: D1E81817 045C2301
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002A10: D28F0017 00022E82
	v_add_co_u32_e32 v23, vcc, s18, v23                        // 000000002A18: 322E2E12
	v_addc_co_u32_e32 v24, vcc, v14, v24, vcc                  // 000000002A1C: 3830310E
	global_load_dword v14, v[23:24], off                       // 000000002A20: DC508000 0E7F0017
	s_waitcnt vmcnt(0)                                         // 000000002A28: BF8C0F70
	v_mac_f32_e32 v12, s13, v14                                // 000000002A2C: 2C181C0D

0000000000002a30 BB0_30:
	v_mad_u64_u32 v[21:22], s[24:25], v1, s15, v[21:22]        // 000000002A30: D1E81815 04541F01
	v_mov_b32_e32 v14, s11                                     // 000000002A38: 7E1C020B
	v_mad_u64_u32 v[21:22], s[24:25], v8, s14, v[21:22]        // 000000002A3C: D1E81815 04541D08
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002A44: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s10, v21                        // 000000002A4C: 322A2A0A
	v_addc_co_u32_e32 v22, vcc, v14, v22, vcc                  // 000000002A50: 382C2D0E
	global_store_dword v[21:22], v12, off                      // 000000002A54: DC708000 007F0C15

0000000000002a5c BB0_31:
	s_or_b64 exec, exec, s[20:21]                              // 000000002A5C: 87FE147E
	s_and_b64 s[24:25], s[0:1], s[8:9]                         // 000000002A60: 86980800
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002A64: BE942018
	s_cbranch_execz BB0_36                                     // 000000002A68: BF880023

0000000000002a6c BB0_32:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002A6C: D04D0018 0001000D
	v_mul_f32_e32 v12, s12, v20                                // 000000002A74: 0A18280C
	v_mov_b32_e32 v21, 0                                       // 000000002A78: 7E2A0280
	s_and_b64 vcc, exec, s[24:25]                              // 000000002A7C: 86EA187E
	s_cbranch_vccz BB0_34                                      // 000000002A80: BF860011
	v_mov_b32_e32 v22, v7                                      // 000000002A84: 7E2C0307
	v_mov_b32_e32 v23, v21                                     // 000000002A88: 7E2E0315
	v_mad_u64_u32 v[22:23], s[24:25], s16, v8, v[22:23]        // 000000002A8C: D1E81816 045A1010
	v_mov_b32_e32 v14, s19                                     // 000000002A94: 7E1C0213
	v_mov_b32_e32 v20, v11                                     // 000000002A98: 7E28030B
	v_mad_u64_u32 v[22:23], s[24:25], v1, s17, v[22:23]        // 000000002A9C: D1E81816 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002AA4: D28F0016 00022C82
	v_add_co_u32_e32 v22, vcc, s18, v22                        // 000000002AAC: 322C2C12
	v_addc_co_u32_e32 v23, vcc, v14, v23, vcc                  // 000000002AB0: 382E2F0E
	global_load_dword v14, v[22:23], off offset:64             // 000000002AB4: DC508040 0E7F0016
	s_waitcnt vmcnt(0)                                         // 000000002ABC: BF8C0F70
	v_mac_f32_e32 v12, s13, v14                                // 000000002AC0: 2C181C0D
	s_branch BB0_35                                            // 000000002AC4: BF820001

0000000000002ac8 BB0_34:
	v_mov_b32_e32 v20, v11                                     // 000000002AC8: 7E28030B

0000000000002acc BB0_35:
	v_mad_u64_u32 v[20:21], s[24:25], v1, s15, v[20:21]        // 000000002ACC: D1E81814 04501F01
	v_mov_b32_e32 v14, s11                                     // 000000002AD4: 7E1C020B
	v_mad_u64_u32 v[20:21], s[24:25], v8, s14, v[20:21]        // 000000002AD8: D1E81814 04501D08
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000002AE0: D28F0014 00022882
	v_add_co_u32_e32 v20, vcc, s10, v20                        // 000000002AE8: 3228280A
	v_addc_co_u32_e32 v21, vcc, v14, v21, vcc                  // 000000002AEC: 382A2B0E
	global_store_dword v[20:21], v12, off                      // 000000002AF0: DC708000 007F0C14

0000000000002af8 BB0_36:
	s_or_b64 exec, exec, s[20:21]                              // 000000002AF8: 87FE147E
	s_and_b64 s[24:25], s[2:3], s[8:9]                         // 000000002AFC: 86980802
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002B00: BE942018
	s_cbranch_execz BB0_41                                     // 000000002B04: BF880023

0000000000002b08 BB0_37:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002B08: D04D0018 0001000D
	v_mul_f32_e32 v12, s12, v19                                // 000000002B10: 0A18260C
	v_mov_b32_e32 v20, 0                                       // 000000002B14: 7E280280
	s_and_b64 vcc, exec, s[24:25]                              // 000000002B18: 86EA187E
	s_cbranch_vccz BB0_39                                      // 000000002B1C: BF860011
	v_mov_b32_e32 v21, v7                                      // 000000002B20: 7E2A0307
	v_mov_b32_e32 v22, v20                                     // 000000002B24: 7E2C0314
	v_mad_u64_u32 v[21:22], s[24:25], s16, v8, v[21:22]        // 000000002B28: D1E81815 04561010
	v_mov_b32_e32 v14, s19                                     // 000000002B30: 7E1C0213
	v_mov_b32_e32 v19, v13                                     // 000000002B34: 7E26030D
	v_mad_u64_u32 v[21:22], s[24:25], v1, s17, v[21:22]        // 000000002B38: D1E81815 04542301
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002B40: D28F0015 00022A82
	v_add_co_u32_e32 v21, vcc, s18, v21                        // 000000002B48: 322A2A12
	v_addc_co_u32_e32 v22, vcc, v14, v22, vcc                  // 000000002B4C: 382C2D0E
	global_load_dword v14, v[21:22], off offset:128            // 000000002B50: DC508080 0E7F0015
	s_waitcnt vmcnt(0)                                         // 000000002B58: BF8C0F70
	v_mac_f32_e32 v12, s13, v14                                // 000000002B5C: 2C181C0D
	s_branch BB0_40                                            // 000000002B60: BF820001

0000000000002b64 BB0_39:
	v_mov_b32_e32 v19, v13                                     // 000000002B64: 7E26030D

0000000000002b68 BB0_40:
	v_mad_u64_u32 v[19:20], s[24:25], v1, s15, v[19:20]        // 000000002B68: D1E81813 044C1F01
	v_mov_b32_e32 v14, s11                                     // 000000002B70: 7E1C020B
	v_mad_u64_u32 v[19:20], s[24:25], v8, s14, v[19:20]        // 000000002B74: D1E81813 044C1D08
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002B7C: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s10, v19                        // 000000002B84: 3226260A
	v_addc_co_u32_e32 v20, vcc, v14, v20, vcc                  // 000000002B88: 3828290E
	global_store_dword v[19:20], v12, off                      // 000000002B8C: DC708000 007F0C13

0000000000002b94 BB0_41:
	s_or_b64 exec, exec, s[20:21]                              // 000000002B94: 87FE147E
	s_and_b64 s[20:21], s[4:5], s[8:9]                         // 000000002B98: 86940804
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002B9C: BE882014
	s_cbranch_execz BB0_46                                     // 000000002BA0: BF880023

0000000000002ba4 BB0_42:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002BA4: D04D0014 0001000D
	v_mul_f32_e32 v12, s12, v17                                // 000000002BAC: 0A18220C
	v_mov_b32_e32 v17, 0                                       // 000000002BB0: 7E220280
	s_and_b64 vcc, exec, s[20:21]                              // 000000002BB4: 86EA147E
	s_cbranch_vccz BB0_44                                      // 000000002BB8: BF860011
	v_mov_b32_e32 v19, v7                                      // 000000002BBC: 7E260307
	v_mov_b32_e32 v20, v17                                     // 000000002BC0: 7E280311
	v_mad_u64_u32 v[19:20], s[20:21], s16, v8, v[19:20]        // 000000002BC4: D1E81413 044E1010
	v_mov_b32_e32 v14, s19                                     // 000000002BCC: 7E1C0213
	v_mov_b32_e32 v16, v15                                     // 000000002BD0: 7E20030F
	v_mad_u64_u32 v[19:20], s[20:21], v1, s17, v[19:20]        // 000000002BD4: D1E81413 044C2301
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002BDC: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s18, v19                        // 000000002BE4: 32262612
	v_addc_co_u32_e32 v20, vcc, v14, v20, vcc                  // 000000002BE8: 3828290E
	global_load_dword v14, v[19:20], off offset:192            // 000000002BEC: DC5080C0 0E7F0013
	s_waitcnt vmcnt(0)                                         // 000000002BF4: BF8C0F70
	v_mac_f32_e32 v12, s13, v14                                // 000000002BF8: 2C181C0D
	s_branch BB0_45                                            // 000000002BFC: BF820001

0000000000002c00 BB0_44:
	v_mov_b32_e32 v16, v15                                     // 000000002C00: 7E20030F

0000000000002c04 BB0_45:
	v_mad_u64_u32 v[16:17], s[20:21], v1, s15, v[16:17]        // 000000002C04: D1E81410 04401F01
	v_mad_u64_u32 v[16:17], s[20:21], v8, s14, v[16:17]        // 000000002C0C: D1E81410 04401D08
	v_mov_b32_e32 v8, s11                                      // 000000002C14: 7E10020B
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002C18: D28F0010 00022082
	v_add_co_u32_e32 v16, vcc, s10, v16                        // 000000002C20: 3220200A
	v_addc_co_u32_e32 v17, vcc, v8, v17, vcc                   // 000000002C24: 38222308
	global_store_dword v[16:17], v12, off                      // 000000002C28: DC708000 007F0C10

0000000000002c30 BB0_46:
	s_or_b64 exec, exec, s[8:9]                                // 000000002C30: 87FE087E
	v_add_u32_e32 v8, 32, v18                                  // 000000002C34: 681024A0
	v_cmp_gt_u32_e64 s[8:9], s23, v8                           // 000000002C38: D0CC0008 00021017
	s_and_b64 s[24:25], s[6:7], s[8:9]                         // 000000002C40: 86980806
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002C44: BE942018
	s_cbranch_execz BB0_50                                     // 000000002C48: BF88001F

0000000000002c4c BB0_47:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002C4C: D04D0018 0001000D
	v_mul_f32_e32 v10, s12, v10                                // 000000002C54: 0A14140C
	v_mov_b32_e32 v17, 0                                       // 000000002C58: 7E220280
	v_mov_b32_e32 v16, v7                                      // 000000002C5C: 7E200307
	s_and_b64 vcc, exec, s[24:25]                              // 000000002C60: 86EA187E
	s_cbranch_vccz BB0_49                                      // 000000002C64: BF86000D
	v_mad_u64_u32 v[19:20], s[24:25], s16, v8, v[16:17]        // 000000002C68: D1E81813 04421010
	v_mov_b32_e32 v12, s19                                     // 000000002C70: 7E180213
	v_mad_u64_u32 v[19:20], s[24:25], v1, s17, v[19:20]        // 000000002C74: D1E81813 044C2301
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002C7C: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s18, v19                        // 000000002C84: 32262612
	v_addc_co_u32_e32 v20, vcc, v12, v20, vcc                  // 000000002C88: 3828290C
	global_load_dword v12, v[19:20], off                       // 000000002C8C: DC508000 0C7F0013
	s_waitcnt vmcnt(0)                                         // 000000002C94: BF8C0F70
	v_mac_f32_e32 v10, s13, v12                                // 000000002C98: 2C14180D

0000000000002c9c BB0_49:
	v_mad_u64_u32 v[16:17], s[24:25], v1, s15, v[16:17]        // 000000002C9C: D1E81810 04401F01
	v_mov_b32_e32 v12, s11                                     // 000000002CA4: 7E18020B
	v_mad_u64_u32 v[16:17], s[24:25], v8, s14, v[16:17]        // 000000002CA8: D1E81810 04401D08
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002CB0: D28F0010 00022082
	v_add_co_u32_e32 v16, vcc, s10, v16                        // 000000002CB8: 3220200A
	v_addc_co_u32_e32 v17, vcc, v12, v17, vcc                  // 000000002CBC: 3822230C
	global_store_dword v[16:17], v10, off                      // 000000002CC0: DC708000 007F0A10

0000000000002cc8 BB0_50:
	s_or_b64 exec, exec, s[20:21]                              // 000000002CC8: 87FE147E
	s_and_b64 s[24:25], s[0:1], s[8:9]                         // 000000002CCC: 86980800
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002CD0: BE942018
	s_cbranch_execz BB0_55                                     // 000000002CD4: BF880023

0000000000002cd8 BB0_51:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002CD8: D04D0018 0001000D
	v_mul_f32_e32 v9, s12, v9                                  // 000000002CE0: 0A12120C
	v_mov_b32_e32 v17, 0                                       // 000000002CE4: 7E220280
	s_and_b64 vcc, exec, s[24:25]                              // 000000002CE8: 86EA187E
	s_cbranch_vccz BB0_53                                      // 000000002CEC: BF860011
	v_mov_b32_e32 v19, v7                                      // 000000002CF0: 7E260307
	v_mov_b32_e32 v20, v17                                     // 000000002CF4: 7E280311
	v_mad_u64_u32 v[19:20], s[24:25], s16, v8, v[19:20]        // 000000002CF8: D1E81813 044E1010
	v_mov_b32_e32 v10, s19                                     // 000000002D00: 7E140213
	v_mov_b32_e32 v16, v11                                     // 000000002D04: 7E20030B
	v_mad_u64_u32 v[19:20], s[24:25], v1, s17, v[19:20]        // 000000002D08: D1E81813 044C2301
	v_lshlrev_b64 v[19:20], 2, v[19:20]                        // 000000002D10: D28F0013 00022682
	v_add_co_u32_e32 v19, vcc, s18, v19                        // 000000002D18: 32262612
	v_addc_co_u32_e32 v20, vcc, v10, v20, vcc                  // 000000002D1C: 3828290A
	global_load_dword v10, v[19:20], off offset:64             // 000000002D20: DC508040 0A7F0013
	s_waitcnt vmcnt(0)                                         // 000000002D28: BF8C0F70
	v_mac_f32_e32 v9, s13, v10                                 // 000000002D2C: 2C12140D
	s_branch BB0_54                                            // 000000002D30: BF820001

0000000000002d34 BB0_53:
	v_mov_b32_e32 v16, v11                                     // 000000002D34: 7E20030B

0000000000002d38 BB0_54:
	v_mad_u64_u32 v[16:17], s[24:25], v1, s15, v[16:17]        // 000000002D38: D1E81810 04401F01
	v_mov_b32_e32 v10, s11                                     // 000000002D40: 7E14020B
	v_mad_u64_u32 v[16:17], s[24:25], v8, s14, v[16:17]        // 000000002D44: D1E81810 04401D08
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002D4C: D28F0010 00022082
	v_add_co_u32_e32 v16, vcc, s10, v16                        // 000000002D54: 3220200A
	v_addc_co_u32_e32 v17, vcc, v10, v17, vcc                  // 000000002D58: 3822230A
	global_store_dword v[16:17], v9, off                       // 000000002D5C: DC708000 007F0910

0000000000002d64 BB0_55:
	s_or_b64 exec, exec, s[20:21]                              // 000000002D64: 87FE147E
	s_and_b64 s[24:25], s[2:3], s[8:9]                         // 000000002D68: 86980802
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002D6C: BE942018
	s_cbranch_execz BB0_60                                     // 000000002D70: BF880023

0000000000002d74 BB0_56:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002D74: D04D0018 0001000D
	v_mul_f32_e32 v6, s12, v6                                  // 000000002D7C: 0A0C0C0C
	v_mov_b32_e32 v10, 0                                       // 000000002D80: 7E140280
	s_and_b64 vcc, exec, s[24:25]                              // 000000002D84: 86EA187E
	s_cbranch_vccz BB0_58                                      // 000000002D88: BF860011
	v_mov_b32_e32 v16, v7                                      // 000000002D8C: 7E200307
	v_mov_b32_e32 v17, v10                                     // 000000002D90: 7E22030A
	v_mad_u64_u32 v[16:17], s[24:25], s16, v8, v[16:17]        // 000000002D94: D1E81810 04421010
	v_mov_b32_e32 v12, s19                                     // 000000002D9C: 7E180213
	v_mov_b32_e32 v9, v13                                      // 000000002DA0: 7E12030D
	v_mad_u64_u32 v[16:17], s[24:25], v1, s17, v[16:17]        // 000000002DA4: D1E81810 04402301
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002DAC: D28F0010 00022082
	v_add_co_u32_e32 v16, vcc, s18, v16                        // 000000002DB4: 32202012
	v_addc_co_u32_e32 v17, vcc, v12, v17, vcc                  // 000000002DB8: 3822230C
	global_load_dword v12, v[16:17], off offset:128            // 000000002DBC: DC508080 0C7F0010
	s_waitcnt vmcnt(0)                                         // 000000002DC4: BF8C0F70
	v_mac_f32_e32 v6, s13, v12                                 // 000000002DC8: 2C0C180D
	s_branch BB0_59                                            // 000000002DCC: BF820001

0000000000002dd0 BB0_58:
	v_mov_b32_e32 v9, v13                                      // 000000002DD0: 7E12030D

0000000000002dd4 BB0_59:
	v_mad_u64_u32 v[9:10], s[24:25], v1, s15, v[9:10]          // 000000002DD4: D1E81809 04241F01
	v_mov_b32_e32 v12, s11                                     // 000000002DDC: 7E18020B
	v_mad_u64_u32 v[9:10], s[24:25], v8, s14, v[9:10]          // 000000002DE0: D1E81809 04241D08
	v_lshlrev_b64 v[9:10], 2, v[9:10]                          // 000000002DE8: D28F0009 00021282
	v_add_co_u32_e32 v9, vcc, s10, v9                          // 000000002DF0: 3212120A
	v_addc_co_u32_e32 v10, vcc, v12, v10, vcc                  // 000000002DF4: 3814150C
	global_store_dword v[9:10], v6, off                        // 000000002DF8: DC708000 007F0609

0000000000002e00 BB0_60:
	s_or_b64 exec, exec, s[20:21]                              // 000000002E00: 87FE147E
	s_and_b64 s[20:21], s[4:5], s[8:9]                         // 000000002E04: 86940804
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002E08: BE882014
	s_cbranch_execz BB0_65                                     // 000000002E0C: BF880023

0000000000002e10 BB0_61:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002E10: D04D0014 0001000D
	v_mul_f32_e32 v5, s12, v5                                  // 000000002E18: 0A0A0A0C
	v_mov_b32_e32 v10, 0                                       // 000000002E1C: 7E140280
	s_and_b64 vcc, exec, s[20:21]                              // 000000002E20: 86EA147E
	s_cbranch_vccz BB0_63                                      // 000000002E24: BF860011
	v_mov_b32_e32 v16, v7                                      // 000000002E28: 7E200307
	v_mov_b32_e32 v17, v10                                     // 000000002E2C: 7E22030A
	v_mad_u64_u32 v[16:17], s[20:21], s16, v8, v[16:17]        // 000000002E30: D1E81410 04421010
	v_mov_b32_e32 v6, s19                                      // 000000002E38: 7E0C0213
	v_mov_b32_e32 v9, v15                                      // 000000002E3C: 7E12030F
	v_mad_u64_u32 v[16:17], s[20:21], v1, s17, v[16:17]        // 000000002E40: D1E81410 04402301
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002E48: D28F0010 00022082
	v_add_co_u32_e32 v16, vcc, s18, v16                        // 000000002E50: 32202012
	v_addc_co_u32_e32 v17, vcc, v6, v17, vcc                   // 000000002E54: 38222306
	global_load_dword v6, v[16:17], off offset:192             // 000000002E58: DC5080C0 067F0010
	s_waitcnt vmcnt(0)                                         // 000000002E60: BF8C0F70
	v_mac_f32_e32 v5, s13, v6                                  // 000000002E64: 2C0A0C0D
	s_branch BB0_64                                            // 000000002E68: BF820001

0000000000002e6c BB0_63:
	v_mov_b32_e32 v9, v15                                      // 000000002E6C: 7E12030F

0000000000002e70 BB0_64:
	v_mad_u64_u32 v[9:10], s[20:21], v1, s15, v[9:10]          // 000000002E70: D1E81409 04241F01
	v_mov_b32_e32 v6, s11                                      // 000000002E78: 7E0C020B
	v_mad_u64_u32 v[8:9], s[20:21], v8, s14, v[9:10]           // 000000002E7C: D1E81408 04241D08
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000002E84: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s10, v8                          // 000000002E8C: 3210100A
	v_addc_co_u32_e32 v9, vcc, v6, v9, vcc                     // 000000002E90: 38121306
	global_store_dword v[8:9], v5, off                         // 000000002E94: DC708000 007F0508

0000000000002e9c BB0_65:
	s_or_b64 exec, exec, s[8:9]                                // 000000002E9C: 87FE087E
	v_add_u32_e32 v5, 48, v18                                  // 000000002EA0: 680A24B0
	v_cmp_gt_u32_e64 s[8:9], s23, v5                           // 000000002EA4: D0CC0008 00020A17
	s_and_b64 s[20:21], s[6:7], s[8:9]                         // 000000002EAC: 86940806
	s_and_saveexec_b64 s[6:7], s[20:21]                        // 000000002EB0: BE862014
	s_cbranch_execz BB0_69                                     // 000000002EB4: BF88001F

0000000000002eb8 BB0_66:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002EB8: D04D0014 0001000D
	v_mul_f32_e32 v4, s12, v4                                  // 000000002EC0: 0A08080C
	v_mov_b32_e32 v9, 0                                        // 000000002EC4: 7E120280
	v_mov_b32_e32 v8, v7                                       // 000000002EC8: 7E100307
	s_and_b64 vcc, exec, s[20:21]                              // 000000002ECC: 86EA147E
	s_cbranch_vccz BB0_68                                      // 000000002ED0: BF86000D
	v_mad_u64_u32 v[16:17], s[20:21], s16, v5, v[8:9]          // 000000002ED4: D1E81410 04220A10
	v_mov_b32_e32 v6, s19                                      // 000000002EDC: 7E0C0213
	v_mad_u64_u32 v[16:17], s[20:21], v1, s17, v[16:17]        // 000000002EE0: D1E81410 04402301
	v_lshlrev_b64 v[16:17], 2, v[16:17]                        // 000000002EE8: D28F0010 00022082
	v_add_co_u32_e32 v16, vcc, s18, v16                        // 000000002EF0: 32202012
	v_addc_co_u32_e32 v17, vcc, v6, v17, vcc                   // 000000002EF4: 38222306
	global_load_dword v6, v[16:17], off                        // 000000002EF8: DC508000 067F0010
	s_waitcnt vmcnt(0)                                         // 000000002F00: BF8C0F70
	v_mac_f32_e32 v4, s13, v6                                  // 000000002F04: 2C080C0D

0000000000002f08 BB0_68:
	v_mad_u64_u32 v[8:9], s[20:21], v1, s15, v[8:9]            // 000000002F08: D1E81408 04201F01
	v_mov_b32_e32 v6, s11                                      // 000000002F10: 7E0C020B
	v_mad_u64_u32 v[8:9], s[20:21], v5, s14, v[8:9]            // 000000002F14: D1E81408 04201D05
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000002F1C: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s10, v8                          // 000000002F24: 3210100A
	v_addc_co_u32_e32 v9, vcc, v6, v9, vcc                     // 000000002F28: 38121306
	global_store_dword v[8:9], v4, off                         // 000000002F2C: DC708000 007F0408

0000000000002f34 BB0_69:
	s_or_b64 exec, exec, s[6:7]                                // 000000002F34: 87FE067E
	s_and_b64 s[6:7], s[0:1], s[8:9]                           // 000000002F38: 86860800
	s_and_saveexec_b64 s[0:1], s[6:7]                          // 000000002F3C: BE802006
	s_cbranch_execz BB0_73                                     // 000000002F40: BF880020

0000000000002f44 BB0_70:
	v_cmp_neq_f32_e64 s[6:7], s13, 0                           // 000000002F44: D04D0006 0001000D
	v_mul_f32_e32 v3, s12, v3                                  // 000000002F4C: 0A06060C
	v_mov_b32_e32 v12, 0                                       // 000000002F50: 7E180280
	s_and_b64 vcc, exec, s[6:7]                                // 000000002F54: 86EA067E
	s_cbranch_vccz BB0_72                                      // 000000002F58: BF86000F
	v_mov_b32_e32 v8, v7                                       // 000000002F5C: 7E100307
	v_mov_b32_e32 v9, v12                                      // 000000002F60: 7E12030C
	v_mad_u64_u32 v[8:9], s[6:7], s16, v5, v[8:9]              // 000000002F64: D1E80608 04220A10
	v_mov_b32_e32 v4, s19                                      // 000000002F6C: 7E080213
	v_mad_u64_u32 v[8:9], s[6:7], v1, s17, v[8:9]              // 000000002F70: D1E80608 04202301
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000002F78: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s18, v8                          // 000000002F80: 32101012
	v_addc_co_u32_e32 v9, vcc, v4, v9, vcc                     // 000000002F84: 38121304
	global_load_dword v4, v[8:9], off offset:64                // 000000002F88: DC508040 047F0008
	s_waitcnt vmcnt(0)                                         // 000000002F90: BF8C0F70
	v_mac_f32_e32 v3, s13, v4                                  // 000000002F94: 2C06080D

0000000000002f98 BB0_72:
	v_mad_u64_u32 v[8:9], s[6:7], v1, s15, v[11:12]            // 000000002F98: D1E80608 042C1F01
	v_mov_b32_e32 v4, s11                                      // 000000002FA0: 7E08020B
	v_mad_u64_u32 v[8:9], s[6:7], v5, s14, v[8:9]              // 000000002FA4: D1E80608 04201D05
	v_lshlrev_b64 v[8:9], 2, v[8:9]                            // 000000002FAC: D28F0008 00021082
	v_add_co_u32_e32 v8, vcc, s10, v8                          // 000000002FB4: 3210100A
	v_addc_co_u32_e32 v9, vcc, v4, v9, vcc                     // 000000002FB8: 38121304
	global_store_dword v[8:9], v3, off                         // 000000002FBC: DC708000 007F0308

0000000000002fc4 BB0_73:
	s_or_b64 exec, exec, s[0:1]                                // 000000002FC4: 87FE007E
	s_and_b64 s[2:3], s[2:3], s[8:9]                           // 000000002FC8: 86820802
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002FCC: BE802002
	s_cbranch_execz BB0_77                                     // 000000002FD0: BF880020

0000000000002fd4 BB0_74:
	v_cmp_neq_f32_e64 s[2:3], s13, 0                           // 000000002FD4: D04D0002 0001000D
	v_mul_f32_e32 v2, s12, v2                                  // 000000002FDC: 0A04040C
	v_mov_b32_e32 v14, 0                                       // 000000002FE0: 7E1C0280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002FE4: 86EA027E
	s_cbranch_vccz BB0_76                                      // 000000002FE8: BF86000F
	v_mov_b32_e32 v3, v7                                       // 000000002FEC: 7E060307
	v_mov_b32_e32 v4, v14                                      // 000000002FF0: 7E08030E
	v_mad_u64_u32 v[3:4], s[2:3], s16, v5, v[3:4]              // 000000002FF4: D1E80203 040E0A10
	v_mov_b32_e32 v6, s19                                      // 000000002FFC: 7E0C0213
	v_mad_u64_u32 v[3:4], s[2:3], v1, s17, v[3:4]              // 000000003000: D1E80203 040C2301
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 000000003008: D28F0003 00020682
	v_add_co_u32_e32 v3, vcc, s18, v3                          // 000000003010: 32060612
	v_addc_co_u32_e32 v4, vcc, v6, v4, vcc                     // 000000003014: 38080906
	global_load_dword v3, v[3:4], off offset:128               // 000000003018: DC508080 037F0003
	s_waitcnt vmcnt(0)                                         // 000000003020: BF8C0F70
	v_mac_f32_e32 v2, s13, v3                                  // 000000003024: 2C04060D

0000000000003028 BB0_76:
	v_mad_u64_u32 v[3:4], s[2:3], v1, s15, v[13:14]            // 000000003028: D1E80203 04341F01
	v_mov_b32_e32 v6, s11                                      // 000000003030: 7E0C020B
	v_mad_u64_u32 v[3:4], s[2:3], v5, s14, v[3:4]              // 000000003034: D1E80203 040C1D05
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 00000000303C: D28F0003 00020682
	v_add_co_u32_e32 v3, vcc, s10, v3                          // 000000003044: 3206060A
	v_addc_co_u32_e32 v4, vcc, v6, v4, vcc                     // 000000003048: 38080906
	global_store_dword v[3:4], v2, off                         // 00000000304C: DC708000 007F0203

0000000000003054 BB0_77:
	s_or_b64 exec, exec, s[0:1]                                // 000000003054: 87FE007E
	s_and_b64 s[0:1], s[4:5], s[8:9]                           // 000000003058: 86800804
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 00000000305C: BE822000
	s_cbranch_execz BB0_81                                     // 000000003060: BF88001F

0000000000003064 BB0_78:
	v_cmp_neq_f32_e64 s[0:1], s13, 0                           // 000000003064: D04D0000 0001000D
	v_mul_f32_e32 v0, s12, v0                                  // 00000000306C: 0A00000C
	v_mov_b32_e32 v16, 0                                       // 000000003070: 7E200280
	s_and_b64 vcc, exec, s[0:1]                                // 000000003074: 86EA007E
	s_cbranch_vccz BB0_80                                      // 000000003078: BF86000E
	v_mov_b32_e32 v8, v16                                      // 00000000307C: 7E100310
	v_mad_u64_u32 v[2:3], s[0:1], s16, v5, v[7:8]              // 000000003080: D1E80002 041E0A10
	v_mov_b32_e32 v4, s19                                      // 000000003088: 7E080213
	v_mad_u64_u32 v[2:3], s[0:1], v1, s17, v[2:3]              // 00000000308C: D1E80002 04082301
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 000000003094: D28F0002 00020482
	v_add_co_u32_e32 v2, vcc, s18, v2                          // 00000000309C: 32040412
	v_addc_co_u32_e32 v3, vcc, v4, v3, vcc                     // 0000000030A0: 38060704
	global_load_dword v2, v[2:3], off offset:192               // 0000000030A4: DC5080C0 027F0002
	s_waitcnt vmcnt(0)                                         // 0000000030AC: BF8C0F70
	v_mac_f32_e32 v0, s13, v2                                  // 0000000030B0: 2C00040D

00000000000030b4 BB0_80:
	v_mad_u64_u32 v[1:2], s[0:1], v1, s15, v[15:16]            // 0000000030B4: D1E80001 043C1F01
	v_mov_b32_e32 v3, s11                                      // 0000000030BC: 7E06020B
	v_mad_u64_u32 v[1:2], s[0:1], v5, s14, v[1:2]              // 0000000030C0: D1E80001 04041D05
	v_lshlrev_b64 v[1:2], 2, v[1:2]                            // 0000000030C8: D28F0001 00020282
	v_add_co_u32_e32 v1, vcc, s10, v1                          // 0000000030D0: 3202020A
	v_addc_co_u32_e32 v2, vcc, v3, v2, vcc                     // 0000000030D4: 38040503
	global_store_dword v[1:2], v0, off                         // 0000000030D8: DC708000 007F0001

00000000000030e0 BB0_81:
	s_endpgm                                                   // 0000000030E0: BF810000
