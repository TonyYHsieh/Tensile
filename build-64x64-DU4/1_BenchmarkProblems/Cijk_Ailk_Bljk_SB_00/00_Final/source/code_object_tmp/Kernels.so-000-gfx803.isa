
Kernels.so-000-gfx803.hsaco:	file format ELF64-amdgpu


Disassembly of section .text:

0000000000002100 Cijk_Ailk_Bljk_SB_MT64x64x4_SE_K1:
	s_load_dwordx2 s[30:31], s[4:5], 0x10                      // 000000002100: C0060782 00000010
	s_load_dwordx2 s[28:29], s[4:5], 0x18                      // 000000002108: C0060702 00000018
	s_load_dwordx8 s[12:19], s[4:5], 0x20                      // 000000002110: C00E0302 00000020
	s_load_dwordx4 s[20:23], s[4:5], 0x40                      // 000000002118: C00A0502 00000040
	s_load_dwordx4 s[24:27], s[4:5], 0x50                      // 000000002120: C00A0602 00000050
	s_mov_b32 s33, s9                                          // 000000002128: BEA10009
	v_and_b32_e32 v1, 63, v0                                   // 00000000212C: 260200BF
	s_lshl_b32 s9, s6, 6                                       // 000000002130: 8E098606
	v_and_b32_e32 v14, 3, v0                                   // 000000002134: 261C0083
	s_waitcnt lgkmcnt(0)                                       // 000000002138: BF8C007F
	v_cvt_f32_u32_e32 v2, s24                                  // 00000000213C: 7E040C18
	v_lshrrev_b32_e32 v17, 6, v0                               // 000000002140: 20220086
	v_lshrrev_b32_e32 v6, 2, v0                                // 000000002144: 200C0082
	s_lshl_b32 s7, s7, 6                                       // 000000002148: 8E078607
	v_rcp_iflag_f32_e32 v2, v2                                 // 00000000214C: 7E044702
	v_lshlrev_b32_e32 v7, 6, v14                               // 000000002150: 240E1C86
	v_and_b32_e32 v9, 15, v0                                   // 000000002154: 2612008F
	v_lshrrev_b32_e32 v10, 4, v0                               // 000000002158: 20140084
	v_mul_f32_e32 v2, 0x4f800000, v2                           // 00000000215C: 0A0404FF 4F800000
	v_cvt_u32_f32_e32 v2, v2                                   // 000000002164: 7E040F02
	v_lshlrev_b32_e32 v19, 2, v0                               // 000000002168: 24260082
	v_or_b32_e32 v0, v6, v7                                    // 00000000216C: 28000F06
	s_mov_b32 s11, 0                                           // 000000002170: BE8B0080
	v_mul_lo_u32 v3, v2, s24                                   // 000000002174: D2850003 00003102
	v_mul_hi_u32 v4, v2, s24                                   // 00000000217C: D2860004 00003102
	s_mov_b32 s10, s18                                         // 000000002184: BE8A0012
	v_lshlrev_b32_e32 v23, 2, v0                               // 000000002188: 242E0082
	v_sub_u32_e32 v5, vcc, 0, v3                               // 00000000218C: 340A0680
	v_cmp_eq_u32_e64 s[0:1], 0, v4                             // 000000002190: D0CA0000 00020880
	v_cndmask_b32_e64 v3, v3, v5, s[0:1]                       // 000000002198: D1000003 00020B03
	v_mul_hi_u32 v3, v3, v2                                    // 0000000021A0: D2860003 00020503
	v_or_b32_e32 v4, s9, v1                                    // 0000000021A8: 28080209
	v_alignbit_b32 v0, 0, s18, 30                              // 0000000021AC: D1CE0000 02782480
	v_mov_b32_e32 v12, 0                                       // 0000000021B4: 7E180280
	v_add_u32_e32 v1, vcc, v3, v2                              // 0000000021B8: 32020503
	v_subrev_u32_e32 v2, vcc, v3, v2                           // 0000000021BC: 36040503
	v_cndmask_b32_e64 v1, v2, v1, s[0:1]                       // 0000000021C0: D1000001 00020302
	v_mul_hi_u32 v1, v1, s8                                    // 0000000021C8: D2860001 00001101
	v_or_b32_e32 v2, s7, v6                                    // 0000000021D0: 28040C07
	v_lshlrev_b32_e32 v16, 2, v9                               // 0000000021D4: 24201282
	s_mov_b32 s32, s33                                         // 0000000021D8: BEA00021
	v_mul_lo_u32 v1, v1, s24                                   // 0000000021DC: D2850001 00003101
	s_mov_b32 m0, -1                                           // 0000000021E4: BEFC00C1
	v_sub_u32_e32 v3, vcc, s8, v1                              // 0000000021E8: 34060208
	v_cmp_ge_u32_e64 s[2:3], s8, v1                            // 0000000021EC: D0CE0002 00020208
	v_cmp_le_u32_e64 s[0:1], s24, v3                           // 0000000021F4: D0CB0000 00020618
	v_add_u32_e32 v5, vcc, s24, v3                             // 0000000021FC: 320A0618
	v_subrev_u32_e32 v1, vcc, s24, v3                          // 000000002200: 36020618
	s_and_b64 vcc, s[0:1], s[2:3]                              // 000000002204: 86EA0200
	v_cndmask_b32_e32 v1, v3, v1, vcc                          // 000000002208: 00020303
	s_add_i32 s0, s22, -1                                      // 00000000220C: 8100C116
	v_cndmask_b32_e64 v1, v5, v1, s[2:3]                       // 000000002210: D1000001 000A0305
	s_and_b32 s2, s6, s26                                      // 000000002218: 86021A06
	v_min_u32_e32 v3, s0, v4                                   // 00000000221C: 1C060800
	v_mul_lo_u32 v4, v17, s18                                  // 000000002220: D2850004 00002511
	s_lshl_b32 s2, s2, 4                                       // 000000002228: 8E028402
	s_add_i32 s0, s23, -1                                      // 00000000222C: 8100C117
	v_mul_lo_u32 v5, v1, s19                                   // 000000002230: D2850005 00002701
	v_min_u32_e32 v2, s0, v2                                   // 000000002238: 1C040400
	s_lshl_b64 s[0:1], s[10:11], 2                             // 00000000223C: 8E80820A
	v_mov_b32_e32 v6, s2                                       // 000000002240: 7E0C0202
	v_mul_lo_u32 v0, v0, s2                                    // 000000002244: D2850000 00000500
	v_mul_hi_u32 v6, s0, v6                                    // 00000000224C: D2860006 00020C00
	v_mul_lo_u32 v2, v2, s20                                   // 000000002254: D2850002 00002902
	v_add_u32_e32 v3, vcc, v3, v4                              // 00000000225C: 32060903
	v_add_u32_e32 v11, vcc, v3, v5                             // 000000002260: 32160B03
	v_mul_lo_u32 v3, v1, s21                                   // 000000002264: D2850003 00002B01
	s_mul_i32 s8, s0, s2                                       // 00000000226C: 92080200
	v_add_u32_e32 v7, vcc, v6, v0                              // 000000002270: 320E0106
	v_mov_b32_e32 v6, s8                                       // 000000002274: 7E0C0208
	v_add_u32_e32 v2, vcc, v2, v14                             // 000000002278: 32041D02
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 00000000227C: D28F0006 00020C82
	v_add_u32_e32 v2, vcc, v2, v3                              // 000000002284: 32040702
	s_mov_b32 s3, s11                                          // 000000002288: BE83000B
	v_lshlrev_b64 v[4:5], 2, v[11:12]                          // 00000000228C: D28F0004 00021682
	v_mov_b32_e32 v0, s31                                      // 000000002294: 7E00021F
	v_add_u32_e32 v6, vcc, s30, v6                             // 000000002298: 320C0C1E
	v_mov_b32_e32 v3, v12                                      // 00000000229C: 7E06030C
	v_addc_u32_e32 v0, vcc, v7, v0, vcc                        // 0000000022A0: 38000107
	s_lshr_b32 s6, s25, 2                                      // 0000000022A4: 8F068219
	s_lshl_b64 s[18:19], s[2:3], 4                             // 0000000022A8: 8E928402
	v_add_u32_e32 v24, vcc, v6, v4                             // 0000000022AC: 32300906
	s_add_u32 s3, s18, s28                                     // 0000000022B0: 80031C12
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 0000000022B4: D28F0002 00020482
	v_addc_u32_e32 v25, vcc, v0, v5, vcc                       // 0000000022BC: 38320B00
	s_addc_u32 s8, s19, s29                                    // 0000000022C0: 82081D13
	v_mov_b32_e32 v0, s8                                       // 0000000022C4: 7E000208
	v_add_u32_e32 v26, vcc, s3, v2                             // 0000000022C8: 32340403
	v_addc_u32_e32 v27, vcc, v0, v3, vcc                       // 0000000022CC: 38360700
	s_cmp_eq_u32 s6, 0                                         // 0000000022D0: BF068006
	s_cbranch_scc1 BB0_3                                       // 0000000022D4: BF8500BD
	v_mov_b32_e32 v0, s6                                       // 0000000022D8: 7E000206
	v_mul_hi_u32 v0, s0, v0                                    // 0000000022DC: D2860000 00020000
	s_mul_i32 s3, s1, s6                                       // 0000000022E4: 92030601
	v_lshlrev_b32_e32 v28, 2, v10                              // 0000000022E8: 24381482
	s_movk_i32 s8, 0x400                                       // 0000000022EC: B0080400
	v_add_u32_e32 v0, vcc, s3, v0                              // 0000000022F0: 32000003
	s_mul_i32 s3, s0, s6                                       // 0000000022F4: 92030600
	v_sub_u32_e64 v29, vcc, 0, s3                              // 0000000022F8: D11A6A1D 00000680
	s_and_b32 s3, s25, -4                                      // 000000002300: 8603C419
	s_sub_u32 s18, 0, s3                                       // 000000002304: 80920380
	s_subb_u32 s19, 0, 0                                       // 000000002308: 82938080
	v_subb_u32_e32 v30, vcc, 0, v0, vcc                        // 00000000230C: 3A3C0080
	v_mov_b32_e32 v0, 0                                        // 000000002310: 7E000280
	s_add_i32 s3, s2, 1                                        // 000000002314: 81038102
	s_lshl_b64 s[18:19], s[18:19], 2                           // 000000002318: 8E928212
	s_movk_i32 s10, 0x480                                      // 00000000231C: B00A0480
	s_movk_i32 s20, 0x500                                      // 000000002320: B0140500
	s_movk_i32 s21, 0x580                                      // 000000002324: B0150580
	s_movk_i32 s24, 0x600                                      // 000000002328: B0180600
	s_movk_i32 s26, 0x680                                      // 00000000232C: B01A0680
	s_movk_i32 s27, 0x700                                      // 000000002330: B01B0700
	s_movk_i32 s28, 0x780                                      // 000000002334: B01C0780
	s_mov_b32 s29, s6                                          // 000000002338: BE9D0006
	v_mov_b32_e32 v2, v0                                       // 00000000233C: 7E040300
	v_mov_b32_e32 v3, v0                                       // 000000002340: 7E060300
	v_mov_b32_e32 v4, v0                                       // 000000002344: 7E080300
	v_mov_b32_e32 v5, v0                                       // 000000002348: 7E0A0300
	v_mov_b32_e32 v6, v0                                       // 00000000234C: 7E0C0300
	v_mov_b32_e32 v7, v0                                       // 000000002350: 7E0E0300
	v_mov_b32_e32 v8, v0                                       // 000000002354: 7E100300
	v_mov_b32_e32 v11, v0                                      // 000000002358: 7E160300
	v_mov_b32_e32 v18, v0                                      // 00000000235C: 7E240300
	v_mov_b32_e32 v20, v0                                      // 000000002360: 7E280300
	v_mov_b32_e32 v21, v0                                      // 000000002364: 7E2A0300
	v_mov_b32_e32 v15, v0                                      // 000000002368: 7E1E0300
	v_mov_b32_e32 v13, v0                                      // 00000000236C: 7E1A0300
	v_mov_b32_e32 v22, v0                                      // 000000002370: 7E2C0300
	v_mov_b32_e32 v12, v0                                      // 000000002374: 7E180300

0000000000002378 BB0_2:
	flat_load_dword v31, v[26:27]                              // 000000002378: DC500000 1F00001A
	flat_load_dword v32, v[24:25]                              // 000000002380: DC500000 20000018
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002388: BF8C0070
	s_barrier                                                  // 00000000238C: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 000000002390: BF8C007F
	v_add_u32_e32 v33, vcc, s10, v28                           // 000000002394: 3242380A
	v_add_u32_e32 v39, vcc, s20, v28                           // 000000002398: 324E3814
	v_add_u32_e32 v41, vcc, s21, v28                           // 00000000239C: 32523815
	v_add_u32_e32 v47, vcc, s24, v28                           // 0000000023A0: 325E3818
	v_add_u32_e32 v49, vcc, s26, v28                           // 0000000023A4: 3262381A
	v_add_u32_e32 v53, vcc, s27, v28                           // 0000000023A8: 326A381B
	v_add_u32_e32 v54, vcc, s28, v28                           // 0000000023AC: 326C381C
	v_mov_b32_e32 v56, s19                                     // 0000000023B0: 7E700213
	s_lshl_b64 s[30:31], s[0:1], 2                             // 0000000023B4: 8E9E8200
	v_lshlrev_b64 v[51:52], 2, v[29:30]                        // 0000000023B8: D28F0033 00023A82
	v_mov_b32_e32 v57, s31                                     // 0000000023C0: 7E72021F
	v_mov_b32_e32 v55, s29                                     // 0000000023C4: 7E6E021D
	s_add_i32 s29, s29, -1                                     // 0000000023C8: 811DC11D
	s_cmp_lg_u32 s29, 0                                        // 0000000023CC: BF07801D
	ds_write_b32 v19, v32                                      // 0000000023D0: D81A0000 00002013
	ds_write_b32 v23, v31 offset:1024                          // 0000000023D8: D81A0400 00001F17
	s_waitcnt lgkmcnt(0)                                       // 0000000023E0: BF8C007F
	s_barrier                                                  // 0000000023E4: BF8A0000
	v_add_u32_e32 v31, vcc, s8, v28                            // 0000000023E8: 323E3808
	v_add_u32_e32 v26, vcc, 16, v26                            // 0000000023EC: 32343490
	v_addc_u32_e32 v27, vcc, 0, v27, vcc                       // 0000000023F0: 38363680
	v_add_u32_e32 v58, vcc, s18, v26                           // 0000000023F4: 32743412
	v_addc_u32_e32 v56, vcc, v27, v56, vcc                     // 0000000023F8: 3870711B
	v_add_u32_e32 v24, vcc, s30, v24                           // 0000000023FC: 3230301E
	v_addc_u32_e32 v25, vcc, v25, v57, vcc                     // 000000002400: 38327319
	v_add_u32_e32 v51, vcc, v24, v51                           // 000000002404: 32666718
	s_waitcnt lgkmcnt(0)                                       // 000000002408: BF8C007F
	v_addc_u32_e32 v52, vcc, v25, v52, vcc                     // 00000000240C: 38686919
	ds_read2_b32 v[31:32], v31 offset1:16                      // 000000002410: D86E1000 1F00001F
	ds_read2_b32 v[35:36], v16 offset1:16                      // 000000002418: D86E1000 23000010
	ds_read2_b32 v[37:38], v16 offset0:32 offset1:48           // 000000002420: D86E3020 25000010
	ds_read2_b32 v[33:34], v33 offset1:16                      // 000000002428: D86E1000 21000021
	v_cmp_eq_u32_e32 vcc, s3, v55                              // 000000002430: 7D946E03
	ds_read2_b32 v[39:40], v39 offset1:16                      // 000000002434: D86E1000 27000027
	ds_read2_b32 v[41:42], v41 offset1:16                      // 00000000243C: D86E1000 29000029
	ds_read2_b32 v[43:44], v16 offset0:64 offset1:80           // 000000002444: D86E5040 2B000010
	ds_read2_b32 v[45:46], v16 offset0:96 offset1:112          // 00000000244C: D86E7060 2D000010
	ds_read2_b32 v[47:48], v47 offset1:16                      // 000000002454: D86E1000 2F00002F
	ds_read2_b32 v[49:50], v49 offset1:16                      // 00000000245C: D86E1000 31000031
	v_cndmask_b32_e32 v25, v25, v52, vcc                       // 000000002464: 00326919
	v_cndmask_b32_e32 v24, v24, v51, vcc                       // 000000002468: 00306718
	v_cndmask_b32_e32 v27, v27, v56, vcc                       // 00000000246C: 0036711B
	ds_read2_b32 v[51:52], v53 offset1:16                      // 000000002470: D86E1000 33000035
	v_cndmask_b32_e32 v26, v26, v58, vcc                       // 000000002478: 0034751A
	ds_read2_b32 v[53:54], v54 offset1:16                      // 00000000247C: D86E1000 35000036
	ds_read2_b32 v[55:56], v16 offset0:128 offset1:144         // 000000002484: D86E9080 37000010
	ds_read2_b32 v[57:58], v16 offset0:160 offset1:176         // 00000000248C: D86EB0A0 39000010
	ds_read2_b32 v[59:60], v16 offset0:192 offset1:208         // 000000002494: D86ED0C0 3B000010
	ds_read2_b32 v[61:62], v16 offset0:224 offset1:240         // 00000000249C: D86EF0E0 3D000010
	s_waitcnt lgkmcnt(14)                                      // 0000000024A4: BF8C0E7F
	v_mac_f32_e32 v12, v35, v31                                // 0000000024A8: 2C183F23
	v_mac_f32_e32 v22, v36, v31                                // 0000000024AC: 2C2C3F24
	v_mac_f32_e32 v21, v35, v32                                // 0000000024B0: 2C2A4123
	v_mac_f32_e32 v20, v36, v32                                // 0000000024B4: 2C284124
	s_waitcnt lgkmcnt(12)                                      // 0000000024B8: BF8C0C7F
	v_mac_f32_e32 v8, v35, v33                                 // 0000000024BC: 2C104323
	v_mac_f32_e32 v7, v36, v33                                 // 0000000024C0: 2C0E4324
	v_mac_f32_e32 v4, v35, v34                                 // 0000000024C4: 2C084523
	v_mac_f32_e32 v3, v36, v34                                 // 0000000024C8: 2C064524
	v_mac_f32_e32 v13, v37, v31                                // 0000000024CC: 2C1A3F25
	v_mac_f32_e32 v15, v38, v31                                // 0000000024D0: 2C1E3F26
	v_mac_f32_e32 v18, v37, v32                                // 0000000024D4: 2C244125
	v_mac_f32_e32 v11, v38, v32                                // 0000000024D8: 2C164126
	v_mac_f32_e32 v6, v37, v33                                 // 0000000024DC: 2C0C4325
	v_mac_f32_e32 v5, v38, v33                                 // 0000000024E0: 2C0A4326
	v_mac_f32_e32 v2, v37, v34                                 // 0000000024E4: 2C044525
	v_mac_f32_e32 v0, v38, v34                                 // 0000000024E8: 2C004526
	s_waitcnt lgkmcnt(9)                                       // 0000000024EC: BF8C097F
	v_mac_f32_e32 v12, v43, v39                                // 0000000024F0: 2C184F2B
	v_mac_f32_e32 v22, v44, v39                                // 0000000024F4: 2C2C4F2C
	s_waitcnt lgkmcnt(8)                                       // 0000000024F8: BF8C087F
	v_mac_f32_e32 v13, v45, v39                                // 0000000024FC: 2C1A4F2D
	v_mac_f32_e32 v15, v46, v39                                // 000000002500: 2C1E4F2E
	v_mac_f32_e32 v21, v43, v40                                // 000000002504: 2C2A512B
	v_mac_f32_e32 v20, v44, v40                                // 000000002508: 2C28512C
	v_mac_f32_e32 v18, v45, v40                                // 00000000250C: 2C24512D
	v_mac_f32_e32 v11, v46, v40                                // 000000002510: 2C16512E
	v_mac_f32_e32 v8, v43, v41                                 // 000000002514: 2C10532B
	v_mac_f32_e32 v7, v44, v41                                 // 000000002518: 2C0E532C
	v_mac_f32_e32 v4, v43, v42                                 // 00000000251C: 2C08552B
	v_mac_f32_e32 v3, v44, v42                                 // 000000002520: 2C06552C
	v_mac_f32_e32 v6, v45, v41                                 // 000000002524: 2C0C532D
	v_mac_f32_e32 v5, v46, v41                                 // 000000002528: 2C0A532E
	v_mac_f32_e32 v2, v45, v42                                 // 00000000252C: 2C04552D
	v_mac_f32_e32 v0, v46, v42                                 // 000000002530: 2C00552E
	s_waitcnt lgkmcnt(3)                                       // 000000002534: BF8C037F
	v_mac_f32_e32 v12, v55, v47                                // 000000002538: 2C185F37
	v_mac_f32_e32 v22, v56, v47                                // 00000000253C: 2C2C5F38
	s_waitcnt lgkmcnt(2)                                       // 000000002540: BF8C027F
	v_mac_f32_e32 v13, v57, v47                                // 000000002544: 2C1A5F39
	v_mac_f32_e32 v15, v58, v47                                // 000000002548: 2C1E5F3A
	v_mac_f32_e32 v21, v55, v48                                // 00000000254C: 2C2A6137
	v_mac_f32_e32 v20, v56, v48                                // 000000002550: 2C286138
	v_mac_f32_e32 v18, v57, v48                                // 000000002554: 2C246139
	v_mac_f32_e32 v11, v58, v48                                // 000000002558: 2C16613A
	v_mac_f32_e32 v8, v55, v49                                 // 00000000255C: 2C106337
	v_mac_f32_e32 v7, v56, v49                                 // 000000002560: 2C0E6338
	v_mac_f32_e32 v4, v55, v50                                 // 000000002564: 2C086537
	v_mac_f32_e32 v3, v56, v50                                 // 000000002568: 2C066538
	v_mac_f32_e32 v6, v57, v49                                 // 00000000256C: 2C0C6339
	v_mac_f32_e32 v5, v58, v49                                 // 000000002570: 2C0A633A
	v_mac_f32_e32 v2, v57, v50                                 // 000000002574: 2C046539
	v_mac_f32_e32 v0, v58, v50                                 // 000000002578: 2C00653A
	s_waitcnt lgkmcnt(1)                                       // 00000000257C: BF8C017F
	v_mac_f32_e32 v12, v59, v51                                // 000000002580: 2C18673B
	v_mac_f32_e32 v22, v60, v51                                // 000000002584: 2C2C673C
	s_waitcnt lgkmcnt(0)                                       // 000000002588: BF8C007F
	v_mac_f32_e32 v13, v61, v51                                // 00000000258C: 2C1A673D
	v_mac_f32_e32 v15, v62, v51                                // 000000002590: 2C1E673E
	v_mac_f32_e32 v21, v59, v52                                // 000000002594: 2C2A693B
	v_mac_f32_e32 v20, v60, v52                                // 000000002598: 2C28693C
	v_mac_f32_e32 v18, v61, v52                                // 00000000259C: 2C24693D
	v_mac_f32_e32 v11, v62, v52                                // 0000000025A0: 2C16693E
	v_mac_f32_e32 v8, v59, v53                                 // 0000000025A4: 2C106B3B
	v_mac_f32_e32 v7, v60, v53                                 // 0000000025A8: 2C0E6B3C
	v_mac_f32_e32 v4, v59, v54                                 // 0000000025AC: 2C086D3B
	v_mac_f32_e32 v3, v60, v54                                 // 0000000025B0: 2C066D3C
	v_mac_f32_e32 v6, v61, v53                                 // 0000000025B4: 2C0C6B3D
	v_mac_f32_e32 v5, v62, v53                                 // 0000000025B8: 2C0A6B3E
	v_mac_f32_e32 v2, v61, v54                                 // 0000000025BC: 2C046D3D
	v_mac_f32_e32 v0, v62, v54                                 // 0000000025C0: 2C006D3E
	s_cbranch_scc1 BB0_2                                       // 0000000025C4: BF85FF6C
	s_branch BB0_4                                             // 0000000025C8: BF82000F

00000000000025cc BB0_3:
	v_mov_b32_e32 v22, v12                                     // 0000000025CC: 7E2C030C
	v_mov_b32_e32 v13, v12                                     // 0000000025D0: 7E1A030C
	v_mov_b32_e32 v15, v12                                     // 0000000025D4: 7E1E030C
	v_mov_b32_e32 v21, v12                                     // 0000000025D8: 7E2A030C
	v_mov_b32_e32 v20, v12                                     // 0000000025DC: 7E28030C
	v_mov_b32_e32 v18, v12                                     // 0000000025E0: 7E24030C
	v_mov_b32_e32 v11, v12                                     // 0000000025E4: 7E16030C
	v_mov_b32_e32 v8, v12                                      // 0000000025E8: 7E10030C
	v_mov_b32_e32 v7, v12                                      // 0000000025EC: 7E0E030C
	v_mov_b32_e32 v6, v12                                      // 0000000025F0: 7E0C030C
	v_mov_b32_e32 v5, v12                                      // 0000000025F4: 7E0A030C
	v_mov_b32_e32 v4, v12                                      // 0000000025F8: 7E08030C
	v_mov_b32_e32 v3, v12                                      // 0000000025FC: 7E06030C
	v_mov_b32_e32 v2, v12                                      // 000000002600: 7E04030C
	v_mov_b32_e32 v0, v12                                      // 000000002604: 7E00030C

0000000000002608 BB0_4:
	s_and_b32 s3, s25, 3                                       // 000000002608: 86038319
	v_cmp_gt_u32_e32 vcc, s3, v17                              // 00000000260C: 7D982203
	s_sub_i32 s10, s6, s2                                      // 000000002610: 818A0206
	v_mov_b32_e32 v17, 0                                       // 000000002614: 7E220280
	s_and_saveexec_b64 s[18:19], vcc                           // 000000002618: BE92206A
	s_cbranch_execz BB0_6                                      // 00000000261C: BF88000D

0000000000002620 BB0_5:
	v_mov_b32_e32 v17, s10                                     // 000000002620: 7E22020A
	v_mul_hi_u32 v17, s0, v17                                  // 000000002624: D2860011 00022200
	s_mul_i32 s1, s1, s10                                      // 00000000262C: 92010A01
	s_mul_i32 s0, s0, s10                                      // 000000002630: 92000A00
	v_mov_b32_e32 v28, s0                                      // 000000002634: 7E380200
	v_add_u32_e32 v29, vcc, s1, v17                            // 000000002638: 323A2201
	v_lshlrev_b64 v[28:29], 2, v[28:29]                        // 00000000263C: D28F001C 00023882
	v_add_u32_e32 v24, vcc, v24, v28                           // 000000002644: 32303918
	v_addc_u32_e32 v25, vcc, v25, v29, vcc                     // 000000002648: 38323B19
	flat_load_dword v17, v[24:25]                              // 00000000264C: DC500000 11000018

0000000000002654 BB0_6:
	s_or_b64 exec, exec, s[18:19]                              // 000000002654: 87FE127E
	v_cmp_gt_u32_e32 vcc, s3, v14                              // 000000002658: 7D981C03
	v_mov_b32_e32 v14, 0                                       // 00000000265C: 7E1C0280
	s_and_saveexec_b64 s[0:1], vcc                             // 000000002660: BE80206A
	s_cbranch_execz BB0_8                                      // 000000002664: BF880006

0000000000002668 BB0_7:
	s_lshl_b64 s[10:11], s[10:11], 4                           // 000000002668: 8E8A840A
	v_mov_b32_e32 v14, s11                                     // 00000000266C: 7E1C020B
	v_add_u32_e32 v24, vcc, s10, v26                           // 000000002670: 3230340A
	v_addc_u32_e32 v25, vcc, v27, v14, vcc                     // 000000002674: 38321D1B
	flat_load_dword v14, v[24:25]                              // 000000002678: DC500000 0E000018

0000000000002680 BB0_8:
	s_or_b64 exec, exec, s[0:1]                                // 000000002680: 87FE007E
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002684: BF8C0070
	s_barrier                                                  // 000000002688: BF8A0000
	s_waitcnt lgkmcnt(0)                                       // 00000000268C: BF8C007F
	ds_write_b32 v19, v17                                      // 000000002690: D81A0000 00001113
	ds_write_b32 v23, v14 offset:1024                          // 000000002698: D81A0400 00000E17
	s_waitcnt lgkmcnt(0)                                       // 0000000026A0: BF8C007F
	s_barrier                                                  // 0000000026A4: BF8A0000
	s_load_dwordx2 s[10:11], s[4:5], 0x0                       // 0000000026A8: C0060282 00000000
	s_load_dwordx2 s[18:19], s[4:5], 0x8                       // 0000000026B0: C0060482 00000008
	s_cmp_eq_u32 s3, 0                                         // 0000000026B8: BF068003
	s_waitcnt lgkmcnt(0)                                       // 0000000026BC: BF8C007F
	s_cbranch_scc1 BB0_11                                      // 0000000026C0: BF85002A
	v_mov_b32_e32 v17, s3                                      // 0000000026C4: 7E220203
	v_lshlrev_b32_e32 v14, 2, v10                              // 0000000026C8: 241C1482
	s_movk_i32 s2, 0x100                                       // 0000000026CC: B0020100
	s_movk_i32 s3, 0x400                                       // 0000000026D0: B0030400
	s_movk_i32 s4, 0x480                                       // 0000000026D4: B0040480

00000000000026d8 BB0_10:
	v_add_u32_e32 v19, vcc, s3, v14                            // 0000000026D8: 32261C03
	v_add_u32_e32 v29, vcc, s4, v14                            // 0000000026DC: 323A1C04
	ds_read2_b32 v[23:24], v19 offset1:16                      // 0000000026E0: D86E1000 17000013
	ds_read2_b32 v[25:26], v16 offset1:16                      // 0000000026E8: D86E1000 19000010
	ds_read2_b32 v[27:28], v16 offset0:32 offset1:48           // 0000000026F0: D86E3020 1B000010
	ds_read2_b32 v[29:30], v29 offset1:16                      // 0000000026F8: D86E1000 1D00001D
	v_add_u32_e32 v17, vcc, -1, v17                            // 000000002700: 322222C1
	v_cmp_ne_u32_e32 vcc, 0, v17                               // 000000002704: 7D9A2280
	s_and_b64 vcc, exec, vcc                                   // 000000002708: 86EA6A7E
	v_add_u32_e64 v14, s[0:1], s2, v14                         // 00000000270C: D119000E 00021C02
	v_add_u32_e64 v16, s[0:1], s2, v16                         // 000000002714: D1190010 00022002
	s_waitcnt lgkmcnt(2)                                       // 00000000271C: BF8C027F
	v_mac_f32_e32 v12, v25, v23                                // 000000002720: 2C182F19
	v_mac_f32_e32 v22, v26, v23                                // 000000002724: 2C2C2F1A
	s_waitcnt lgkmcnt(1)                                       // 000000002728: BF8C017F
	v_mac_f32_e32 v13, v27, v23                                // 00000000272C: 2C1A2F1B
	v_mac_f32_e32 v15, v28, v23                                // 000000002730: 2C1E2F1C
	v_mac_f32_e32 v21, v25, v24                                // 000000002734: 2C2A3119
	v_mac_f32_e32 v20, v26, v24                                // 000000002738: 2C28311A
	v_mac_f32_e32 v18, v27, v24                                // 00000000273C: 2C24311B
	v_mac_f32_e32 v11, v28, v24                                // 000000002740: 2C16311C
	s_waitcnt lgkmcnt(0)                                       // 000000002744: BF8C007F
	v_mac_f32_e32 v8, v25, v29                                 // 000000002748: 2C103B19
	v_mac_f32_e32 v7, v26, v29                                 // 00000000274C: 2C0E3B1A
	v_mac_f32_e32 v4, v25, v30                                 // 000000002750: 2C083D19
	v_mac_f32_e32 v3, v26, v30                                 // 000000002754: 2C063D1A
	v_mac_f32_e32 v6, v27, v29                                 // 000000002758: 2C0C3B1B
	v_mac_f32_e32 v5, v28, v29                                 // 00000000275C: 2C0A3B1C
	v_mac_f32_e32 v2, v27, v30                                 // 000000002760: 2C043D1B
	v_mac_f32_e32 v0, v28, v30                                 // 000000002764: 2C003D1C
	s_cbranch_vccnz BB0_10                                     // 000000002768: BF87FFDB

000000000000276c BB0_11:
	v_or_b32_e32 v16, s9, v9                                   // 00000000276C: 28201209
	v_or_b32_e32 v19, s7, v10                                  // 000000002770: 28261407
	v_cmp_gt_u32_e64 s[6:7], s22, v16                          // 000000002774: D0CC0006 00022016
	v_cmp_gt_u32_e64 s[8:9], s23, v19                          // 00000000277C: D0CC0008 00022617
	s_and_b64 s[2:3], s[6:7], s[8:9]                           // 000000002784: 86820806
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002788: BE802002
	s_cbranch_execz BB0_15                                     // 00000000278C: BF88001E

0000000000002790 BB0_12:
	v_cmp_neq_f32_e64 s[2:3], s13, 0                           // 000000002790: D04D0002 0001000D
	v_mul_f32_e32 v9, s12, v12                                 // 000000002798: 0A12180C
	v_mov_b32_e32 v17, 0                                       // 00000000279C: 7E220280
	s_and_b64 vcc, exec, s[2:3]                                // 0000000027A0: 86EA027E
	s_cbranch_vccz BB0_14                                      // 0000000027A4: BF86000D
	v_mad_u64_u32 v[23:24], s[2:3], s16, v19, v[16:17]         // 0000000027A8: D1E80217 04422610
	v_mov_b32_e32 v10, s19                                     // 0000000027B0: 7E140213
	v_mad_u64_u32 v[23:24], s[2:3], v1, s17, v[23:24]          // 0000000027B4: D1E80217 045C2301
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 0000000027BC: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s18, v23                           // 0000000027C4: 322E2E12
	v_addc_u32_e32 v24, vcc, v10, v24, vcc                     // 0000000027C8: 3830310A
	flat_load_dword v10, v[23:24]                              // 0000000027CC: DC500000 0A000017
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000027D4: BF8C0070
	v_mac_f32_e32 v9, s13, v10                                 // 0000000027D8: 2C12140D

00000000000027dc BB0_14:
	v_mad_u64_u32 v[23:24], s[2:3], v1, s15, v[16:17]          // 0000000027DC: D1E80217 04401F01
	v_mov_b32_e32 v10, s11                                     // 0000000027E4: 7E14020B
	v_mad_u64_u32 v[23:24], s[2:3], v19, s14, v[23:24]         // 0000000027E8: D1E80217 045C1D13
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 0000000027F0: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s10, v23                           // 0000000027F8: 322E2E0A
	v_addc_u32_e32 v24, vcc, v10, v24, vcc                     // 0000000027FC: 3830310A
	flat_store_dword v[23:24], v9                              // 000000002800: DC700000 00000917

0000000000002808 BB0_15:
	s_or_b64 exec, exec, s[0:1]                                // 000000002808: 87FE007E
	v_or_b32_e32 v9, 16, v16                                   // 00000000280C: 28122090
	v_cmp_gt_u32_e64 s[0:1], s22, v9                           // 000000002810: D0CC0000 00021216
	s_and_b64 s[4:5], s[0:1], s[8:9]                           // 000000002818: 86840800
	s_and_saveexec_b64 s[2:3], s[4:5]                          // 00000000281C: BE822004
	s_cbranch_execz BB0_19                                     // 000000002820: BF88001E

0000000000002824 BB0_16:
	v_cmp_neq_f32_e64 s[4:5], s13, 0                           // 000000002824: D04D0004 0001000D
	v_mul_f32_e32 v12, s12, v22                                // 00000000282C: 0A182C0C
	v_mov_b32_e32 v10, 0                                       // 000000002830: 7E140280
	s_and_b64 vcc, exec, s[4:5]                                // 000000002834: 86EA047E
	s_cbranch_vccz BB0_18                                      // 000000002838: BF86000D
	v_mad_u64_u32 v[22:23], s[4:5], s16, v19, v[9:10]          // 00000000283C: D1E80416 04262610
	v_mov_b32_e32 v14, s19                                     // 000000002844: 7E1C0213
	v_mad_u64_u32 v[22:23], s[4:5], v1, s17, v[22:23]          // 000000002848: D1E80416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002850: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s18, v22                           // 000000002858: 322C2C12
	v_addc_u32_e32 v23, vcc, v14, v23, vcc                     // 00000000285C: 382E2F0E
	flat_load_dword v14, v[22:23]                              // 000000002860: DC500000 0E000016
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002868: BF8C0070
	v_mac_f32_e32 v12, s13, v14                                // 00000000286C: 2C181C0D

0000000000002870 BB0_18:
	v_mad_u64_u32 v[22:23], s[4:5], v1, s15, v[9:10]           // 000000002870: D1E80416 04241F01
	v_mov_b32_e32 v10, s11                                     // 000000002878: 7E14020B
	v_mad_u64_u32 v[22:23], s[4:5], v19, s14, v[22:23]         // 00000000287C: D1E80416 04581D13
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002884: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s10, v22                           // 00000000288C: 322C2C0A
	v_addc_u32_e32 v23, vcc, v10, v23, vcc                     // 000000002890: 382E2F0A
	flat_store_dword v[22:23], v12                             // 000000002894: DC700000 00000C16

000000000000289c BB0_19:
	s_or_b64 exec, exec, s[2:3]                                // 00000000289C: 87FE027E
	v_or_b32_e32 v12, 32, v16                                  // 0000000028A0: 281820A0
	v_cmp_gt_u32_e64 s[2:3], s22, v12                          // 0000000028A4: D0CC0002 00021816
	s_and_b64 s[20:21], s[2:3], s[8:9]                         // 0000000028AC: 86940802
	s_and_saveexec_b64 s[4:5], s[20:21]                        // 0000000028B0: BE842014
	s_cbranch_execz BB0_23                                     // 0000000028B4: BF88001E

00000000000028b8 BB0_20:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 0000000028B8: D04D0014 0001000D
	v_mul_f32_e32 v10, s12, v13                                // 0000000028C0: 0A141A0C
	v_mov_b32_e32 v13, 0                                       // 0000000028C4: 7E1A0280
	s_and_b64 vcc, exec, s[20:21]                              // 0000000028C8: 86EA147E
	s_cbranch_vccz BB0_22                                      // 0000000028CC: BF86000D
	v_mad_u64_u32 v[22:23], s[20:21], s16, v19, v[12:13]       // 0000000028D0: D1E81416 04322610
	v_mov_b32_e32 v14, s19                                     // 0000000028D8: 7E1C0213
	v_mad_u64_u32 v[22:23], s[20:21], v1, s17, v[22:23]        // 0000000028DC: D1E81416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000028E4: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s18, v22                           // 0000000028EC: 322C2C12
	v_addc_u32_e32 v23, vcc, v14, v23, vcc                     // 0000000028F0: 382E2F0E
	flat_load_dword v14, v[22:23]                              // 0000000028F4: DC500000 0E000016
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 0000000028FC: BF8C0070
	v_mac_f32_e32 v10, s13, v14                                // 000000002900: 2C141C0D

0000000000002904 BB0_22:
	v_mad_u64_u32 v[13:14], s[20:21], v1, s15, v[12:13]        // 000000002904: D1E8140D 04301F01
	v_mov_b32_e32 v17, s11                                     // 00000000290C: 7E22020B
	v_mad_u64_u32 v[13:14], s[20:21], v19, s14, v[13:14]       // 000000002910: D1E8140D 04341D13
	v_lshlrev_b64 v[13:14], 2, v[13:14]                        // 000000002918: D28F000D 00021A82
	v_add_u32_e32 v13, vcc, s10, v13                           // 000000002920: 321A1A0A
	v_addc_u32_e32 v14, vcc, v17, v14, vcc                     // 000000002924: 381C1D11
	flat_store_dword v[13:14], v10                             // 000000002928: DC700000 00000A0D

0000000000002930 BB0_23:
	s_or_b64 exec, exec, s[4:5]                                // 000000002930: 87FE047E
	v_or_b32_e32 v14, 48, v16                                  // 000000002934: 281C20B0
	v_cmp_gt_u32_e64 s[4:5], s22, v14                          // 000000002938: D0CC0004 00021C16
	s_and_b64 s[20:21], s[4:5], s[8:9]                         // 000000002940: 86940804
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002944: BE882014
	s_cbranch_execz BB0_27                                     // 000000002948: BF88001E

000000000000294c BB0_24:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 00000000294C: D04D0014 0001000D
	v_mul_f32_e32 v10, s12, v15                                // 000000002954: 0A141E0C
	v_mov_b32_e32 v15, 0                                       // 000000002958: 7E1E0280
	s_and_b64 vcc, exec, s[20:21]                              // 00000000295C: 86EA147E
	s_cbranch_vccz BB0_26                                      // 000000002960: BF86000D
	v_mad_u64_u32 v[22:23], s[20:21], s16, v19, v[14:15]       // 000000002964: D1E81416 043A2610
	v_mov_b32_e32 v13, s19                                     // 00000000296C: 7E1A0213
	v_mad_u64_u32 v[22:23], s[20:21], v1, s17, v[22:23]        // 000000002970: D1E81416 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002978: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s18, v22                           // 000000002980: 322C2C12
	v_addc_u32_e32 v23, vcc, v13, v23, vcc                     // 000000002984: 382E2F0D
	flat_load_dword v13, v[22:23]                              // 000000002988: DC500000 0D000016
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002990: BF8C0070
	v_mac_f32_e32 v10, s13, v13                                // 000000002994: 2C141A0D

0000000000002998 BB0_26:
	v_mad_u64_u32 v[22:23], s[20:21], v1, s15, v[14:15]        // 000000002998: D1E81416 04381F01
	v_mov_b32_e32 v13, s11                                     // 0000000029A0: 7E1A020B
	v_mad_u64_u32 v[22:23], s[20:21], v19, s14, v[22:23]       // 0000000029A4: D1E81416 04581D13
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 0000000029AC: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s10, v22                           // 0000000029B4: 322C2C0A
	v_addc_u32_e32 v23, vcc, v13, v23, vcc                     // 0000000029B8: 382E2F0D
	flat_store_dword v[22:23], v10                             // 0000000029BC: DC700000 00000A16

00000000000029c4 BB0_27:
	s_or_b64 exec, exec, s[8:9]                                // 0000000029C4: 87FE087E
	v_add_u32_e32 v10, vcc, 16, v19                            // 0000000029C8: 32142690
	v_cmp_gt_u32_e64 s[8:9], s23, v10                          // 0000000029CC: D0CC0008 00021417
	s_and_b64 s[24:25], s[6:7], s[8:9]                         // 0000000029D4: 86980806
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 0000000029D8: BE942018
	s_cbranch_execz BB0_31                                     // 0000000029DC: BF88001F

00000000000029e0 BB0_28:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 0000000029E0: D04D0018 0001000D
	v_mul_f32_e32 v13, s12, v21                                // 0000000029E8: 0A1A2A0C
	v_mov_b32_e32 v22, 0                                       // 0000000029EC: 7E2C0280
	v_mov_b32_e32 v21, v16                                     // 0000000029F0: 7E2A0310
	s_and_b64 vcc, exec, s[24:25]                              // 0000000029F4: 86EA187E
	s_cbranch_vccz BB0_30                                      // 0000000029F8: BF86000D
	v_mad_u64_u32 v[23:24], s[24:25], s16, v10, v[21:22]       // 0000000029FC: D1E81817 04561410
	v_mov_b32_e32 v15, s19                                     // 000000002A04: 7E1E0213
	v_mad_u64_u32 v[23:24], s[24:25], v1, s17, v[23:24]        // 000000002A08: D1E81817 045C2301
	v_lshlrev_b64 v[23:24], 2, v[23:24]                        // 000000002A10: D28F0017 00022E82
	v_add_u32_e32 v23, vcc, s18, v23                           // 000000002A18: 322E2E12
	v_addc_u32_e32 v24, vcc, v15, v24, vcc                     // 000000002A1C: 3830310F
	flat_load_dword v15, v[23:24]                              // 000000002A20: DC500000 0F000017
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002A28: BF8C0070
	v_mac_f32_e32 v13, s13, v15                                // 000000002A2C: 2C1A1E0D

0000000000002a30 BB0_30:
	v_mad_u64_u32 v[21:22], s[24:25], v1, s15, v[21:22]        // 000000002A30: D1E81815 04541F01
	v_mov_b32_e32 v15, s11                                     // 000000002A38: 7E1E020B
	v_mad_u64_u32 v[21:22], s[24:25], v10, s14, v[21:22]       // 000000002A3C: D1E81815 04541D0A
	v_lshlrev_b64 v[21:22], 2, v[21:22]                        // 000000002A44: D28F0015 00022A82
	v_add_u32_e32 v21, vcc, s10, v21                           // 000000002A4C: 322A2A0A
	v_addc_u32_e32 v22, vcc, v15, v22, vcc                     // 000000002A50: 382C2D0F
	flat_store_dword v[21:22], v13                             // 000000002A54: DC700000 00000D15

0000000000002a5c BB0_31:
	s_or_b64 exec, exec, s[20:21]                              // 000000002A5C: 87FE147E
	s_and_b64 s[24:25], s[0:1], s[8:9]                         // 000000002A60: 86980800
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002A64: BE942018
	s_cbranch_execz BB0_35                                     // 000000002A68: BF88001F

0000000000002a6c BB0_32:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002A6C: D04D0018 0001000D
	v_mul_f32_e32 v13, s12, v20                                // 000000002A74: 0A1A280C
	v_mov_b32_e32 v21, 0                                       // 000000002A78: 7E2A0280
	v_mov_b32_e32 v20, v9                                      // 000000002A7C: 7E280309
	s_and_b64 vcc, exec, s[24:25]                              // 000000002A80: 86EA187E
	s_cbranch_vccz BB0_34                                      // 000000002A84: BF86000D
	v_mad_u64_u32 v[22:23], s[24:25], s16, v10, v[20:21]       // 000000002A88: D1E81816 04521410
	v_mov_b32_e32 v15, s19                                     // 000000002A90: 7E1E0213
	v_mad_u64_u32 v[22:23], s[24:25], v1, s17, v[22:23]        // 000000002A94: D1E81816 04582301
	v_lshlrev_b64 v[22:23], 2, v[22:23]                        // 000000002A9C: D28F0016 00022C82
	v_add_u32_e32 v22, vcc, s18, v22                           // 000000002AA4: 322C2C12
	v_addc_u32_e32 v23, vcc, v15, v23, vcc                     // 000000002AA8: 382E2F0F
	flat_load_dword v15, v[22:23]                              // 000000002AAC: DC500000 0F000016
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002AB4: BF8C0070
	v_mac_f32_e32 v13, s13, v15                                // 000000002AB8: 2C1A1E0D

0000000000002abc BB0_34:
	v_mad_u64_u32 v[20:21], s[24:25], v1, s15, v[20:21]        // 000000002ABC: D1E81814 04501F01
	v_mov_b32_e32 v15, s11                                     // 000000002AC4: 7E1E020B
	v_mad_u64_u32 v[20:21], s[24:25], v10, s14, v[20:21]       // 000000002AC8: D1E81814 04501D0A
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000002AD0: D28F0014 00022882
	v_add_u32_e32 v20, vcc, s10, v20                           // 000000002AD8: 3228280A
	v_addc_u32_e32 v21, vcc, v15, v21, vcc                     // 000000002ADC: 382A2B0F
	flat_store_dword v[20:21], v13                             // 000000002AE0: DC700000 00000D14

0000000000002ae8 BB0_35:
	s_or_b64 exec, exec, s[20:21]                              // 000000002AE8: 87FE147E
	s_and_b64 s[24:25], s[2:3], s[8:9]                         // 000000002AEC: 86980802
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002AF0: BE942018
	s_cbranch_execz BB0_39                                     // 000000002AF4: BF88001F

0000000000002af8 BB0_36:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002AF8: D04D0018 0001000D
	v_mul_f32_e32 v13, s12, v18                                // 000000002B00: 0A1A240C
	v_mov_b32_e32 v18, 0                                       // 000000002B04: 7E240280
	v_mov_b32_e32 v17, v12                                     // 000000002B08: 7E22030C
	s_and_b64 vcc, exec, s[24:25]                              // 000000002B0C: 86EA187E
	s_cbranch_vccz BB0_38                                      // 000000002B10: BF86000D
	v_mad_u64_u32 v[20:21], s[24:25], s16, v10, v[17:18]       // 000000002B14: D1E81814 04461410
	v_mov_b32_e32 v15, s19                                     // 000000002B1C: 7E1E0213
	v_mad_u64_u32 v[20:21], s[24:25], v1, s17, v[20:21]        // 000000002B20: D1E81814 04502301
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000002B28: D28F0014 00022882
	v_add_u32_e32 v20, vcc, s18, v20                           // 000000002B30: 32282812
	v_addc_u32_e32 v21, vcc, v15, v21, vcc                     // 000000002B34: 382A2B0F
	flat_load_dword v15, v[20:21]                              // 000000002B38: DC500000 0F000014
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002B40: BF8C0070
	v_mac_f32_e32 v13, s13, v15                                // 000000002B44: 2C1A1E0D

0000000000002b48 BB0_38:
	v_mad_u64_u32 v[17:18], s[24:25], v1, s15, v[17:18]        // 000000002B48: D1E81811 04441F01
	v_mov_b32_e32 v15, s11                                     // 000000002B50: 7E1E020B
	v_mad_u64_u32 v[17:18], s[24:25], v10, s14, v[17:18]       // 000000002B54: D1E81811 04441D0A
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002B5C: D28F0011 00022282
	v_add_u32_e32 v17, vcc, s10, v17                           // 000000002B64: 3222220A
	v_addc_u32_e32 v18, vcc, v15, v18, vcc                     // 000000002B68: 3824250F
	flat_store_dword v[17:18], v13                             // 000000002B6C: DC700000 00000D11

0000000000002b74 BB0_39:
	s_or_b64 exec, exec, s[20:21]                              // 000000002B74: 87FE147E
	s_and_b64 s[20:21], s[4:5], s[8:9]                         // 000000002B78: 86940804
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002B7C: BE882014
	s_cbranch_execz BB0_43                                     // 000000002B80: BF88001F

0000000000002b84 BB0_40:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002B84: D04D0014 0001000D
	v_mul_f32_e32 v11, s12, v11                                // 000000002B8C: 0A16160C
	v_mov_b32_e32 v18, 0                                       // 000000002B90: 7E240280
	v_mov_b32_e32 v17, v14                                     // 000000002B94: 7E22030E
	s_and_b64 vcc, exec, s[20:21]                              // 000000002B98: 86EA147E
	s_cbranch_vccz BB0_42                                      // 000000002B9C: BF86000D
	v_mad_u64_u32 v[20:21], s[20:21], s16, v10, v[17:18]       // 000000002BA0: D1E81414 04461410
	v_mov_b32_e32 v13, s19                                     // 000000002BA8: 7E1A0213
	v_mad_u64_u32 v[20:21], s[20:21], v1, s17, v[20:21]        // 000000002BAC: D1E81414 04502301
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000002BB4: D28F0014 00022882
	v_add_u32_e32 v20, vcc, s18, v20                           // 000000002BBC: 32282812
	v_addc_u32_e32 v21, vcc, v13, v21, vcc                     // 000000002BC0: 382A2B0D
	flat_load_dword v13, v[20:21]                              // 000000002BC4: DC500000 0D000014
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002BCC: BF8C0070
	v_mac_f32_e32 v11, s13, v13                                // 000000002BD0: 2C161A0D

0000000000002bd4 BB0_42:
	v_mad_u64_u32 v[17:18], s[20:21], v1, s15, v[17:18]        // 000000002BD4: D1E81411 04441F01
	v_mad_u64_u32 v[17:18], s[20:21], v10, s14, v[17:18]       // 000000002BDC: D1E81411 04441D0A
	v_mov_b32_e32 v10, s11                                     // 000000002BE4: 7E14020B
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002BE8: D28F0011 00022282
	v_add_u32_e32 v17, vcc, s10, v17                           // 000000002BF0: 3222220A
	v_addc_u32_e32 v18, vcc, v10, v18, vcc                     // 000000002BF4: 3824250A
	flat_store_dword v[17:18], v11                             // 000000002BF8: DC700000 00000B11

0000000000002c00 BB0_43:
	s_or_b64 exec, exec, s[8:9]                                // 000000002C00: 87FE087E
	v_add_u32_e32 v10, vcc, 32, v19                            // 000000002C04: 321426A0
	v_cmp_gt_u32_e64 s[8:9], s23, v10                          // 000000002C08: D0CC0008 00021417
	s_and_b64 s[24:25], s[6:7], s[8:9]                         // 000000002C10: 86980806
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002C14: BE942018
	s_cbranch_execz BB0_47                                     // 000000002C18: BF88001F

0000000000002c1c BB0_44:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002C1C: D04D0018 0001000D
	v_mul_f32_e32 v8, s12, v8                                  // 000000002C24: 0A10100C
	v_mov_b32_e32 v18, 0                                       // 000000002C28: 7E240280
	v_mov_b32_e32 v17, v16                                     // 000000002C2C: 7E220310
	s_and_b64 vcc, exec, s[24:25]                              // 000000002C30: 86EA187E
	s_cbranch_vccz BB0_46                                      // 000000002C34: BF86000D
	v_mad_u64_u32 v[20:21], s[24:25], s16, v10, v[17:18]       // 000000002C38: D1E81814 04461410
	v_mov_b32_e32 v11, s19                                     // 000000002C40: 7E160213
	v_mad_u64_u32 v[20:21], s[24:25], v1, s17, v[20:21]        // 000000002C44: D1E81814 04502301
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000002C4C: D28F0014 00022882
	v_add_u32_e32 v20, vcc, s18, v20                           // 000000002C54: 32282812
	v_addc_u32_e32 v21, vcc, v11, v21, vcc                     // 000000002C58: 382A2B0B
	flat_load_dword v11, v[20:21]                              // 000000002C5C: DC500000 0B000014
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002C64: BF8C0070
	v_mac_f32_e32 v8, s13, v11                                 // 000000002C68: 2C10160D

0000000000002c6c BB0_46:
	v_mad_u64_u32 v[17:18], s[24:25], v1, s15, v[17:18]        // 000000002C6C: D1E81811 04441F01
	v_mov_b32_e32 v11, s11                                     // 000000002C74: 7E16020B
	v_mad_u64_u32 v[17:18], s[24:25], v10, s14, v[17:18]       // 000000002C78: D1E81811 04441D0A
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002C80: D28F0011 00022282
	v_add_u32_e32 v17, vcc, s10, v17                           // 000000002C88: 3222220A
	v_addc_u32_e32 v18, vcc, v11, v18, vcc                     // 000000002C8C: 3824250B
	flat_store_dword v[17:18], v8                              // 000000002C90: DC700000 00000811

0000000000002c98 BB0_47:
	s_or_b64 exec, exec, s[20:21]                              // 000000002C98: 87FE147E
	s_and_b64 s[24:25], s[0:1], s[8:9]                         // 000000002C9C: 86980800
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002CA0: BE942018
	s_cbranch_execz BB0_51                                     // 000000002CA4: BF88001F

0000000000002ca8 BB0_48:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002CA8: D04D0018 0001000D
	v_mul_f32_e32 v7, s12, v7                                  // 000000002CB0: 0A0E0E0C
	v_mov_b32_e32 v18, 0                                       // 000000002CB4: 7E240280
	v_mov_b32_e32 v17, v9                                      // 000000002CB8: 7E220309
	s_and_b64 vcc, exec, s[24:25]                              // 000000002CBC: 86EA187E
	s_cbranch_vccz BB0_50                                      // 000000002CC0: BF86000D
	v_mad_u64_u32 v[20:21], s[24:25], s16, v10, v[17:18]       // 000000002CC4: D1E81814 04461410
	v_mov_b32_e32 v8, s19                                      // 000000002CCC: 7E100213
	v_mad_u64_u32 v[20:21], s[24:25], v1, s17, v[20:21]        // 000000002CD0: D1E81814 04502301
	v_lshlrev_b64 v[20:21], 2, v[20:21]                        // 000000002CD8: D28F0014 00022882
	v_add_u32_e32 v20, vcc, s18, v20                           // 000000002CE0: 32282812
	v_addc_u32_e32 v21, vcc, v8, v21, vcc                      // 000000002CE4: 382A2B08
	flat_load_dword v8, v[20:21]                               // 000000002CE8: DC500000 08000014
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002CF0: BF8C0070
	v_mac_f32_e32 v7, s13, v8                                  // 000000002CF4: 2C0E100D

0000000000002cf8 BB0_50:
	v_mad_u64_u32 v[17:18], s[24:25], v1, s15, v[17:18]        // 000000002CF8: D1E81811 04441F01
	v_mov_b32_e32 v8, s11                                      // 000000002D00: 7E10020B
	v_mad_u64_u32 v[17:18], s[24:25], v10, s14, v[17:18]       // 000000002D04: D1E81811 04441D0A
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002D0C: D28F0011 00022282
	v_add_u32_e32 v17, vcc, s10, v17                           // 000000002D14: 3222220A
	v_addc_u32_e32 v18, vcc, v8, v18, vcc                      // 000000002D18: 38242508
	flat_store_dword v[17:18], v7                              // 000000002D1C: DC700000 00000711

0000000000002d24 BB0_51:
	s_or_b64 exec, exec, s[20:21]                              // 000000002D24: 87FE147E
	s_and_b64 s[24:25], s[2:3], s[8:9]                         // 000000002D28: 86980802
	s_and_saveexec_b64 s[20:21], s[24:25]                      // 000000002D2C: BE942018
	s_cbranch_execz BB0_55                                     // 000000002D30: BF88001F

0000000000002d34 BB0_52:
	v_cmp_neq_f32_e64 s[24:25], s13, 0                         // 000000002D34: D04D0018 0001000D
	v_mul_f32_e32 v6, s12, v6                                  // 000000002D3C: 0A0C0C0C
	v_mov_b32_e32 v8, 0                                        // 000000002D40: 7E100280
	v_mov_b32_e32 v7, v12                                      // 000000002D44: 7E0E030C
	s_and_b64 vcc, exec, s[24:25]                              // 000000002D48: 86EA187E
	s_cbranch_vccz BB0_54                                      // 000000002D4C: BF86000D
	v_mad_u64_u32 v[17:18], s[24:25], s16, v10, v[7:8]         // 000000002D50: D1E81811 041E1410
	v_mov_b32_e32 v11, s19                                     // 000000002D58: 7E160213
	v_mad_u64_u32 v[17:18], s[24:25], v1, s17, v[17:18]        // 000000002D5C: D1E81811 04442301
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002D64: D28F0011 00022282
	v_add_u32_e32 v17, vcc, s18, v17                           // 000000002D6C: 32222212
	v_addc_u32_e32 v18, vcc, v11, v18, vcc                     // 000000002D70: 3824250B
	flat_load_dword v11, v[17:18]                              // 000000002D74: DC500000 0B000011
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002D7C: BF8C0070
	v_mac_f32_e32 v6, s13, v11                                 // 000000002D80: 2C0C160D

0000000000002d84 BB0_54:
	v_mad_u64_u32 v[7:8], s[24:25], v1, s15, v[7:8]            // 000000002D84: D1E81807 041C1F01
	v_mov_b32_e32 v11, s11                                     // 000000002D8C: 7E16020B
	v_mad_u64_u32 v[7:8], s[24:25], v10, s14, v[7:8]           // 000000002D90: D1E81807 041C1D0A
	v_lshlrev_b64 v[7:8], 2, v[7:8]                            // 000000002D98: D28F0007 00020E82
	v_add_u32_e32 v7, vcc, s10, v7                             // 000000002DA0: 320E0E0A
	v_addc_u32_e32 v8, vcc, v11, v8, vcc                       // 000000002DA4: 3810110B
	flat_store_dword v[7:8], v6                                // 000000002DA8: DC700000 00000607

0000000000002db0 BB0_55:
	s_or_b64 exec, exec, s[20:21]                              // 000000002DB0: 87FE147E
	s_and_b64 s[20:21], s[4:5], s[8:9]                         // 000000002DB4: 86940804
	s_and_saveexec_b64 s[8:9], s[20:21]                        // 000000002DB8: BE882014
	s_cbranch_execz BB0_59                                     // 000000002DBC: BF88001F

0000000000002dc0 BB0_56:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002DC0: D04D0014 0001000D
	v_mul_f32_e32 v5, s12, v5                                  // 000000002DC8: 0A0A0A0C
	v_mov_b32_e32 v7, 0                                        // 000000002DCC: 7E0E0280
	v_mov_b32_e32 v6, v14                                      // 000000002DD0: 7E0C030E
	s_and_b64 vcc, exec, s[20:21]                              // 000000002DD4: 86EA147E
	s_cbranch_vccz BB0_58                                      // 000000002DD8: BF86000D
	v_mad_u64_u32 v[17:18], s[20:21], s16, v10, v[6:7]         // 000000002DDC: D1E81411 041A1410
	v_mov_b32_e32 v8, s19                                      // 000000002DE4: 7E100213
	v_mad_u64_u32 v[17:18], s[20:21], v1, s17, v[17:18]        // 000000002DE8: D1E81411 04442301
	v_lshlrev_b64 v[17:18], 2, v[17:18]                        // 000000002DF0: D28F0011 00022282
	v_add_u32_e32 v17, vcc, s18, v17                           // 000000002DF8: 32222212
	v_addc_u32_e32 v18, vcc, v8, v18, vcc                      // 000000002DFC: 38242508
	flat_load_dword v8, v[17:18]                               // 000000002E00: DC500000 08000011
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002E08: BF8C0070
	v_mac_f32_e32 v5, s13, v8                                  // 000000002E0C: 2C0A100D

0000000000002e10 BB0_58:
	v_mad_u64_u32 v[6:7], s[20:21], v1, s15, v[6:7]            // 000000002E10: D1E81406 04181F01
	v_mov_b32_e32 v8, s11                                      // 000000002E18: 7E10020B
	v_mad_u64_u32 v[6:7], s[20:21], v10, s14, v[6:7]           // 000000002E1C: D1E81406 04181D0A
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002E24: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s10, v6                             // 000000002E2C: 320C0C0A
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 000000002E30: 380E0F08
	flat_store_dword v[6:7], v5                                // 000000002E34: DC700000 00000506

0000000000002e3c BB0_59:
	s_or_b64 exec, exec, s[8:9]                                // 000000002E3C: 87FE087E
	v_add_u32_e32 v5, vcc, 48, v19                             // 000000002E40: 320A26B0
	v_cmp_gt_u32_e64 s[8:9], s23, v5                           // 000000002E44: D0CC0008 00020A17
	s_and_b64 s[20:21], s[6:7], s[8:9]                         // 000000002E4C: 86940806
	s_and_saveexec_b64 s[6:7], s[20:21]                        // 000000002E50: BE862014
	s_cbranch_execz BB0_63                                     // 000000002E54: BF88001E

0000000000002e58 BB0_60:
	v_cmp_neq_f32_e64 s[20:21], s13, 0                         // 000000002E58: D04D0014 0001000D
	v_mul_f32_e32 v4, s12, v4                                  // 000000002E60: 0A08080C
	v_mov_b32_e32 v17, 0                                       // 000000002E64: 7E220280
	s_and_b64 vcc, exec, s[20:21]                              // 000000002E68: 86EA147E
	s_cbranch_vccz BB0_62                                      // 000000002E6C: BF86000D
	v_mad_u64_u32 v[6:7], s[20:21], s16, v5, v[16:17]          // 000000002E70: D1E81406 04420A10
	v_mov_b32_e32 v8, s19                                      // 000000002E78: 7E100213
	v_mad_u64_u32 v[6:7], s[20:21], v1, s17, v[6:7]            // 000000002E7C: D1E81406 04182301
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002E84: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s18, v6                             // 000000002E8C: 320C0C12
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 000000002E90: 380E0F08
	flat_load_dword v6, v[6:7]                                 // 000000002E94: DC500000 06000006
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002E9C: BF8C0070
	v_mac_f32_e32 v4, s13, v6                                  // 000000002EA0: 2C080C0D

0000000000002ea4 BB0_62:
	v_mad_u64_u32 v[6:7], s[20:21], v1, s15, v[16:17]          // 000000002EA4: D1E81406 04401F01
	v_mov_b32_e32 v8, s11                                      // 000000002EAC: 7E10020B
	v_mad_u64_u32 v[6:7], s[20:21], v5, s14, v[6:7]            // 000000002EB0: D1E81406 04181D05
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002EB8: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s10, v6                             // 000000002EC0: 320C0C0A
	v_addc_u32_e32 v7, vcc, v8, v7, vcc                        // 000000002EC4: 380E0F08
	flat_store_dword v[6:7], v4                                // 000000002EC8: DC700000 00000406

0000000000002ed0 BB0_63:
	s_or_b64 exec, exec, s[6:7]                                // 000000002ED0: 87FE067E
	s_and_b64 s[6:7], s[0:1], s[8:9]                           // 000000002ED4: 86860800
	s_and_saveexec_b64 s[0:1], s[6:7]                          // 000000002ED8: BE802006
	s_cbranch_execz BB0_67                                     // 000000002EDC: BF88001E

0000000000002ee0 BB0_64:
	v_cmp_neq_f32_e64 s[6:7], s13, 0                           // 000000002EE0: D04D0006 0001000D
	v_mul_f32_e32 v3, s12, v3                                  // 000000002EE8: 0A06060C
	v_mov_b32_e32 v10, 0                                       // 000000002EEC: 7E140280
	s_and_b64 vcc, exec, s[6:7]                                // 000000002EF0: 86EA067E
	s_cbranch_vccz BB0_66                                      // 000000002EF4: BF86000D
	v_mad_u64_u32 v[6:7], s[6:7], s16, v5, v[9:10]             // 000000002EF8: D1E80606 04260A10
	v_mov_b32_e32 v4, s19                                      // 000000002F00: 7E080213
	v_mad_u64_u32 v[6:7], s[6:7], v1, s17, v[6:7]              // 000000002F04: D1E80606 04182301
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002F0C: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s18, v6                             // 000000002F14: 320C0C12
	v_addc_u32_e32 v7, vcc, v4, v7, vcc                        // 000000002F18: 380E0F04
	flat_load_dword v4, v[6:7]                                 // 000000002F1C: DC500000 04000006
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002F24: BF8C0070
	v_mac_f32_e32 v3, s13, v4                                  // 000000002F28: 2C06080D

0000000000002f2c BB0_66:
	v_mad_u64_u32 v[6:7], s[6:7], v1, s15, v[9:10]             // 000000002F2C: D1E80606 04241F01
	v_mov_b32_e32 v4, s11                                      // 000000002F34: 7E08020B
	v_mad_u64_u32 v[6:7], s[6:7], v5, s14, v[6:7]              // 000000002F38: D1E80606 04181D05
	v_lshlrev_b64 v[6:7], 2, v[6:7]                            // 000000002F40: D28F0006 00020C82
	v_add_u32_e32 v6, vcc, s10, v6                             // 000000002F48: 320C0C0A
	v_addc_u32_e32 v7, vcc, v4, v7, vcc                        // 000000002F4C: 380E0F04
	flat_store_dword v[6:7], v3                                // 000000002F50: DC700000 00000306

0000000000002f58 BB0_67:
	s_or_b64 exec, exec, s[0:1]                                // 000000002F58: 87FE007E
	s_and_b64 s[2:3], s[2:3], s[8:9]                           // 000000002F5C: 86820802
	s_and_saveexec_b64 s[0:1], s[2:3]                          // 000000002F60: BE802002
	s_cbranch_execz BB0_71                                     // 000000002F64: BF88001E

0000000000002f68 BB0_68:
	v_cmp_neq_f32_e64 s[2:3], s13, 0                           // 000000002F68: D04D0002 0001000D
	v_mul_f32_e32 v2, s12, v2                                  // 000000002F70: 0A04040C
	v_mov_b32_e32 v13, 0                                       // 000000002F74: 7E1A0280
	s_and_b64 vcc, exec, s[2:3]                                // 000000002F78: 86EA027E
	s_cbranch_vccz BB0_70                                      // 000000002F7C: BF86000D
	v_mad_u64_u32 v[3:4], s[2:3], s16, v5, v[12:13]            // 000000002F80: D1E80203 04320A10
	v_mov_b32_e32 v6, s19                                      // 000000002F88: 7E0C0213
	v_mad_u64_u32 v[3:4], s[2:3], v1, s17, v[3:4]              // 000000002F8C: D1E80203 040C2301
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 000000002F94: D28F0003 00020682
	v_add_u32_e32 v3, vcc, s18, v3                             // 000000002F9C: 32060612
	v_addc_u32_e32 v4, vcc, v6, v4, vcc                        // 000000002FA0: 38080906
	flat_load_dword v3, v[3:4]                                 // 000000002FA4: DC500000 03000003
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000002FAC: BF8C0070
	v_mac_f32_e32 v2, s13, v3                                  // 000000002FB0: 2C04060D

0000000000002fb4 BB0_70:
	v_mad_u64_u32 v[3:4], s[2:3], v1, s15, v[12:13]            // 000000002FB4: D1E80203 04301F01
	v_mov_b32_e32 v6, s11                                      // 000000002FBC: 7E0C020B
	v_mad_u64_u32 v[3:4], s[2:3], v5, s14, v[3:4]              // 000000002FC0: D1E80203 040C1D05
	v_lshlrev_b64 v[3:4], 2, v[3:4]                            // 000000002FC8: D28F0003 00020682
	v_add_u32_e32 v3, vcc, s10, v3                             // 000000002FD0: 3206060A
	v_addc_u32_e32 v4, vcc, v6, v4, vcc                        // 000000002FD4: 38080906
	flat_store_dword v[3:4], v2                                // 000000002FD8: DC700000 00000203

0000000000002fe0 BB0_71:
	s_or_b64 exec, exec, s[0:1]                                // 000000002FE0: 87FE007E
	s_and_b64 s[0:1], s[4:5], s[8:9]                           // 000000002FE4: 86800804
	s_and_saveexec_b64 s[2:3], s[0:1]                          // 000000002FE8: BE822000
	s_cbranch_execz BB0_75                                     // 000000002FEC: BF88001E

0000000000002ff0 BB0_72:
	v_cmp_neq_f32_e64 s[0:1], s13, 0                           // 000000002FF0: D04D0000 0001000D
	v_mul_f32_e32 v0, s12, v0                                  // 000000002FF8: 0A00000C
	v_mov_b32_e32 v15, 0                                       // 000000002FFC: 7E1E0280
	s_and_b64 vcc, exec, s[0:1]                                // 000000003000: 86EA007E
	s_cbranch_vccz BB0_74                                      // 000000003004: BF86000D
	v_mad_u64_u32 v[2:3], s[0:1], s16, v5, v[14:15]            // 000000003008: D1E80002 043A0A10
	v_mov_b32_e32 v4, s19                                      // 000000003010: 7E080213
	v_mad_u64_u32 v[2:3], s[0:1], v1, s17, v[2:3]              // 000000003014: D1E80002 04082301
	v_lshlrev_b64 v[2:3], 2, v[2:3]                            // 00000000301C: D28F0002 00020482
	v_add_u32_e32 v2, vcc, s18, v2                             // 000000003024: 32040412
	v_addc_u32_e32 v3, vcc, v4, v3, vcc                        // 000000003028: 38060704
	flat_load_dword v2, v[2:3]                                 // 00000000302C: DC500000 02000002
	s_waitcnt vmcnt(0) lgkmcnt(0)                              // 000000003034: BF8C0070
	v_mac_f32_e32 v0, s13, v2                                  // 000000003038: 2C00040D

000000000000303c BB0_74:
	v_mad_u64_u32 v[1:2], s[0:1], v1, s15, v[14:15]            // 00000000303C: D1E80001 04381F01
	v_mov_b32_e32 v3, s11                                      // 000000003044: 7E06020B
	v_mad_u64_u32 v[1:2], s[0:1], v5, s14, v[1:2]              // 000000003048: D1E80001 04041D05
	v_lshlrev_b64 v[1:2], 2, v[1:2]                            // 000000003050: D28F0001 00020282
	v_add_u32_e32 v1, vcc, s10, v1                             // 000000003058: 3202020A
	v_addc_u32_e32 v2, vcc, v3, v2, vcc                        // 00000000305C: 38040503
	flat_store_dword v[1:2], v0                                // 000000003060: DC700000 00000001

0000000000003068 BB0_75:
	s_endpgm                                                   // 000000003068: BF810000
